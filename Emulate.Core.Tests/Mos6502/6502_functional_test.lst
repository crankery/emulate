AS65 Assembler for R6502 [1.42].  Copyright 1994-2007, Frank A. Kingswood                                                Page    1
---------------------------------------------------- 6502_functional_test.a65 ----------------------------------------------------

5302 lines read, no errors in pass 1.
                        ;
                        ; 6 5 0 2   F U N C T I O N A L   T E S T S
                        ;
                        ; Copyright (C) 2012  Klaus Dormann
                        ;
                        ; This program is free software: you can redistribute it and/or modify
                        ; it under the terms of the GNU General Public License as published by
                        ; the Free Software Foundation, either version 3 of the License, or
                        ; (at your option) any later version.
                        ;
                        ; This program is distributed in the hope that it will be useful,
                        ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                        ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        ; GNU General Public License for more details.
                        ;
                        ; You should have received a copy of the GNU General Public License
                        ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                        
                        
                        ; This program is designed to test all opcodes of a 6502 emulator using all
                        ; addressing modes with focus on proper setting of the processor status
                        ; register bits.
                        ;
                        ; version 30-jul-2012
                        ; contact info at http://2m5.de or email K@2m5.de
                        ;
                        ; assembled with AS65 from http://www.kingswood-consulting.co.uk/assemblers/
                        ; command line switches: -l -m -s2 -w -h0
                        ;                         |  |  |   |  no page headers in listing
                        ;                         |  |  |   wide listing (133 char/col)
                        ;                         |  |  write intel hex file instead of binary
                        ;                         |  expand macros in listing
                        ;                         generate pass2 listing
                        ;
                        ; No IO - should be run from a monitor with access to registers.
                        ; To run load intel hex image with a load command, than alter PC to 1000 hex and
                        ; enter a go command.
                        ; Loop on program counter determines error or successful completion of test.
                        ; Check listing for relevant traps (jump/branch *).
                        ; Please note that in early tests some instructions will have to be used before
                        ; they are actually tested!
                        ;
                        ; RESET, NMI or IRQ should not occur and will be trapped if vectors are enabled.
                        ; Tests documented behavior of the original NMOS 6502 only! No unofficial
                        ; opcodes. Additional opcodes of newer versions of the CPU (65C02, 65816) will
                        ; not be tested. Decimal ops will only be tested with valid BCD operands and
                        ; N V Z flags will be ignored.
                        ;
                        ; Debugging hints:
                        ;     Most of the code is written sequentially. if you hit a trap, check the
                        ;   immediately preceeding code for the instruction to be tested. Results are
                        ;   tested first, flags are checked second by pushing them onto the stack and
                        ;   pulling them to the accumulator after the result was checked. The "real"
                        ;   flags are no longer valid for the tested instruction at this time!
                        ;     If the tested instruction was indexed, the relevant index (X or Y) must
                        ;   also be checked. Opposed to the flags, X and Y registers are still valid.
                        ;
                        ; versions:
                        ;   28-jul-2012  1st version distributed for testing
                        ;   29-jul-2012  fixed references to location 0, now #0
                        ;                added license - GPLv3
                        ;   30-jul-2012  added configuration options
                        
                        
                        ; C O N F I G U R A T I O N
                        ;
                        ;ROM_vectors writable (0=no, 1=yes)
                        ;if ROM vectors can not be used interrupts will not be trapped
                        ;as a consequence BRK can not be tested but will be emulated to test RTI
0001 =                  ROM_vectors = 1
                        ;load_data_direct (0=move from code segment, 1=load directly)
                        ;loading directly is preferred but may not be supported by your platform
                        ;0 produces only consecutive object code, 1 is not suitable for a binary image
0001 =                  load_data_direct = 1
                        ;I_flag behavior (0=force enabled, 1=force disabled, 2=prohibit change, 3=allow
                        ;change) 2 requires extra code and is not recommended. SEI & CLI can only be
                        ;tested if you allow changing the interrupt status (I_flag = 3)
0003 =                  I_flag = 3
                        ;configure memory - try to stay away from memory used by the system
                        ;zero_page memory start address, $55 (85) consecutive Bytes required
                        ;                                add 2 if I_flag = 2
000a =                  zero_page = $a
                        ;data_segment memory start address, $5A (90) consecutive Bytes required
0200 =                  data_segment = $200
                        ;code_segment memory start address, 12kB of consecutive space required
                        ;                                   add 2.5 kB if I_flag = 2
                        ;parts of the code are self modifying and must reside in RAM
1000 =                  code_segment = $1000
                        
                        
                                if I_flag = 0
                        load_flag   macro       ;force enable interrupts
                                    lda #\1&$fb ;mask I-flag
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro       ;force disable interrupts
                                    lda #\1|4
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro       ;never change I-flag
                                    lda #\1
                                    ora flag_I_on
                                    and flag_I_off
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro       ;allow test to change I-flag
                                    lda #\1
                                    endm
                                endif
                        
                        set_stat    macro       ;setting flags in the processor status register
                                    load_flag \1
                                    pha         ;use stack to load status
                                    plp
                                    endm
                        
                        set_a       macro       ;precharging accu & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_x       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldx #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_y       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldy #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_ax      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;precharge accu
                                    plp
                                    endm
                        
                        set_ay      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,y    ;precharge accu
                                    plp
                                    endm
                        
                        set_z       macro       ;precharging indexed zp & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt
                                    plp
                                    endm
                        
                        set_zx      macro       ;precharging zp,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt,x
                                    plp
                                    endm
                        
                        set_abs     macro       ;precharging indexed memory & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst
                                    plp
                                    endm
                        
                        set_absx    macro       ;precharging abs,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst,x
                                    plp
                                    endm
                        
                                if I_flag = 0
                        cmp_flag    macro       ;I_flag is always enabled
                                    cmp #(\1|$30)&$fb
                                    endm
                        eor_flag    macro       ;invert expected on flags, mask I
                                    eor #(\1&$fb|$30)
                                    endm
                                endif
                                if I_flag = 1
                        cmp_flag    macro       ;I_flag is always disabled
                                    cmp #(\1|$34)&$ff
                                    endm
                        eor_flag    macro       ;invert expected on flags
                                    eor #(\1|$34)
                                    endm
                                endif
                                if I_flag = 2
                        cmp_flag    macro       ;I_flag is never changed
                                    eor flag_I_on
                                    cmp #(\1|$30)&$fb
                                    endm
                        eor_flag    macro       ;invert expected on flags
                                    eor flag_I_on
                                    eor #(\1&$fb|$30)
                                    endm
                                endif
                                if I_flag = 3
                        cmp_flag    macro       ;I_flag is always enabled
                                    cmp #(\1|$30)&$ff
                                    endm
                        eor_flag    macro       ;invert expected on flags
                                    eor #(\1|$30)
                                    endm
                                endif
                        
                        tst_stat    macro       ;testing flags in the processor status register
                                    php         ;save status
                                    php         ;use stack to retrieve status
                                    pla
                                    cmp_flag \1
                                    bne *       ;trap
                                    plp         ;restore status
                                    endm
                        
                        tst_a       macro       ;testing result in accu & flags
                                    php         ;save flags
                                    php
                                    cmp #\1     ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    cmp_flag \2
                                    bne *       ;trap
                                    plp         ;restore status
                                    endm
                        
                        tst_x       macro       ;testing result in x index & flags
                                    php         ;save flags
                                    php
                                    cpx #\1     ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    cmp_flag \2
                                    bne *       ;trap
                                    plp         ;restore status
                                    endm
                        
                        tst_y       macro       ;testing result in y index & flags
                                    php         ;save flags
                                    php
                                    cpy #\1     ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    cmp_flag \2
                                    bne *       ;trap
                                    plp         ;restore status
                                    endm
                        
                        tst_ax      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,x    ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    bne *       ;trap
                                    endm
                        
                        tst_ay      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,y    ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,y    ;test flags
                                    bne *       ;trap
                                    endm
                        
                        tst_z       macro       ;indexed testing result in zp & flags
                                    php         ;save flags
                                    lda zpt
                                    cmp \1,x    ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    bne *       ;trap
                                    endm
                        
                        tst_zx      macro       ;testing result in zp,x & flags
                                    php         ;save flags
                                    lda zpt,x
                                    cmp \1,x    ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    bne *       ;trap
                                    endm
                        
                        tst_abs     macro       ;indexed testing result in memory & flags
                                    php         ;save flags
                                    lda abst
                                    cmp \1,x    ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    bne *       ;trap
                                    endm
                        
                        tst_absx    macro       ;testing result in abs,x & flags
                                    php         ;save flags
                                    lda abst,x
                                    cmp \1,x    ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    bne *       ;trap
                                    endm
                        
0001 =                  carry   equ %00000001   ;flag bits in status
0002 =                  zero    equ %00000010
0004 =                  intdis  equ %00000100
0008 =                  decmode equ %00001000
0010 =                  break   equ %00010000
0020 =                  reserv  equ %00100000
0040 =                  overfl  equ %01000000
0080 =                  minus   equ %10000000
                        
0001 =                  fc      equ carry
0002 =                  fz      equ zero
0003 =                  fzc     equ carry+zero
0040 =                  fv      equ overfl
0042 =                  fvz     equ overfl+zero
0080 =                  fn      equ minus
0081 =                  fnc     equ minus+carry
0082 =                  fnz     equ minus+zero
0083 =                  fnzc    equ minus+zero+carry
00c0 =                  fnv     equ minus+overfl
                        
                        
                            if load_data_direct = 1
                                data
                            else
                                bss                 ;uninitialized segment, copy of data at end of code!
                            endif
000a =                          org zero_page
000a :                  zp_bss
000a : c3824100         zp1     db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
000e : 7f               zp7f    db  $7f             ;test pattern for compare
000f : 0000000000       zpt     ds  5               ;store/modify test area
                        ;logical zeropage operands
0014 : 001f7180         zpOR    db  0,$1f,$71,$80   ;test pattern for OR
0018 : 0fff7f80         zpAN    db  $0f,$ff,$7f,$80 ;test pattern for AND
001c : ff0f8f8f         zpEO    db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
0020 : 0002             ind1    dw  abs1            ;indirect pointer to pattern in absolute memory
0022 : 0102                     dw  abs1+1
0024 : 0202                     dw  abs1+2
0026 : 0302                     dw  abs1+3
0028 : 0402                     dw  abs7f
002a : 0801             inw1    dw  abs1-$f8        ;indirect pointer for wrap-test pattern
002c : 3302             indt    dw  abst            ;indirect pointer to store area in absolute memory
002e : 3402                     dw  abst+1
0030 : 3502                     dw  abst+2
0032 : 3602                     dw  abst+3
0034 : 3b01             inwt    dw  abst-$f8        ;indirect pointer for wrap-test store
0036 : 3c02             indAN   dw  absAN           ;indirect pointer to AND pattern in absolute memory
0038 : 3d02                     dw  absAN+1
003a : 3e02                     dw  absAN+2
003c : 3f02                     dw  absAN+3
003e : 4002             indEO   dw  absEO           ;indirect pointer to EOR pattern in absolute memory
0040 : 4102                     dw  absEO+1
0042 : 4202                     dw  absEO+2
0044 : 4302                     dw  absEO+3
0046 : 3802             indOR   dw  absOR           ;indirect pointer to OR pattern in absolute memory
0048 : 3902                     dw  absOR+1
004a : 3a02                     dw  absOR+2
004c : 3b02                     dw  absOR+3
                        ;add/subtract operand generation and result/flag prediction
004e : 5802             adi2    dw  ada2            ;indirect pointer to operand 2 in absolute memory
0050 : 5902             sbi2    dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
0052 : 5901             adiy2   dw  ada2-$ff        ;with offset for indirect indexed
0054 : 5a01             sbiy2   dw  sba2-$ff
0056 :                  zp_bss_end
0056 : 00               adfc    ds  1               ;carry flag before op
0057 : 00               ad1     ds  1               ;operand 1 - accumulator
0058 : 00               ad2     ds  1               ;operand 2 - memory / immediate
0059 : 00               adrl    ds  1               ;expected result bits 0-7
005a : 00               adrh    ds  1               ;expected result bit 8 (carry)
005b : 00               adrf    ds  1               ;expected flags NV0000ZC (not valid in decimal mode)
005c : 00               sb2     ds  1               ;operand 2 complemented for subtract
                        ;break test interrupt save
005d : 00               irq_a   ds  1               ;a register
005e : 00               irq_x   ds  1               ;x register
                            if I_flag = 2
                        ;masking for I bit in status
                        flag_I_on   ds  1           ;or mask to load flags
                        flag_I_off  ds  1           ;and mask to load flags
                            endif
                        
0200 =                          org data_segment
0200 :                  data_bss
0200 : c3824100         abs1    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
0204 : 7f               abs7f   db  $7f             ;test pattern for compare
                        ;loads
0205 : 80800002         fLDx    db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
0209 :                  rASL                        ;expected result ASL & ROL -carry
0209 : 86048200         rROL    db  $86,$04,$82,0   ; "
020d : 87058301         rROLc   db  $87,$05,$83,1   ;expected result ROL +carry
0211 :                  rLSR                        ;expected result LSR & ROR -carry
0211 : 61412000         rROR    db  $61,$41,$20,0   ; "
0215 : e1c1a080         rRORc   db  $e1,$c1,$a0,$80 ;expected result ROR +carry
0219 :                  fASL                        ;expected flags for shifts
0219 : 81018002         fROL    db  fnc,fc,fn,fz    ;no carry in
021d : 81018000         fROLc   db  fnc,fc,fn,0     ;carry in
0221 :                  fLSR
0221 : 01000102         fROR    db  fc,0,fc,fz      ;no carry in
0225 : 81808180         fRORc   db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
0229 : 7f80ff0001       rINC    db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
022e : 0080800200       fINC    db  0,fn,fn,fz,0    ;expected flags for INC/DEC
0233 : 0000000000       abst    ds  5               ;store/modify test area
                        ;logical memory operand
0238 : 001f7180         absOR   db  0,$1f,$71,$80   ;test pattern for OR
023c : 0fff7f80         absAN   db  $0f,$ff,$7f,$80 ;test pattern for AND
0240 : ff0f8f8f         absEO   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
0244 : 00f11f00         absORa  db  0,$f1,$1f,0     ;test pattern for OR
0248 : f0ffffff         absANa  db  $f0,$ff,$ff,$ff ;test pattern for AND
024c : fff0f00f         absEOa  db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
0250 : 00ff7f80         absrlo  db  0,$ff,$7f,$80
0254 : 02800080         absflo  db  fz,fn,0,fn
0258 :                  data_bss_end
                        ;add/subtract operand copy
0258 : 00               ada2    ds  1               ;operand 2
0259 : 00               sba2    ds  1               ;operand 2 complemented for subtract
                        
                                code
1000 =                          org code_segment
1000 : d8                       cld
                        
                        ;stop interrupts before initializing BSS
                            if I_flag = 1
                                sei
                            endif
                        
                        ;initialize BSS segment
                            if load_data_direct != 1
                                ldx #zp_end-zp_init-1
                        ld_zp   lda zp_init,x
                                sta zp_bss,x
                                dex
                                bpl ld_zp
                                ldx #data_end-data_init-1
                        ld_data lda data_init,x
                                sta data_bss,x
                                dex
                                bpl ld_data
                            endif
                        
                        ;retain status of interrupt flag
                            if I_flag = 2
                                php
                                pla
                                and #4          ;isolate flag
                                sta flag_I_on   ;or mask
                                eor #lo(~4)     ;reverse
                                sta flag_I_off  ;and mask
                            endif
                        
                        ;testing relative addressing with BEQ
                        ;uses untested JMP DEX DEY LDA#0 LDY#$FE TYA TAX STA BPL CLC ADC#2 cmp#0
1001 : a0fe                     ldy #$fe        ;testing maximum range, not -1/-2 (invalid/self adr)
1003 :                  range_loop
1003 : 88                       dey             ;next relative address
1004 : 98                       tya
1005 : aa                       tax             ;precharge count to end of loop
1006 : 1003                     bpl range_fw    ;calculate relative address
1008 : 18                       clc             ;avoid branch self or to relative address of branch
1009 : 6902                     adc #2
100b :                  range_fw
100b : 497f                     eor #$7f        ;complement except sign
100d : 8d9410                   sta range_adr   ;load into test target
1010 : a900                     lda #0          ;should set zero flag in status register
1012 : 4c9310                   jmp range_op
                        
                                ;relative address target field with branch under test in the middle
1015 : ca                       dex             ;-128 - max backward
1016 : ca                       dex
1017 : ca                       dex
1018 : ca                       dex
1019 : ca                       dex
101a : ca                       dex
101b : ca                       dex
101c : ca                       dex
101d : ca                       dex             ;-120
101e : ca                       dex
101f : ca                       dex
1020 : ca                       dex
1021 : ca                       dex
1022 : ca                       dex
1023 : ca                       dex
1024 : ca                       dex
1025 : ca                       dex
1026 : ca                       dex
1027 : ca                       dex             ;-110
1028 : ca                       dex
1029 : ca                       dex
102a : ca                       dex
102b : ca                       dex
102c : ca                       dex
102d : ca                       dex
102e : ca                       dex
102f : ca                       dex
1030 : ca                       dex
1031 : ca                       dex             ;-100
1032 : ca                       dex
1033 : ca                       dex
1034 : ca                       dex
1035 : ca                       dex
1036 : ca                       dex
1037 : ca                       dex
1038 : ca                       dex
1039 : ca                       dex
103a : ca                       dex
103b : ca                       dex             ;-90
103c : ca                       dex
103d : ca                       dex
103e : ca                       dex
103f : ca                       dex
1040 : ca                       dex
1041 : ca                       dex
1042 : ca                       dex
1043 : ca                       dex
1044 : ca                       dex
1045 : ca                       dex             ;-80
1046 : ca                       dex
1047 : ca                       dex
1048 : ca                       dex
1049 : ca                       dex
104a : ca                       dex
104b : ca                       dex
104c : ca                       dex
104d : ca                       dex
104e : ca                       dex
104f : ca                       dex             ;-70
1050 : ca                       dex
1051 : ca                       dex
1052 : ca                       dex
1053 : ca                       dex
1054 : ca                       dex
1055 : ca                       dex
1056 : ca                       dex
1057 : ca                       dex
1058 : ca                       dex
1059 : ca                       dex             ;-60
105a : ca                       dex
105b : ca                       dex
105c : ca                       dex
105d : ca                       dex
105e : ca                       dex
105f : ca                       dex
1060 : ca                       dex
1061 : ca                       dex
1062 : ca                       dex
1063 : ca                       dex             ;-50
1064 : ca                       dex
1065 : ca                       dex
1066 : ca                       dex
1067 : ca                       dex
1068 : ca                       dex
1069 : ca                       dex
106a : ca                       dex
106b : ca                       dex
106c : ca                       dex
106d : ca                       dex             ;-40
106e : ca                       dex
106f : ca                       dex
1070 : ca                       dex
1071 : ca                       dex
1072 : ca                       dex
1073 : ca                       dex
1074 : ca                       dex
1075 : ca                       dex
1076 : ca                       dex
1077 : ca                       dex             ;-30
1078 : ca                       dex
1079 : ca                       dex
107a : ca                       dex
107b : ca                       dex
107c : ca                       dex
107d : ca                       dex
107e : ca                       dex
107f : ca                       dex
1080 : ca                       dex
1081 : ca                       dex             ;-20
1082 : ca                       dex
1083 : ca                       dex
1084 : ca                       dex
1085 : ca                       dex
1086 : ca                       dex
1087 : ca                       dex
1088 : ca                       dex
1089 : ca                       dex
108a : ca                       dex
108b : ca                       dex             ;-10
108c : ca                       dex
108d : ca                       dex
108e : ca                       dex
108f : ca                       dex
1090 : ca                       dex
1091 : ca                       dex
1092 : ca                       dex             ;-3
1093 :                  range_op                ;test target with zero flag=0, z=1 if previous dex
1094 =                  range_adr   = *+1       ;modifiable relative address
1093 : f0fe                     beq *           ;trap, if called without modification
1095 : ca                       dex             ;+0
1096 : ca                       dex
1097 : ca                       dex
1098 : ca                       dex
1099 : ca                       dex
109a : ca                       dex
109b : ca                       dex
109c : ca                       dex
109d : ca                       dex
109e : ca                       dex
109f : ca                       dex             ;+10
10a0 : ca                       dex
10a1 : ca                       dex
10a2 : ca                       dex
10a3 : ca                       dex
10a4 : ca                       dex
10a5 : ca                       dex
10a6 : ca                       dex
10a7 : ca                       dex
10a8 : ca                       dex
10a9 : ca                       dex             ;+20
10aa : ca                       dex
10ab : ca                       dex
10ac : ca                       dex
10ad : ca                       dex
10ae : ca                       dex
10af : ca                       dex
10b0 : ca                       dex
10b1 : ca                       dex
10b2 : ca                       dex
10b3 : ca                       dex             ;+30
10b4 : ca                       dex
10b5 : ca                       dex
10b6 : ca                       dex
10b7 : ca                       dex
10b8 : ca                       dex
10b9 : ca                       dex
10ba : ca                       dex
10bb : ca                       dex
10bc : ca                       dex
10bd : ca                       dex             ;+40
10be : ca                       dex
10bf : ca                       dex
10c0 : ca                       dex
10c1 : ca                       dex
10c2 : ca                       dex
10c3 : ca                       dex
10c4 : ca                       dex
10c5 : ca                       dex
10c6 : ca                       dex
10c7 : ca                       dex             ;+50
10c8 : ca                       dex
10c9 : ca                       dex
10ca : ca                       dex
10cb : ca                       dex
10cc : ca                       dex
10cd : ca                       dex
10ce : ca                       dex
10cf : ca                       dex
10d0 : ca                       dex
10d1 : ca                       dex             ;+60
10d2 : ca                       dex
10d3 : ca                       dex
10d4 : ca                       dex
10d5 : ca                       dex
10d6 : ca                       dex
10d7 : ca                       dex
10d8 : ca                       dex
10d9 : ca                       dex
10da : ca                       dex
10db : ca                       dex             ;+70
10dc : ca                       dex
10dd : ca                       dex
10de : ca                       dex
10df : ca                       dex
10e0 : ca                       dex
10e1 : ca                       dex
10e2 : ca                       dex
10e3 : ca                       dex
10e4 : ca                       dex
10e5 : ca                       dex             ;+80
10e6 : ca                       dex
10e7 : ca                       dex
10e8 : ca                       dex
10e9 : ca                       dex
10ea : ca                       dex
10eb : ca                       dex
10ec : ca                       dex
10ed : ca                       dex
10ee : ca                       dex
10ef : ca                       dex             ;+90
10f0 : ca                       dex
10f1 : ca                       dex
10f2 : ca                       dex
10f3 : ca                       dex
10f4 : ca                       dex
10f5 : ca                       dex
10f6 : ca                       dex
10f7 : ca                       dex
10f8 : ca                       dex
10f9 : ca                       dex             ;+100
10fa : ca                       dex
10fb : ca                       dex
10fc : ca                       dex
10fd : ca                       dex
10fe : ca                       dex
10ff : ca                       dex
1100 : ca                       dex
1101 : ca                       dex
1102 : ca                       dex
1103 : ca                       dex             ;+110
1104 : ca                       dex
1105 : ca                       dex
1106 : ca                       dex
1107 : ca                       dex
1108 : ca                       dex
1109 : ca                       dex
110a : ca                       dex
110b : ca                       dex
110c : ca                       dex
110d : ca                       dex             ;+120
110e : ca                       dex
110f : ca                       dex
1110 : ca                       dex
1111 : ca                       dex
1112 : ca                       dex
1113 : ca                       dex
1114 : f003                     beq range_ok    ;+127 - max forward
1116 : 4c1611                   jmp *           ;trap bad range
1119 :                  range_ok
1119 : c000                     cpy #0
111b : f003                     beq range_end
111d : 4c0310                   jmp range_loop
1120 :                  range_end               ;range test successful
                        
                        ;partial test BNE & CMP, CPX, CPY immediate
1120 : c001                     cpy #1          ;testing BNE true
1122 : d003                     bne test_bne
1124 : 4c2411                   jmp *
1127 :                  test_bne
1127 : a900                     lda #0
1129 : c900                     cmp #0          ;test compare immediate
112b : d0fe                     bne *
112d : 90fe                     bcc *
112f : 30fe                     bmi *
1131 : c901                     cmp #1
1133 : f0fe                     beq *
1135 : b0fe                     bcs *
1137 : 10fe                     bpl *
1139 : aa                       tax
113a : e000                     cpx #0          ;test compare x immediate
113c : d0fe                     bne *
113e : 90fe                     bcc *
1140 : 30fe                     bmi *
1142 : e001                     cpx #1
1144 : f0fe                     beq *
1146 : b0fe                     bcs *
1148 : 10fe                     bpl *
114a : a8                       tay
114b : c000                     cpy #0          ;test compare y immediate
114d : d0fe                     bne *
114f : 90fe                     bcc *
1151 : 30fe                     bmi *
1153 : c001                     cpy #1
1155 : f0fe                     beq *
1157 : b0fe                     bcs *
1159 : 10fe                     bpl *
                        ;testing stack operations PHA PHP PLA PLP
                        ;testing branch decisions BPL BMI BVC BVS BCC BCS BNE BEQ
                        
115b : a2ff                     ldx #$ff        ;initialize stack
115d : 9a                       txs
115e : a955                     lda #$55
1160 : 48                       pha
1161 : a9aa                     lda #$aa
1163 : 48                       pha
1164 : cdfe01                   cmp $1fe        ;on stack ?
1167 : d0fe                     bne *
1169 : ba                       tsx
116a : 8a                       txa             ;overwrite accu
116b : c9fd                     cmp #$fd        ;sp decremented?
116d : d0fe                     bne *
116f : 68                       pla
1170 : c9aa                     cmp #$aa        ;successful retreived from stack?
1172 : d0fe                     bne *
1174 : 68                       pla
1175 : c955                     cmp #$55
1177 : d0fe                     bne *
1179 : cdff01                   cmp $1ff        ;remains on stack?
117c : d0fe                     bne *
117e : ba                       tsx
117f : e0ff                     cpx #$ff        ;sp incremented?
1181 : d0fe                     bne *
                                set_stat $ff    ;all on
                       >            load_flag $ff    
1183 : a9ff            >            lda #$ff    
                       >
1185 : 48              >            pha         ;use stack to load status
1186 : 28              >            plp
                        
1187 : 10fe                     bpl *           ;branches should not be taken
1189 : 50fe                     bvc *
118b : 90fe                     bcc *
118d : d0fe                     bne *
118f : 3003                     bmi br1          ;branches should be taken
1191 : 4c9111                   jmp *
1194 : 7003             br1     bvs br2
1196 : 4c9611                   jmp *
1199 : b003             br2     bcs br3
119b : 4c9b11                   jmp *
119e : f003             br3     beq br4
11a0 : 4ca011                   jmp *
11a3 : 08               br4     php
11a4 : ba                       tsx
11a5 : e0fe                     cpx #$fe        ;sp after php?
11a7 : d0fe                     bne *
11a9 : 68                       pla
                                cmp_flag $ff        ;returned all flags on?
11aa : c9ff            >            cmp #($ff        |$30)&$ff
                        
11ac : d0fe                     bne *
11ae : ba                       tsx
11af : e0ff                     cpx #$ff        ;sp after php?
11b1 : d0fe                     bne *
                                set_stat 0      ;all off
                       >            load_flag 0      
11b3 : a900            >            lda #0      
                       >
11b5 : 48              >            pha         ;use stack to load status
11b6 : 28              >            plp
                        
11b7 : 30fe                     bmi *           ;branches should not be taken
11b9 : 70fe                     bvs *
11bb : b0fe                     bcs *
11bd : f0fe                     beq *
11bf : 1003                     bpl br11        ;branches should be taken
11c1 : 4cc111                   jmp *
11c4 : 5003             br11    bvc br12
11c6 : 4cc611                   jmp *
11c9 : 9003             br12    bcc br13
11cb : 4ccb11                   jmp *
11ce : d003             br13    bne br14
11d0 : 4cd011                   jmp *
11d3 : 08               br14    php
11d4 : 68                       pla
                                cmp_flag 0      ;flags off except break (pushed by sw) + reserved?
11d5 : c930            >            cmp #(0      |$30)&$ff
                        
11d7 : d0fe                     bne *
                                ;crosscheck flags
                                set_stat carry
                       >            load_flag carry
11d9 : a901            >            lda #carry
                       >
11db : 48              >            pha         ;use stack to load status
11dc : 28              >            plp
                        
11dd : 90fe                     bcc *
                                set_stat zero
                       >            load_flag zero
11df : a902            >            lda #zero
                       >
11e1 : 48              >            pha         ;use stack to load status
11e2 : 28              >            plp
                        
11e3 : d0fe                     bne *
                                set_stat overfl
                       >            load_flag overfl
11e5 : a940            >            lda #overfl
                       >
11e7 : 48              >            pha         ;use stack to load status
11e8 : 28              >            plp
                        
11e9 : 50fe                     bvc *
                                set_stat minus
                       >            load_flag minus
11eb : a980            >            lda #minus
                       >
11ed : 48              >            pha         ;use stack to load status
11ee : 28              >            plp
                        
11ef : 10fe                     bpl *
                                set_stat $ff-carry
                       >            load_flag $ff-carry
11f1 : a9fe            >            lda #$ff-carry
                       >
11f3 : 48              >            pha         ;use stack to load status
11f4 : 28              >            plp
                        
11f5 : b0fe                     bcs *
                                set_stat $ff-zero
                       >            load_flag $ff-zero
11f7 : a9fd            >            lda #$ff-zero
                       >
11f9 : 48              >            pha         ;use stack to load status
11fa : 28              >            plp
                        
11fb : f0fe                     beq *
                                set_stat $ff-overfl
                       >            load_flag $ff-overfl
11fd : a9bf            >            lda #$ff-overfl
                       >
11ff : 48              >            pha         ;use stack to load status
1200 : 28              >            plp
                        
1201 : 70fe                     bvs *
                                set_stat $ff-minus
                       >            load_flag $ff-minus
1203 : a97f            >            lda #$ff-minus
                       >
1205 : 48              >            pha         ;use stack to load status
1206 : 28              >            plp
                        
1207 : 30fe                     bmi *
                        
                        ; partial pretest EOR #
                                set_a $3c,0
                       >            load_flag 0
1209 : a900            >            lda #0
                       >
120b : 48              >            pha         ;use stack to load status
120c : a93c            >            lda #$3c     ;precharge accu
120e : 28              >            plp
                        
120f : 49c3                     eor #$c3
                                tst_a $ff,fn
1211 : 08              >            php         ;save flags
1212 : 08              >            php
1213 : c9ff            >            cmp #$ff     ;test result
1215 : d0fe            >            bne *       ;trap
1217 : 68              >            pla         ;load status
                       >            cmp_flag fn
1218 : c9b0            >            cmp #(fn|$30)&$ff
                       >
121a : d0fe            >            bne *       ;trap
121c : 28              >            plp         ;restore status
                        
                                set_a $c3,0
                       >            load_flag 0
121d : a900            >            lda #0
                       >
121f : 48              >            pha         ;use stack to load status
1220 : a9c3            >            lda #$c3     ;precharge accu
1222 : 28              >            plp
                        
1223 : 49c3                     eor #$c3
                                tst_a 0,fz
1225 : 08              >            php         ;save flags
1226 : 08              >            php
1227 : c900            >            cmp #0     ;test result
1229 : d0fe            >            bne *       ;trap
122b : 68              >            pla         ;load status
                       >            cmp_flag fz
122c : c932            >            cmp #(fz|$30)&$ff
                       >
122e : d0fe            >            bne *       ;trap
1230 : 28              >            plp         ;restore status
                        
                        
                        ; PC modifying instructions except branches (NOP, JMP, JSR, RTS, BRK, RTI)
                        ; testing NOP
1231 : a224                     ldx #$24
1233 : a042                     ldy #$42
                                set_a $18,0
                       >            load_flag 0
1235 : a900            >            lda #0
                       >
1237 : 48              >            pha         ;use stack to load status
1238 : a918            >            lda #$18     ;precharge accu
123a : 28              >            plp
                        
123b : ea                       nop
                                tst_a $18,0
123c : 08              >            php         ;save flags
123d : 08              >            php
123e : c918            >            cmp #$18     ;test result
1240 : d0fe            >            bne *       ;trap
1242 : 68              >            pla         ;load status
                       >            cmp_flag 0
1243 : c930            >            cmp #(0|$30)&$ff
                       >
1245 : d0fe            >            bne *       ;trap
1247 : 28              >            plp         ;restore status
                        
1248 : e024                     cpx #$24
124a : d0fe                     bne *
124c : c042                     cpy #$42
124e : d0fe                     bne *
1250 : a2db                     ldx #$db
1252 : a0bd                     ldy #$bd
                                set_a $e7,$ff
                       >            load_flag $ff
1254 : a9ff            >            lda #$ff
                       >
1256 : 48              >            pha         ;use stack to load status
1257 : a9e7            >            lda #$e7     ;precharge accu
1259 : 28              >            plp
                        
125a : ea                       nop
                                tst_a $e7,$ff
125b : 08              >            php         ;save flags
125c : 08              >            php
125d : c9e7            >            cmp #$e7     ;test result
125f : d0fe            >            bne *       ;trap
1261 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1262 : c9ff            >            cmp #($ff|$30)&$ff
                       >
1264 : d0fe            >            bne *       ;trap
1266 : 28              >            plp         ;restore status
                        
1267 : e0db                     cpx #$db
1269 : d0fe                     bne *
126b : c0bd                     cpy #$bd
126d : d0fe                     bne *
                        
                        ; jump absolute
                                set_stat $0
                       >            load_flag $0
126f : a900            >            lda #$0
                       >
1271 : 48              >            pha         ;use stack to load status
1272 : 28              >            plp
                        
1273 : a946                     lda #'F'
1275 : a241                     ldx #'A'
1277 : a052                     ldy #'R'        ;N=0, V=0, Z=0, C=0
1279 : 4c343e                   jmp test_far
127c : ea                       nop
127d : ea                       nop
127e : d0fe                     bne *           ;runover protection
1280 : e8                       inx
1281 : e8                       inx
1282 : f0fe             far_ret beq *           ;returned flags OK?
1284 : 10fe                     bpl *
1286 : 90fe                     bcc *
1288 : 50fe                     bvc *
128a : c9ec                     cmp #('F'^$aa)  ;returned registers OK?
128c : d0fe                     bne *
128e : e042                     cpx #('A'+1)
1290 : d0fe                     bne *
1292 : c04f                     cpy #('R'-3)
1294 : d0fe                     bne *
1296 : ca                       dex
1297 : c8                       iny
1298 : c8                       iny
1299 : c8                       iny
129a : 49aa                     eor #$aa        ;N=0, V=1, Z=0, C=1
129c : 4ca512                   jmp test_near
129f : ea                       nop
12a0 : ea                       nop
12a1 : d0fe                     bne *           ;runover protection
12a3 : e8                       inx
12a4 : e8                       inx
12a5 :                  test_near
12a5 : f0fe                     beq *           ;passed flags OK?
12a7 : 30fe                     bmi *
12a9 : 90fe                     bcc *
12ab : 50fe                     bvc *
12ad : c946                     cmp #'F'        ;passed registers OK?
12af : d0fe                     bne *
12b1 : e041                     cpx #'A'
12b3 : d0fe                     bne *
12b5 : c052                     cpy #'R'
12b7 : d0fe                     bne *
                        
                        ; jump indirect
                                set_stat 0
                       >            load_flag 0
12b9 : a900            >            lda #0
                       >
12bb : 48              >            pha         ;use stack to load status
12bc : 28              >            plp
                        
12bd : a949                     lda #'I'
12bf : a24e                     ldx #'N'
12c1 : a044                     ldy #'D'        ;N=0, V=0, Z=0, C=0
12c3 : 6c623e                   jmp (ptr_tst_ind)
12c6 : ea                       nop
12c7 : d0fe                     bne *           ;runover protection
12c9 : 88                       dey
12ca : 88                       dey
12cb :                  ind_ret
12cb : 08                       php             ;either SP or Y count will fail, if we do not hit
12cc : 88                       dey
12cd : 88                       dey
12ce : 88                       dey
12cf : 28                       plp
12d0 : f0fe                     beq *           ;returned flags OK?
12d2 : 10fe                     bpl *
12d4 : 90fe                     bcc *
12d6 : 50fe                     bvc *
12d8 : c9e3                     cmp #('I'^$aa)  ;returned registers OK?
12da : d0fe                     bne *
12dc : e04f                     cpx #('N'+1)
12de : d0fe                     bne *
12e0 : c03e                     cpy #('D'-6)
12e2 : d0fe                     bne *
12e4 : ba                       tsx             ;SP check
12e5 : e0ff                     cpx #$ff
12e7 : d0fe                     bne *
                        
                        ; jump subroutine & return from subroutine
                                set_stat 0
                       >            load_flag 0
12e9 : a900            >            lda #0
                       >
12eb : 48              >            pha         ;use stack to load status
12ec : 28              >            plp
                        
12ed : a94a                     lda #'J'
12ef : a253                     ldx #'S'
12f1 : a052                     ldy #'R'        ;N=0, V=0, Z=0, C=0
12f3 : 209e3e                   jsr test_jsr
12f5 =                  jsr_ret = *-1           ;last address of jsr = return address
12f6 : 08                       php             ;either SP or Y count will fail, if we do not hit
12f7 : 88                       dey
12f8 : 88                       dey
12f9 : 88                       dey
12fa : 28                       plp
12fb : f0fe                     beq *           ;returned flags OK?
12fd : 10fe                     bpl *
12ff : 90fe                     bcc *
1301 : 50fe                     bvc *
1303 : c9e0                     cmp #('J'^$aa)  ;returned registers OK?
1305 : d0fe                     bne *
1307 : e054                     cpx #('S'+1)
1309 : d0fe                     bne *
130b : c04c                     cpy #('R'-6)
130d : d0fe                     bne *
130f : ba                       tsx             ;sp?
1310 : e0ff                     cpx #$ff
1312 : d0fe                     bne *
                        
                        ; break & return from interrupt
                            if ROM_vectors = 1
                                set_stat 0
                       >            load_flag 0
1314 : a900            >            lda #0
                       >
1316 : 48              >            pha         ;use stack to load status
1317 : 28              >            plp
                        
1318 : a942                     lda #'B'
131a : a252                     ldx #'R'
131c : a04b                     ldy #'K'        ;N=0, V=0, Z=0, C=0
131e : 00                       brk
                            else
                                lda #hi brk_ret ;emulated break
                                pha
                                lda #lo brk_ret
                                pha
                                lda #$30        ;set break & unused on stack
                                pha
                                set_stat intdis
                                lda #'B'
                                ldx #'R'
                                ldy #'K'        ;N=0, V=0, Z=0, C=0
                                jmp irq_trap
                            endif
131f : 88                       dey             ;should not be executed
1320 :                  brk_ret                 ;address of break return
1320 : 08                       php             ;either SP or Y count will fail, if we do not hit
1321 : 88                       dey
1322 : 88                       dey
1323 : 88                       dey
1324 : c9e8                     cmp #('B'^$aa)  ;returned registers OK?
1326 : d0fe                     bne *
1328 : e053                     cpx #('R'+1)
132a : d0fe                     bne *
132c : c045                     cpy #('K'-6)
132e : d0fe                     bne *
1330 : 68                       pla             ;returned flags OK (unchanged)?
                                cmp_flag 0
1331 : c930            >            cmp #(0|$30)&$ff
                        
1333 : d0fe                     bne *
1335 : ba                       tsx             ;sp?
1336 : e0ff                     cpx #$ff
1338 : d0fe                     bne *
                        
                        ; test set and clear flags CLC CLI CLD CLV SEC SEI SED
                                set_stat $ff
                       >            load_flag $ff
133a : a9ff            >            lda #$ff
                       >
133c : 48              >            pha         ;use stack to load status
133d : 28              >            plp
                        
133e : 18                       clc
                                tst_stat $ff-carry
133f : 08              >            php         ;save status
1340 : 08              >            php         ;use stack to retrieve status
1341 : 68              >            pla
                       >            cmp_flag $ff-carry
1342 : c9fe            >            cmp #($ff-carry|$30)&$ff
                       >
1344 : d0fe            >            bne *       ;trap
1346 : 28              >            plp         ;restore status
                        
1347 : 38                       sec
                                tst_stat $ff
1348 : 08              >            php         ;save status
1349 : 08              >            php         ;use stack to retrieve status
134a : 68              >            pla
                       >            cmp_flag $ff
134b : c9ff            >            cmp #($ff|$30)&$ff
                       >
134d : d0fe            >            bne *       ;trap
134f : 28              >            plp         ;restore status
                        
                            if I_flag = 3
1350 : 58                       cli
                                tst_stat $ff-intdis
1351 : 08              >            php         ;save status
1352 : 08              >            php         ;use stack to retrieve status
1353 : 68              >            pla
                       >            cmp_flag $ff-intdis
1354 : c9fb            >            cmp #($ff-intdis|$30)&$ff
                       >
1356 : d0fe            >            bne *       ;trap
1358 : 28              >            plp         ;restore status
                        
1359 : 78                       sei
                                tst_stat $ff
135a : 08              >            php         ;save status
135b : 08              >            php         ;use stack to retrieve status
135c : 68              >            pla
                       >            cmp_flag $ff
135d : c9ff            >            cmp #($ff|$30)&$ff
                       >
135f : d0fe            >            bne *       ;trap
1361 : 28              >            plp         ;restore status
                        
                            endif
1362 : d8                       cld
                                tst_stat $ff-decmode
1363 : 08              >            php         ;save status
1364 : 08              >            php         ;use stack to retrieve status
1365 : 68              >            pla
                       >            cmp_flag $ff-decmode
1366 : c9f7            >            cmp #($ff-decmode|$30)&$ff
                       >
1368 : d0fe            >            bne *       ;trap
136a : 28              >            plp         ;restore status
                        
136b : f8                       sed
                                tst_stat $ff
136c : 08              >            php         ;save status
136d : 08              >            php         ;use stack to retrieve status
136e : 68              >            pla
                       >            cmp_flag $ff
136f : c9ff            >            cmp #($ff|$30)&$ff
                       >
1371 : d0fe            >            bne *       ;trap
1373 : 28              >            plp         ;restore status
                        
1374 : b8                       clv
                                tst_stat $ff-overfl
1375 : 08              >            php         ;save status
1376 : 08              >            php         ;use stack to retrieve status
1377 : 68              >            pla
                       >            cmp_flag $ff-overfl
1378 : c9bf            >            cmp #($ff-overfl|$30)&$ff
                       >
137a : d0fe            >            bne *       ;trap
137c : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
137d : a900            >            lda #0
                       >
137f : 48              >            pha         ;use stack to load status
1380 : 28              >            plp
                        
                                tst_stat 0
1381 : 08              >            php         ;save status
1382 : 08              >            php         ;use stack to retrieve status
1383 : 68              >            pla
                       >            cmp_flag 0
1384 : c930            >            cmp #(0|$30)&$ff
                       >
1386 : d0fe            >            bne *       ;trap
1388 : 28              >            plp         ;restore status
                        
1389 : 38                       sec
                                tst_stat carry
138a : 08              >            php         ;save status
138b : 08              >            php         ;use stack to retrieve status
138c : 68              >            pla
                       >            cmp_flag carry
138d : c931            >            cmp #(carry|$30)&$ff
                       >
138f : d0fe            >            bne *       ;trap
1391 : 28              >            plp         ;restore status
                        
1392 : 18                       clc
                                tst_stat 0
1393 : 08              >            php         ;save status
1394 : 08              >            php         ;use stack to retrieve status
1395 : 68              >            pla
                       >            cmp_flag 0
1396 : c930            >            cmp #(0|$30)&$ff
                       >
1398 : d0fe            >            bne *       ;trap
139a : 28              >            plp         ;restore status
                        
                            if I_flag = 3
139b : 78                       sei
                                tst_stat intdis
139c : 08              >            php         ;save status
139d : 08              >            php         ;use stack to retrieve status
139e : 68              >            pla
                       >            cmp_flag intdis
139f : c934            >            cmp #(intdis|$30)&$ff
                       >
13a1 : d0fe            >            bne *       ;trap
13a3 : 28              >            plp         ;restore status
                        
13a4 : 58                       cli
                                tst_stat 0
13a5 : 08              >            php         ;save status
13a6 : 08              >            php         ;use stack to retrieve status
13a7 : 68              >            pla
                       >            cmp_flag 0
13a8 : c930            >            cmp #(0|$30)&$ff
                       >
13aa : d0fe            >            bne *       ;trap
13ac : 28              >            plp         ;restore status
                        
                            endif
13ad : f8                       sed
                                tst_stat decmode
13ae : 08              >            php         ;save status
13af : 08              >            php         ;use stack to retrieve status
13b0 : 68              >            pla
                       >            cmp_flag decmode
13b1 : c938            >            cmp #(decmode|$30)&$ff
                       >
13b3 : d0fe            >            bne *       ;trap
13b5 : 28              >            plp         ;restore status
                        
13b6 : d8                       cld
                                tst_stat 0
13b7 : 08              >            php         ;save status
13b8 : 08              >            php         ;use stack to retrieve status
13b9 : 68              >            pla
                       >            cmp_flag 0
13ba : c930            >            cmp #(0|$30)&$ff
                       >
13bc : d0fe            >            bne *       ;trap
13be : 28              >            plp         ;restore status
                        
                                set_stat overfl
                       >            load_flag overfl
13bf : a940            >            lda #overfl
                       >
13c1 : 48              >            pha         ;use stack to load status
13c2 : 28              >            plp
                        
                                tst_stat overfl
13c3 : 08              >            php         ;save status
13c4 : 08              >            php         ;use stack to retrieve status
13c5 : 68              >            pla
                       >            cmp_flag overfl
13c6 : c970            >            cmp #(overfl|$30)&$ff
                       >
13c8 : d0fe            >            bne *       ;trap
13ca : 28              >            plp         ;restore status
                        
13cb : b8                       clv
                                tst_stat 0
13cc : 08              >            php         ;save status
13cd : 08              >            php         ;use stack to retrieve status
13ce : 68              >            pla
                       >            cmp_flag 0
13cf : c930            >            cmp #(0|$30)&$ff
                       >
13d1 : d0fe            >            bne *       ;trap
13d3 : 28              >            plp         ;restore status
                        
                        ; testing index register increment/decrement and transfer
                        ; INX INY DEX DEY TAX TXA TAY TYA
13d4 : a2fe                     ldx #$fe
                                set_stat $ff
                       >            load_flag $ff
13d6 : a9ff            >            lda #$ff
                       >
13d8 : 48              >            pha         ;use stack to load status
13d9 : 28              >            plp
                        
13da : e8                       inx             ;ff
                                tst_x $ff,$ff-zero
13db : 08              >            php         ;save flags
13dc : 08              >            php
13dd : e0ff            >            cpx #$ff     ;test result
13df : d0fe            >            bne *       ;trap
13e1 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
13e2 : c9fd            >            cmp #($ff-zero|$30)&$ff
                       >
13e4 : d0fe            >            bne *       ;trap
13e6 : 28              >            plp         ;restore status
                        
13e7 : e8                       inx             ;00
                                tst_x 0,$ff-minus
13e8 : 08              >            php         ;save flags
13e9 : 08              >            php
13ea : e000            >            cpx #0     ;test result
13ec : d0fe            >            bne *       ;trap
13ee : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
13ef : c97f            >            cmp #($ff-minus|$30)&$ff
                       >
13f1 : d0fe            >            bne *       ;trap
13f3 : 28              >            plp         ;restore status
                        
13f4 : e8                       inx             ;01
                                tst_x 1,$ff-minus-zero
13f5 : 08              >            php         ;save flags
13f6 : 08              >            php
13f7 : e001            >            cpx #1     ;test result
13f9 : d0fe            >            bne *       ;trap
13fb : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
13fc : c97d            >            cmp #($ff-minus-zero|$30)&$ff
                       >
13fe : d0fe            >            bne *       ;trap
1400 : 28              >            plp         ;restore status
                        
1401 : ca                       dex             ;00
                                tst_x 0,$ff-minus
1402 : 08              >            php         ;save flags
1403 : 08              >            php
1404 : e000            >            cpx #0     ;test result
1406 : d0fe            >            bne *       ;trap
1408 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
1409 : c97f            >            cmp #($ff-minus|$30)&$ff
                       >
140b : d0fe            >            bne *       ;trap
140d : 28              >            plp         ;restore status
                        
140e : ca                       dex             ;ff
                                tst_x $ff,$ff-zero
140f : 08              >            php         ;save flags
1410 : 08              >            php
1411 : e0ff            >            cpx #$ff     ;test result
1413 : d0fe            >            bne *       ;trap
1415 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
1416 : c9fd            >            cmp #($ff-zero|$30)&$ff
                       >
1418 : d0fe            >            bne *       ;trap
141a : 28              >            plp         ;restore status
                        
141b : ca                       dex             ;fe
                                set_stat 0
                       >            load_flag 0
141c : a900            >            lda #0
                       >
141e : 48              >            pha         ;use stack to load status
141f : 28              >            plp
                        
1420 : e8                       inx             ;ff
                                tst_x $ff,minus
1421 : 08              >            php         ;save flags
1422 : 08              >            php
1423 : e0ff            >            cpx #$ff     ;test result
1425 : d0fe            >            bne *       ;trap
1427 : 68              >            pla         ;load status
                       >            cmp_flag minus
1428 : c9b0            >            cmp #(minus|$30)&$ff
                       >
142a : d0fe            >            bne *       ;trap
142c : 28              >            plp         ;restore status
                        
142d : e8                       inx             ;00
                                tst_x 0,zero
142e : 08              >            php         ;save flags
142f : 08              >            php
1430 : e000            >            cpx #0     ;test result
1432 : d0fe            >            bne *       ;trap
1434 : 68              >            pla         ;load status
                       >            cmp_flag zero
1435 : c932            >            cmp #(zero|$30)&$ff
                       >
1437 : d0fe            >            bne *       ;trap
1439 : 28              >            plp         ;restore status
                        
143a : e8                       inx             ;01
                                tst_x 1,0
143b : 08              >            php         ;save flags
143c : 08              >            php
143d : e001            >            cpx #1     ;test result
143f : d0fe            >            bne *       ;trap
1441 : 68              >            pla         ;load status
                       >            cmp_flag 0
1442 : c930            >            cmp #(0|$30)&$ff
                       >
1444 : d0fe            >            bne *       ;trap
1446 : 28              >            plp         ;restore status
                        
1447 : ca                       dex             ;00
                                tst_x 0,zero
1448 : 08              >            php         ;save flags
1449 : 08              >            php
144a : e000            >            cpx #0     ;test result
144c : d0fe            >            bne *       ;trap
144e : 68              >            pla         ;load status
                       >            cmp_flag zero
144f : c932            >            cmp #(zero|$30)&$ff
                       >
1451 : d0fe            >            bne *       ;trap
1453 : 28              >            plp         ;restore status
                        
1454 : ca                       dex             ;ff
                                tst_x $ff,minus
1455 : 08              >            php         ;save flags
1456 : 08              >            php
1457 : e0ff            >            cpx #$ff     ;test result
1459 : d0fe            >            bne *       ;trap
145b : 68              >            pla         ;load status
                       >            cmp_flag minus
145c : c9b0            >            cmp #(minus|$30)&$ff
                       >
145e : d0fe            >            bne *       ;trap
1460 : 28              >            plp         ;restore status
                        
                        
1461 : a0fe                     ldy #$fe
                                set_stat $ff
                       >            load_flag $ff
1463 : a9ff            >            lda #$ff
                       >
1465 : 48              >            pha         ;use stack to load status
1466 : 28              >            plp
                        
1467 : c8                       iny             ;ff
                                tst_y $ff,$ff-zero
1468 : 08              >            php         ;save flags
1469 : 08              >            php
146a : c0ff            >            cpy #$ff     ;test result
146c : d0fe            >            bne *       ;trap
146e : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
146f : c9fd            >            cmp #($ff-zero|$30)&$ff
                       >
1471 : d0fe            >            bne *       ;trap
1473 : 28              >            plp         ;restore status
                        
1474 : c8                       iny             ;00
                                tst_y 0,$ff-minus
1475 : 08              >            php         ;save flags
1476 : 08              >            php
1477 : c000            >            cpy #0     ;test result
1479 : d0fe            >            bne *       ;trap
147b : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
147c : c97f            >            cmp #($ff-minus|$30)&$ff
                       >
147e : d0fe            >            bne *       ;trap
1480 : 28              >            plp         ;restore status
                        
1481 : c8                       iny             ;01
                                tst_y 1,$ff-minus-zero
1482 : 08              >            php         ;save flags
1483 : 08              >            php
1484 : c001            >            cpy #1     ;test result
1486 : d0fe            >            bne *       ;trap
1488 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
1489 : c97d            >            cmp #($ff-minus-zero|$30)&$ff
                       >
148b : d0fe            >            bne *       ;trap
148d : 28              >            plp         ;restore status
                        
148e : 88                       dey             ;00
                                tst_y 0,$ff-minus
148f : 08              >            php         ;save flags
1490 : 08              >            php
1491 : c000            >            cpy #0     ;test result
1493 : d0fe            >            bne *       ;trap
1495 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
1496 : c97f            >            cmp #($ff-minus|$30)&$ff
                       >
1498 : d0fe            >            bne *       ;trap
149a : 28              >            plp         ;restore status
                        
149b : 88                       dey             ;ff
                                tst_y $ff,$ff-zero
149c : 08              >            php         ;save flags
149d : 08              >            php
149e : c0ff            >            cpy #$ff     ;test result
14a0 : d0fe            >            bne *       ;trap
14a2 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
14a3 : c9fd            >            cmp #($ff-zero|$30)&$ff
                       >
14a5 : d0fe            >            bne *       ;trap
14a7 : 28              >            plp         ;restore status
                        
14a8 : 88                       dey             ;fe
                                set_stat 0
                       >            load_flag 0
14a9 : a900            >            lda #0
                       >
14ab : 48              >            pha         ;use stack to load status
14ac : 28              >            plp
                        
14ad : c8                       iny             ;ff
                                tst_y $ff,0+minus
14ae : 08              >            php         ;save flags
14af : 08              >            php
14b0 : c0ff            >            cpy #$ff     ;test result
14b2 : d0fe            >            bne *       ;trap
14b4 : 68              >            pla         ;load status
                       >            cmp_flag 0+minus
14b5 : c9b0            >            cmp #(0+minus|$30)&$ff
                       >
14b7 : d0fe            >            bne *       ;trap
14b9 : 28              >            plp         ;restore status
                        
14ba : c8                       iny             ;00
                                tst_y 0,zero
14bb : 08              >            php         ;save flags
14bc : 08              >            php
14bd : c000            >            cpy #0     ;test result
14bf : d0fe            >            bne *       ;trap
14c1 : 68              >            pla         ;load status
                       >            cmp_flag zero
14c2 : c932            >            cmp #(zero|$30)&$ff
                       >
14c4 : d0fe            >            bne *       ;trap
14c6 : 28              >            plp         ;restore status
                        
14c7 : c8                       iny             ;01
                                tst_y 1,0
14c8 : 08              >            php         ;save flags
14c9 : 08              >            php
14ca : c001            >            cpy #1     ;test result
14cc : d0fe            >            bne *       ;trap
14ce : 68              >            pla         ;load status
                       >            cmp_flag 0
14cf : c930            >            cmp #(0|$30)&$ff
                       >
14d1 : d0fe            >            bne *       ;trap
14d3 : 28              >            plp         ;restore status
                        
14d4 : 88                       dey             ;00
                                tst_y 0,zero
14d5 : 08              >            php         ;save flags
14d6 : 08              >            php
14d7 : c000            >            cpy #0     ;test result
14d9 : d0fe            >            bne *       ;trap
14db : 68              >            pla         ;load status
                       >            cmp_flag zero
14dc : c932            >            cmp #(zero|$30)&$ff
                       >
14de : d0fe            >            bne *       ;trap
14e0 : 28              >            plp         ;restore status
                        
14e1 : 88                       dey             ;ff
                                tst_y $ff,minus
14e2 : 08              >            php         ;save flags
14e3 : 08              >            php
14e4 : c0ff            >            cpy #$ff     ;test result
14e6 : d0fe            >            bne *       ;trap
14e8 : 68              >            pla         ;load status
                       >            cmp_flag minus
14e9 : c9b0            >            cmp #(minus|$30)&$ff
                       >
14eb : d0fe            >            bne *       ;trap
14ed : 28              >            plp         ;restore status
                        
                        
14ee : a2ff                     ldx #$ff
                                set_stat $ff
                       >            load_flag $ff
14f0 : a9ff            >            lda #$ff
                       >
14f2 : 48              >            pha         ;use stack to load status
14f3 : 28              >            plp
                        
14f4 : 8a                       txa
                                tst_a $ff,$ff-zero
14f5 : 08              >            php         ;save flags
14f6 : 08              >            php
14f7 : c9ff            >            cmp #$ff     ;test result
14f9 : d0fe            >            bne *       ;trap
14fb : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
14fc : c9fd            >            cmp #($ff-zero|$30)&$ff
                       >
14fe : d0fe            >            bne *       ;trap
1500 : 28              >            plp         ;restore status
                        
1501 : 08                       php
1502 : e8                       inx             ;00
1503 : 28                       plp
1504 : 8a                       txa
                                tst_a 0,$ff-minus
1505 : 08              >            php         ;save flags
1506 : 08              >            php
1507 : c900            >            cmp #0     ;test result
1509 : d0fe            >            bne *       ;trap
150b : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
150c : c97f            >            cmp #($ff-minus|$30)&$ff
                       >
150e : d0fe            >            bne *       ;trap
1510 : 28              >            plp         ;restore status
                        
1511 : 08                       php
1512 : e8                       inx             ;01
1513 : 28                       plp
1514 : 8a                       txa
                                tst_a 1,$ff-minus-zero
1515 : 08              >            php         ;save flags
1516 : 08              >            php
1517 : c901            >            cmp #1     ;test result
1519 : d0fe            >            bne *       ;trap
151b : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
151c : c97d            >            cmp #($ff-minus-zero|$30)&$ff
                       >
151e : d0fe            >            bne *       ;trap
1520 : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
1521 : a900            >            lda #0
                       >
1523 : 48              >            pha         ;use stack to load status
1524 : 28              >            plp
                        
1525 : 8a                       txa
                                tst_a 1,0
1526 : 08              >            php         ;save flags
1527 : 08              >            php
1528 : c901            >            cmp #1     ;test result
152a : d0fe            >            bne *       ;trap
152c : 68              >            pla         ;load status
                       >            cmp_flag 0
152d : c930            >            cmp #(0|$30)&$ff
                       >
152f : d0fe            >            bne *       ;trap
1531 : 28              >            plp         ;restore status
                        
1532 : 08                       php
1533 : ca                       dex             ;00
1534 : 28                       plp
1535 : 8a                       txa
                                tst_a 0,zero
1536 : 08              >            php         ;save flags
1537 : 08              >            php
1538 : c900            >            cmp #0     ;test result
153a : d0fe            >            bne *       ;trap
153c : 68              >            pla         ;load status
                       >            cmp_flag zero
153d : c932            >            cmp #(zero|$30)&$ff
                       >
153f : d0fe            >            bne *       ;trap
1541 : 28              >            plp         ;restore status
                        
1542 : 08                       php
1543 : ca                       dex             ;ff
1544 : 28                       plp
1545 : 8a                       txa
                                tst_a $ff,minus
1546 : 08              >            php         ;save flags
1547 : 08              >            php
1548 : c9ff            >            cmp #$ff     ;test result
154a : d0fe            >            bne *       ;trap
154c : 68              >            pla         ;load status
                       >            cmp_flag minus
154d : c9b0            >            cmp #(minus|$30)&$ff
                       >
154f : d0fe            >            bne *       ;trap
1551 : 28              >            plp         ;restore status
                        
                        
1552 : a0ff                     ldy #$ff
                                set_stat $ff
                       >            load_flag $ff
1554 : a9ff            >            lda #$ff
                       >
1556 : 48              >            pha         ;use stack to load status
1557 : 28              >            plp
                        
1558 : 98                       tya
                                tst_a $ff,$ff-zero
1559 : 08              >            php         ;save flags
155a : 08              >            php
155b : c9ff            >            cmp #$ff     ;test result
155d : d0fe            >            bne *       ;trap
155f : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
1560 : c9fd            >            cmp #($ff-zero|$30)&$ff
                       >
1562 : d0fe            >            bne *       ;trap
1564 : 28              >            plp         ;restore status
                        
1565 : 08                       php
1566 : c8                       iny             ;00
1567 : 28                       plp
1568 : 98                       tya
                                tst_a 0,$ff-minus
1569 : 08              >            php         ;save flags
156a : 08              >            php
156b : c900            >            cmp #0     ;test result
156d : d0fe            >            bne *       ;trap
156f : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
1570 : c97f            >            cmp #($ff-minus|$30)&$ff
                       >
1572 : d0fe            >            bne *       ;trap
1574 : 28              >            plp         ;restore status
                        
1575 : 08                       php
1576 : c8                       iny             ;01
1577 : 28                       plp
1578 : 98                       tya
                                tst_a 1,$ff-minus-zero
1579 : 08              >            php         ;save flags
157a : 08              >            php
157b : c901            >            cmp #1     ;test result
157d : d0fe            >            bne *       ;trap
157f : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
1580 : c97d            >            cmp #($ff-minus-zero|$30)&$ff
                       >
1582 : d0fe            >            bne *       ;trap
1584 : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
1585 : a900            >            lda #0
                       >
1587 : 48              >            pha         ;use stack to load status
1588 : 28              >            plp
                        
1589 : 98                       tya
                                tst_a 1,0
158a : 08              >            php         ;save flags
158b : 08              >            php
158c : c901            >            cmp #1     ;test result
158e : d0fe            >            bne *       ;trap
1590 : 68              >            pla         ;load status
                       >            cmp_flag 0
1591 : c930            >            cmp #(0|$30)&$ff
                       >
1593 : d0fe            >            bne *       ;trap
1595 : 28              >            plp         ;restore status
                        
1596 : 08                       php
1597 : 88                       dey             ;00
1598 : 28                       plp
1599 : 98                       tya
                                tst_a 0,zero
159a : 08              >            php         ;save flags
159b : 08              >            php
159c : c900            >            cmp #0     ;test result
159e : d0fe            >            bne *       ;trap
15a0 : 68              >            pla         ;load status
                       >            cmp_flag zero
15a1 : c932            >            cmp #(zero|$30)&$ff
                       >
15a3 : d0fe            >            bne *       ;trap
15a5 : 28              >            plp         ;restore status
                        
15a6 : 08                       php
15a7 : 88                       dey             ;ff
15a8 : 28                       plp
15a9 : 98                       tya
                                tst_a $ff,minus
15aa : 08              >            php         ;save flags
15ab : 08              >            php
15ac : c9ff            >            cmp #$ff     ;test result
15ae : d0fe            >            bne *       ;trap
15b0 : 68              >            pla         ;load status
                       >            cmp_flag minus
15b1 : c9b0            >            cmp #(minus|$30)&$ff
                       >
15b3 : d0fe            >            bne *       ;trap
15b5 : 28              >            plp         ;restore status
                        
                        
                                load_flag $ff
15b6 : a9ff            >            lda #$ff
                        
15b8 : 48                       pha
15b9 : a2ff                     ldx #$ff        ;ff
15bb : 8a                       txa
15bc : 28                       plp
15bd : a8                       tay
                                tst_y $ff,$ff-zero
15be : 08              >            php         ;save flags
15bf : 08              >            php
15c0 : c0ff            >            cpy #$ff     ;test result
15c2 : d0fe            >            bne *       ;trap
15c4 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
15c5 : c9fd            >            cmp #($ff-zero|$30)&$ff
                       >
15c7 : d0fe            >            bne *       ;trap
15c9 : 28              >            plp         ;restore status
                        
15ca : 08                       php
15cb : e8                       inx             ;00
15cc : 8a                       txa
15cd : 28                       plp
15ce : a8                       tay
                                tst_y 0,$ff-minus
15cf : 08              >            php         ;save flags
15d0 : 08              >            php
15d1 : c000            >            cpy #0     ;test result
15d3 : d0fe            >            bne *       ;trap
15d5 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
15d6 : c97f            >            cmp #($ff-minus|$30)&$ff
                       >
15d8 : d0fe            >            bne *       ;trap
15da : 28              >            plp         ;restore status
                        
15db : 08                       php
15dc : e8                       inx             ;01
15dd : 8a                       txa
15de : 28                       plp
15df : a8                       tay
                                tst_y 1,$ff-minus-zero
15e0 : 08              >            php         ;save flags
15e1 : 08              >            php
15e2 : c001            >            cpy #1     ;test result
15e4 : d0fe            >            bne *       ;trap
15e6 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
15e7 : c97d            >            cmp #($ff-minus-zero|$30)&$ff
                       >
15e9 : d0fe            >            bne *       ;trap
15eb : 28              >            plp         ;restore status
                        
                                load_flag 0
15ec : a900            >            lda #0
                        
15ee : 48                       pha
15ef : a900                     lda #0
15f1 : 8a                       txa
15f2 : 28                       plp
15f3 : a8                       tay
                                tst_y 1,0
15f4 : 08              >            php         ;save flags
15f5 : 08              >            php
15f6 : c001            >            cpy #1     ;test result
15f8 : d0fe            >            bne *       ;trap
15fa : 68              >            pla         ;load status
                       >            cmp_flag 0
15fb : c930            >            cmp #(0|$30)&$ff
                       >
15fd : d0fe            >            bne *       ;trap
15ff : 28              >            plp         ;restore status
                        
1600 : 08                       php
1601 : ca                       dex             ;00
1602 : 8a                       txa
1603 : 28                       plp
1604 : a8                       tay
                                tst_y 0,zero
1605 : 08              >            php         ;save flags
1606 : 08              >            php
1607 : c000            >            cpy #0     ;test result
1609 : d0fe            >            bne *       ;trap
160b : 68              >            pla         ;load status
                       >            cmp_flag zero
160c : c932            >            cmp #(zero|$30)&$ff
                       >
160e : d0fe            >            bne *       ;trap
1610 : 28              >            plp         ;restore status
                        
1611 : 08                       php
1612 : ca                       dex             ;ff
1613 : 8a                       txa
1614 : 28                       plp
1615 : a8                       tay
                                tst_y $ff,minus
1616 : 08              >            php         ;save flags
1617 : 08              >            php
1618 : c0ff            >            cpy #$ff     ;test result
161a : d0fe            >            bne *       ;trap
161c : 68              >            pla         ;load status
                       >            cmp_flag minus
161d : c9b0            >            cmp #(minus|$30)&$ff
                       >
161f : d0fe            >            bne *       ;trap
1621 : 28              >            plp         ;restore status
                        
                        
                        
                                load_flag $ff
1622 : a9ff            >            lda #$ff
                        
1624 : 48                       pha
1625 : a0ff                     ldy #$ff        ;ff
1627 : 98                       tya
1628 : 28                       plp
1629 : aa                       tax
                                tst_x $ff,$ff-zero
162a : 08              >            php         ;save flags
162b : 08              >            php
162c : e0ff            >            cpx #$ff     ;test result
162e : d0fe            >            bne *       ;trap
1630 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
1631 : c9fd            >            cmp #($ff-zero|$30)&$ff
                       >
1633 : d0fe            >            bne *       ;trap
1635 : 28              >            plp         ;restore status
                        
1636 : 08                       php
1637 : c8                       iny             ;00
1638 : 98                       tya
1639 : 28                       plp
163a : aa                       tax
                                tst_x 0,$ff-minus
163b : 08              >            php         ;save flags
163c : 08              >            php
163d : e000            >            cpx #0     ;test result
163f : d0fe            >            bne *       ;trap
1641 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
1642 : c97f            >            cmp #($ff-minus|$30)&$ff
                       >
1644 : d0fe            >            bne *       ;trap
1646 : 28              >            plp         ;restore status
                        
1647 : 08                       php
1648 : c8                       iny             ;01
1649 : 98                       tya
164a : 28                       plp
164b : aa                       tax
                                tst_x 1,$ff-minus-zero
164c : 08              >            php         ;save flags
164d : 08              >            php
164e : e001            >            cpx #1     ;test result
1650 : d0fe            >            bne *       ;trap
1652 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
1653 : c97d            >            cmp #($ff-minus-zero|$30)&$ff
                       >
1655 : d0fe            >            bne *       ;trap
1657 : 28              >            plp         ;restore status
                        
                                load_flag 0
1658 : a900            >            lda #0
                        
165a : 48                       pha
165b : a900                     lda #0          ;preset status
165d : 98                       tya
165e : 28                       plp
165f : aa                       tax
                                tst_x 1,0
1660 : 08              >            php         ;save flags
1661 : 08              >            php
1662 : e001            >            cpx #1     ;test result
1664 : d0fe            >            bne *       ;trap
1666 : 68              >            pla         ;load status
                       >            cmp_flag 0
1667 : c930            >            cmp #(0|$30)&$ff
                       >
1669 : d0fe            >            bne *       ;trap
166b : 28              >            plp         ;restore status
                        
166c : 08                       php
166d : 88                       dey             ;00
166e : 98                       tya
166f : 28                       plp
1670 : aa                       tax
                                tst_x 0,zero
1671 : 08              >            php         ;save flags
1672 : 08              >            php
1673 : e000            >            cpx #0     ;test result
1675 : d0fe            >            bne *       ;trap
1677 : 68              >            pla         ;load status
                       >            cmp_flag zero
1678 : c932            >            cmp #(zero|$30)&$ff
                       >
167a : d0fe            >            bne *       ;trap
167c : 28              >            plp         ;restore status
                        
167d : 08                       php
167e : 88                       dey             ;ff
167f : 98                       tya
1680 : 28                       plp
1681 : aa                       tax
                                tst_x $ff,minus
1682 : 08              >            php         ;save flags
1683 : 08              >            php
1684 : e0ff            >            cpx #$ff     ;test result
1686 : d0fe            >            bne *       ;trap
1688 : 68              >            pla         ;load status
                       >            cmp_flag minus
1689 : c9b0            >            cmp #(minus|$30)&$ff
                       >
168b : d0fe            >            bne *       ;trap
168d : 28              >            plp         ;restore status
                        
                        
                        ;TSX sets NZ - TXS does not
168e : a201                     ldx #1          ;01
                                set_stat $ff
                       >            load_flag $ff
1690 : a9ff            >            lda #$ff
                       >
1692 : 48              >            pha         ;use stack to load status
1693 : 28              >            plp
                        
1694 : 9a                       txs
1695 : 08                       php
1696 : ad0101                   lda $101
                                cmp_flag $ff
1699 : c9ff            >            cmp #($ff|$30)&$ff
                        
169b : d0fe                     bne *
                                set_stat 0
                       >            load_flag 0
169d : a900            >            lda #0
                       >
169f : 48              >            pha         ;use stack to load status
16a0 : 28              >            plp
                        
16a1 : 9a                       txs
16a2 : 08                       php
16a3 : ad0101                   lda $101
                                cmp_flag 0
16a6 : c930            >            cmp #(0|$30)&$ff
                        
16a8 : d0fe                     bne *
16aa : ca                       dex             ;00
                                set_stat $ff
                       >            load_flag $ff
16ab : a9ff            >            lda #$ff
                       >
16ad : 48              >            pha         ;use stack to load status
16ae : 28              >            plp
                        
16af : 9a                       txs
16b0 : 08                       php
16b1 : ad0001                   lda $100
                                cmp_flag $ff
16b4 : c9ff            >            cmp #($ff|$30)&$ff
                        
16b6 : d0fe                     bne *
                                set_stat 0
                       >            load_flag 0
16b8 : a900            >            lda #0
                       >
16ba : 48              >            pha         ;use stack to load status
16bb : 28              >            plp
                        
16bc : 9a                       txs
16bd : 08                       php
16be : ad0001                   lda $100
                                cmp_flag 0
16c1 : c930            >            cmp #(0|$30)&$ff
                        
16c3 : d0fe                     bne *
16c5 : ca                       dex             ;ff
                                set_stat $ff
                       >            load_flag $ff
16c6 : a9ff            >            lda #$ff
                       >
16c8 : 48              >            pha         ;use stack to load status
16c9 : 28              >            plp
                        
16ca : 9a                       txs
16cb : 08                       php
16cc : adff01                   lda $1ff
                                cmp_flag $ff
16cf : c9ff            >            cmp #($ff|$30)&$ff
                        
16d1 : d0fe                     bne *
                                set_stat 0
                       >            load_flag 0
16d3 : a900            >            lda #0
                       >
16d5 : 48              >            pha         ;use stack to load status
16d6 : 28              >            plp
                        
16d7 : 9a                       txs
16d8 : 08                       php
16d9 : adff01                   lda $1ff
                                cmp_flag 0
16dc : c930            >            cmp #(0|$30)&$ff
                        
                        
16de : a201                     ldx #1
16e0 : 9a                       txs             ;sp=01
                                set_stat $ff
                       >            load_flag $ff
16e1 : a9ff            >            lda #$ff
                       >
16e3 : 48              >            pha         ;use stack to load status
16e4 : 28              >            plp
                        
16e5 : ba                       tsx             ;clears Z, N
16e6 : 08                       php             ;sp=00
16e7 : e001                     cpx #1
16e9 : d0fe                     bne *
16eb : ad0101                   lda $101
                                cmp_flag $ff-minus-zero
16ee : c97d            >            cmp #($ff-minus-zero|$30)&$ff
                        
16f0 : d0fe                     bne *
                                set_stat $ff
                       >            load_flag $ff
16f2 : a9ff            >            lda #$ff
                       >
16f4 : 48              >            pha         ;use stack to load status
16f5 : 28              >            plp
                        
16f6 : ba                       tsx             ;clears N, sets Z
16f7 : 08                       php             ;sp=ff
16f8 : e000                     cpx #0
16fa : d0fe                     bne *
16fc : ad0001                   lda $100
                                cmp_flag $ff-minus
16ff : c97f            >            cmp #($ff-minus|$30)&$ff
                        
1701 : d0fe                     bne *
                                set_stat $ff
                       >            load_flag $ff
1703 : a9ff            >            lda #$ff
                       >
1705 : 48              >            pha         ;use stack to load status
1706 : 28              >            plp
                        
1707 : ba                       tsx             ;clears N, sets Z
1708 : 08                       php             ;sp=fe
1709 : e0ff                     cpx #$ff
170b : d0fe                     bne *
170d : adff01                   lda $1ff
                                cmp_flag $ff-zero
1710 : c9fd            >            cmp #($ff-zero|$30)&$ff
                        
1712 : d0fe                     bne *
                        
1714 : a201                     ldx #1
1716 : 9a                       txs             ;sp=01
                                set_stat 0
                       >            load_flag 0
1717 : a900            >            lda #0
                       >
1719 : 48              >            pha         ;use stack to load status
171a : 28              >            plp
                        
171b : ba                       tsx             ;clears Z, N
171c : 08                       php             ;sp=00
171d : e001                     cpx #1
171f : d0fe                     bne *
1721 : ad0101                   lda $101
                                cmp_flag 0
1724 : c930            >            cmp #(0|$30)&$ff
                        
1726 : d0fe                     bne *
                                set_stat 0
                       >            load_flag 0
1728 : a900            >            lda #0
                       >
172a : 48              >            pha         ;use stack to load status
172b : 28              >            plp
                        
172c : ba                       tsx             ;clears N, sets Z
172d : 08                       php             ;sp=ff
172e : e000                     cpx #0
1730 : d0fe                     bne *
1732 : ad0001                   lda $100
                                cmp_flag zero
1735 : c932            >            cmp #(zero|$30)&$ff
                        
1737 : d0fe                     bne *
                                set_stat 0
                       >            load_flag 0
1739 : a900            >            lda #0
                       >
173b : 48              >            pha         ;use stack to load status
173c : 28              >            plp
                        
173d : ba                       tsx             ;clears N, sets Z
173e : 08                       php             ;sp=fe
173f : e0ff                     cpx #$ff
1741 : d0fe                     bne *
1743 : adff01                   lda $1ff
                                cmp_flag minus
1746 : c9b0            >            cmp #(minus|$30)&$ff
                        
1748 : d0fe                     bne *
174a : 68                       pla             ;sp=ff
                        
                        ; testing index register load & store LDY LDX STY STX all addressing modes
                        ; LDX / STX - zp,y / abs,y
174b : a003                     ldy #3
174d :                  tldx
                                set_stat 0
                       >            load_flag 0
174d : a900            >            lda #0
                       >
174f : 48              >            pha         ;use stack to load status
1750 : 28              >            plp
                        
1751 : b60a                     ldx zp1,y
1753 : 08                       php         ;test stores do not alter flags
1754 : 8a                       txa
1755 : 49c3                     eor #$c3
1757 : 28                       plp
1758 : 993302                   sta abst,y
175b : 08                       php         ;flags after load/store sequence
175c : 49c3                     eor #$c3
175e : d90002                   cmp abs1,y  ;test result
1761 : d0fe                     bne *       ;trap
1763 : 68                       pla         ;load status
                                eor_flag 0    ;always on bits
1764 : 4930            >            eor #(0    |$30)
                        
1766 : d90502                   cmp fLDx,y  ;test flags
1769 : d0fe                     bne *       ;trap
176b : 88                       dey
176c : 10df                     bpl tldx
                        
176e : a003                     ldy #3
1770 :                  tldx1
                                set_stat $ff
                       >            load_flag $ff
1770 : a9ff            >            lda #$ff
                       >
1772 : 48              >            pha         ;use stack to load status
1773 : 28              >            plp
                        
1774 : b60a                     ldx zp1,y
1776 : 08                       php         ;test stores do not alter flags
1777 : 8a                       txa
1778 : 49c3                     eor #$c3
177a : 28                       plp
177b : 993302                   sta abst,y
177e : 08                       php         ;flags after load/store sequence
177f : 49c3                     eor #$c3
1781 : d90002                   cmp abs1,y  ;test result
1784 : d0fe                     bne *       ;trap
1786 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1787 : 497d            >            eor #(lo~fnz |$30)
                        
1789 : d90502                   cmp fLDx,y  ;test flags
178c : d0fe                     bne *       ;trap
178e : 88                       dey
178f : 10df                     bpl tldx1
                        
1791 : a003                     ldy #3
1793 :                  tldx2
                                set_stat 0
                       >            load_flag 0
1793 : a900            >            lda #0
                       >
1795 : 48              >            pha         ;use stack to load status
1796 : 28              >            plp
                        
1797 : be0002                   ldx abs1,y
179a : 08                       php         ;test stores do not alter flags
179b : 8a                       txa
179c : 49c3                     eor #$c3
179e : aa                       tax
179f : 28                       plp
17a0 : 960f                     stx zpt,y
17a2 : 08                       php         ;flags after load/store sequence
17a3 : 49c3                     eor #$c3
17a5 : d90a00                   cmp zp1,y   ;test result
17a8 : d0fe                     bne *       ;trap
17aa : 68                       pla         ;load status
                                eor_flag 0
17ab : 4930            >            eor #(0|$30)
                        
17ad : d90502                   cmp fLDx,y  ;test flags
17b0 : d0fe                     bne *       ;trap
17b2 : 88                       dey
17b3 : 10de                     bpl tldx2
                        
17b5 : a003                     ldy #3
17b7 :                  tldx3
                                set_stat $ff
                       >            load_flag $ff
17b7 : a9ff            >            lda #$ff
                       >
17b9 : 48              >            pha         ;use stack to load status
17ba : 28              >            plp
                        
17bb : be0002                   ldx abs1,y
17be : 08                       php         ;test stores do not alter flags
17bf : 8a                       txa
17c0 : 49c3                     eor #$c3
17c2 : aa                       tax
17c3 : 28                       plp
17c4 : 960f                     stx zpt,y
17c6 : 08                       php         ;flags after load/store sequence
17c7 : 49c3                     eor #$c3
17c9 : d90a00                   cmp zp1,y   ;test result
17cc : d0fe                     bne *       ;trap
17ce : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
17cf : 497d            >            eor #(lo~fnz |$30)
                        
17d1 : d90502                   cmp fLDx,y  ;test flags
17d4 : d0fe                     bne *       ;trap
17d6 : 88                       dey
17d7 : 10de                     bpl tldx3
                        
17d9 : a003                     ldy #3      ;testing store result
17db : a200                     ldx #0
17dd : b90f00           tstx    lda zpt,y
17e0 : 49c3                     eor #$c3
17e2 : d90a00                   cmp zp1,y
17e5 : d0fe                     bne *       ;trap: store to zp data
17e7 : 960f                     stx zpt,y   ;clear
17e9 : b93302                   lda abst,y
17ec : 49c3                     eor #$c3
17ee : d90002                   cmp abs1,y
17f1 : d0fe                     bne *       ;trap: store to abs data
17f3 : 8a                       txa
17f4 : 993302                   sta abst,y  ;clear
17f7 : 88                       dey
17f8 : 10e3                     bpl tstx
                        
                        ; indexed wraparound test (only zp should wrap)
17fa : a0fd                     ldy #3+$fa
17fc : b610             tldx4   ldx zp1-$fa&$ff,y   ;wrap on indexed zp
17fe : 8a                       txa
17ff : 993901                   sta abst-$fa,y      ;no STX abs,y!
1802 : 88                       dey
1803 : c0fa                     cpy #$fa
1805 : b0f5                     bcs tldx4
1807 : a0fd                     ldy #3+$fa
1809 : be0601           tldx5   ldx abs1-$fa,y      ;no wrap on indexed abs
180c : 9615                     stx zpt-$fa&$ff,y
180e : 88                       dey
180f : c0fa                     cpy #$fa
1811 : b0f6                     bcs tldx5
1813 : a003                     ldy #3      ;testing wraparound result
1815 : a200                     ldx #0
1817 : b90f00           tstx1   lda zpt,y
181a : d90a00                   cmp zp1,y
181d : d0fe                     bne *       ;trap: store to zp data
181f : 960f                     stx zpt,y   ;clear
1821 : b93302                   lda abst,y
1824 : d90002                   cmp abs1,y
1827 : d0fe                     bne *       ;trap: store to abs data
1829 : 8a                       txa
182a : 993302                   sta abst,y  ;clear
182d : 88                       dey
182e : 10e7                     bpl tstx1
                        
                        ; LDY / STY - zp,x / abs,x
1830 : a203                     ldx #3
1832 :                  tldy
                                set_stat 0
                       >            load_flag 0
1832 : a900            >            lda #0
                       >
1834 : 48              >            pha         ;use stack to load status
1835 : 28              >            plp
                        
1836 : b40a                     ldy zp1,x
1838 : 08                       php         ;test stores do not alter flags
1839 : 98                       tya
183a : 49c3                     eor #$c3
183c : 28                       plp
183d : 9d3302                   sta abst,x
1840 : 08                       php         ;flags after load/store sequence
1841 : 49c3                     eor #$c3
1843 : dd0002                   cmp abs1,x  ;test result
1846 : d0fe                     bne *       ;trap
1848 : 68                       pla         ;load status
                                eor_flag 0
1849 : 4930            >            eor #(0|$30)
                        
184b : dd0502                   cmp fLDx,x  ;test flags
184e : d0fe                     bne *       ;trap
1850 : ca                       dex
1851 : 10df                     bpl tldy
                        
1853 : a203                     ldx #3
1855 :                  tldy1
                                set_stat $ff
                       >            load_flag $ff
1855 : a9ff            >            lda #$ff
                       >
1857 : 48              >            pha         ;use stack to load status
1858 : 28              >            plp
                        
1859 : b40a                     ldy zp1,x
185b : 08                       php         ;test stores do not alter flags
185c : 98                       tya
185d : 49c3                     eor #$c3
185f : 28                       plp
1860 : 9d3302                   sta abst,x
1863 : 08                       php         ;flags after load/store sequence
1864 : 49c3                     eor #$c3
1866 : dd0002                   cmp abs1,x   ;test result
1869 : d0fe                     bne *       ;trap
186b : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
186c : 497d            >            eor #(lo~fnz |$30)
                        
186e : dd0502                   cmp fLDx,x  ;test flags
1871 : d0fe                     bne *       ;trap
1873 : ca                       dex
1874 : 10df                     bpl tldy1
                        
1876 : a203                     ldx #3
1878 :                  tldy2
                                set_stat 0
                       >            load_flag 0
1878 : a900            >            lda #0
                       >
187a : 48              >            pha         ;use stack to load status
187b : 28              >            plp
                        
187c : bc0002                   ldy abs1,x
187f : 08                       php         ;test stores do not alter flags
1880 : 98                       tya
1881 : 49c3                     eor #$c3
1883 : a8                       tay
1884 : 28                       plp
1885 : 940f                     sty zpt,x
1887 : 08                       php         ;flags after load/store sequence
1888 : 49c3                     eor #$c3
188a : d50a                     cmp zp1,x   ;test result
188c : d0fe                     bne *       ;trap
188e : 68                       pla         ;load status
                                eor_flag 0
188f : 4930            >            eor #(0|$30)
                        
1891 : dd0502                   cmp fLDx,x  ;test flags
1894 : d0fe                     bne *       ;trap
1896 : ca                       dex
1897 : 10df                     bpl tldy2
                        
1899 : a203                     ldx #3
189b :                  tldy3
                                set_stat $ff
                       >            load_flag $ff
189b : a9ff            >            lda #$ff
                       >
189d : 48              >            pha         ;use stack to load status
189e : 28              >            plp
                        
189f : bc0002                   ldy abs1,x
18a2 : 08                       php         ;test stores do not alter flags
18a3 : 98                       tya
18a4 : 49c3                     eor #$c3
18a6 : a8                       tay
18a7 : 28                       plp
18a8 : 940f                     sty zpt,x
18aa : 08                       php         ;flags after load/store sequence
18ab : 49c3                     eor #$c3
18ad : d50a                     cmp zp1,x   ;test result
18af : d0fe                     bne *       ;trap
18b1 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
18b2 : 497d            >            eor #(lo~fnz |$30)
                        
18b4 : dd0502                   cmp fLDx,x  ;test flags
18b7 : d0fe                     bne *       ;trap
18b9 : ca                       dex
18ba : 10df                     bpl tldy3
                        
18bc : a203                     ldx #3      ;testing store result
18be : a000                     ldy #0
18c0 : b50f             tsty    lda zpt,x
18c2 : 49c3                     eor #$c3
18c4 : d50a                     cmp zp1,x
18c6 : d0fe                     bne *       ;trap: store to zp,x data
18c8 : 940f                     sty zpt,x   ;clear
18ca : bd3302                   lda abst,x
18cd : 49c3                     eor #$c3
18cf : dd0002                   cmp abs1,x
18d2 : d0fe                     bne *       ;trap: store to abs,x data
18d4 : 8a                       txa
18d5 : 9d3302                   sta abst,x  ;clear
18d8 : ca                       dex
18d9 : 10e5                     bpl tsty
                        
                        ; indexed wraparound test (only zp should wrap)
18db : a2fd                     ldx #3+$fa
18dd : b410             tldy4   ldy zp1-$fa&$ff,x   ;wrap on indexed zp
18df : 98                       tya
18e0 : 9d3901                   sta abst-$fa,x      ;no STX abs,x!
18e3 : ca                       dex
18e4 : e0fa                     cpx #$fa
18e6 : b0f5                     bcs tldy4
18e8 : a2fd                     ldx #3+$fa
18ea : bc0601           tldy5   ldy abs1-$fa,x      ;no wrap on indexed abs
18ed : 9415                     sty zpt-$fa&$ff,x
18ef : ca                       dex
18f0 : e0fa                     cpx #$fa
18f2 : b0f6                     bcs tldy5
18f4 : a203                     ldx #3      ;testing wraparound result
18f6 : a000                     ldy #0
18f8 : b50f             tsty1   lda zpt,x
18fa : d50a                     cmp zp1,x
18fc : d0fe                     bne *       ;trap: store to zp,x data
18fe : 940f                     sty zpt,x   ;clear
1900 : bd3302                   lda abst,x
1903 : dd0002                   cmp abs1,x
1906 : d0fe                     bne *       ;trap: store to abs,x data
1908 : 8a                       txa
1909 : 9d3302                   sta abst,x  ;clear
190c : ca                       dex
190d : 10e9                     bpl tsty1
                        
                        ; LDX / STX - zp / abs / #
                                set_stat 0
                       >            load_flag 0
190f : a900            >            lda #0
                       >
1911 : 48              >            pha         ;use stack to load status
1912 : 28              >            plp
                        
1913 : a60a                     ldx zp1
1915 : 08                       php         ;test stores do not alter flags
1916 : 8a                       txa
1917 : 49c3                     eor #$c3
1919 : aa                       tax
191a : 28                       plp
191b : 8e3302                   stx abst
191e : 08                       php         ;flags after load/store sequence
191f : 49c3                     eor #$c3
1921 : aa                       tax
1922 : e0c3                     cpx #$c3    ;test result
1924 : d0fe                     bne *       ;trap
1926 : 68                       pla         ;load status
                                eor_flag 0
1927 : 4930            >            eor #(0|$30)
                        
1929 : cd0502                   cmp fLDx    ;test flags
192c : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
192e : a900            >            lda #0
                       >
1930 : 48              >            pha         ;use stack to load status
1931 : 28              >            plp
                        
1932 : a60b                     ldx zp1+1
1934 : 08                       php         ;test stores do not alter flags
1935 : 8a                       txa
1936 : 49c3                     eor #$c3
1938 : aa                       tax
1939 : 28                       plp
193a : 8e3402                   stx abst+1
193d : 08                       php         ;flags after load/store sequence
193e : 49c3                     eor #$c3
1940 : aa                       tax
1941 : e082                     cpx #$82    ;test result
1943 : d0fe                     bne *       ;trap
1945 : 68                       pla         ;load status
                                eor_flag 0
1946 : 4930            >            eor #(0|$30)
                        
1948 : cd0602                   cmp fLDx+1  ;test flags
194b : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
194d : a900            >            lda #0
                       >
194f : 48              >            pha         ;use stack to load status
1950 : 28              >            plp
                        
1951 : a60c                     ldx zp1+2
1953 : 08                       php         ;test stores do not alter flags
1954 : 8a                       txa
1955 : 49c3                     eor #$c3
1957 : aa                       tax
1958 : 28                       plp
1959 : 8e3502                   stx abst+2
195c : 08                       php         ;flags after load/store sequence
195d : 49c3                     eor #$c3
195f : aa                       tax
1960 : e041                     cpx #$41    ;test result
1962 : d0fe                     bne *       ;trap
1964 : 68                       pla         ;load status
                                eor_flag 0
1965 : 4930            >            eor #(0|$30)
                        
1967 : cd0702                   cmp fLDx+2  ;test flags
196a : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
196c : a900            >            lda #0
                       >
196e : 48              >            pha         ;use stack to load status
196f : 28              >            plp
                        
1970 : a60d                     ldx zp1+3
1972 : 08                       php         ;test stores do not alter flags
1973 : 8a                       txa
1974 : 49c3                     eor #$c3
1976 : aa                       tax
1977 : 28                       plp
1978 : 8e3602                   stx abst+3
197b : 08                       php         ;flags after load/store sequence
197c : 49c3                     eor #$c3
197e : aa                       tax
197f : e000                     cpx #0      ;test result
1981 : d0fe                     bne *       ;trap
1983 : 68                       pla         ;load status
                                eor_flag 0
1984 : 4930            >            eor #(0|$30)
                        
1986 : cd0802                   cmp fLDx+3  ;test flags
1989 : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
198b : a9ff            >            lda #$ff
                       >
198d : 48              >            pha         ;use stack to load status
198e : 28              >            plp
                        
198f : a60a                     ldx zp1
1991 : 08                       php         ;test stores do not alter flags
1992 : 8a                       txa
1993 : 49c3                     eor #$c3
1995 : aa                       tax
1996 : 28                       plp
1997 : 8e3302                   stx abst
199a : 08                       php         ;flags after load/store sequence
199b : 49c3                     eor #$c3
199d : aa                       tax
199e : e0c3                     cpx #$c3    ;test result
19a0 : d0fe                     bne *       ;trap
19a2 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
19a3 : 497d            >            eor #(lo~fnz |$30)
                        
19a5 : cd0502                   cmp fLDx    ;test flags
19a8 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
19aa : a9ff            >            lda #$ff
                       >
19ac : 48              >            pha         ;use stack to load status
19ad : 28              >            plp
                        
19ae : a60b                     ldx zp1+1
19b0 : 08                       php         ;test stores do not alter flags
19b1 : 8a                       txa
19b2 : 49c3                     eor #$c3
19b4 : aa                       tax
19b5 : 28                       plp
19b6 : 8e3402                   stx abst+1
19b9 : 08                       php         ;flags after load/store sequence
19ba : 49c3                     eor #$c3
19bc : aa                       tax
19bd : e082                     cpx #$82    ;test result
19bf : d0fe                     bne *       ;trap
19c1 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
19c2 : 497d            >            eor #(lo~fnz |$30)
                        
19c4 : cd0602                   cmp fLDx+1  ;test flags
19c7 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
19c9 : a9ff            >            lda #$ff
                       >
19cb : 48              >            pha         ;use stack to load status
19cc : 28              >            plp
                        
19cd : a60c                     ldx zp1+2
19cf : 08                       php         ;test stores do not alter flags
19d0 : 8a                       txa
19d1 : 49c3                     eor #$c3
19d3 : aa                       tax
19d4 : 28                       plp
19d5 : 8e3502                   stx abst+2
19d8 : 08                       php         ;flags after load/store sequence
19d9 : 49c3                     eor #$c3
19db : aa                       tax
19dc : e041                     cpx #$41    ;test result
19de : d0fe                     bne *       ;trap
19e0 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
19e1 : 497d            >            eor #(lo~fnz |$30)
                        
19e3 : cd0702                   cmp fLDx+2  ;test flags
19e6 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
19e8 : a9ff            >            lda #$ff
                       >
19ea : 48              >            pha         ;use stack to load status
19eb : 28              >            plp
                        
19ec : a60d                     ldx zp1+3
19ee : 08                       php         ;test stores do not alter flags
19ef : 8a                       txa
19f0 : 49c3                     eor #$c3
19f2 : aa                       tax
19f3 : 28                       plp
19f4 : 8e3602                   stx abst+3
19f7 : 08                       php         ;flags after load/store sequence
19f8 : 49c3                     eor #$c3
19fa : aa                       tax
19fb : e000                     cpx #0      ;test result
19fd : d0fe                     bne *       ;trap
19ff : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1a00 : 497d            >            eor #(lo~fnz |$30)
                        
1a02 : cd0802                   cmp fLDx+3  ;test flags
1a05 : d0fe                     bne *       ;trap
                        
                                set_stat 0
                       >            load_flag 0
1a07 : a900            >            lda #0
                       >
1a09 : 48              >            pha         ;use stack to load status
1a0a : 28              >            plp
                        
1a0b : ae0002                   ldx abs1
1a0e : 08                       php         ;test stores do not alter flags
1a0f : 8a                       txa
1a10 : 49c3                     eor #$c3
1a12 : aa                       tax
1a13 : 28                       plp
1a14 : 860f                     stx zpt
1a16 : 08                       php         ;flags after load/store sequence
1a17 : 49c3                     eor #$c3
1a19 : c50a                     cmp zp1     ;test result
1a1b : d0fe                     bne *       ;trap
1a1d : 68                       pla         ;load status
                                eor_flag 0    ;always on bits
1a1e : 4930            >            eor #(0    |$30)
                        
1a20 : cd0502                   cmp fLDx    ;test flags
1a23 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1a25 : a900            >            lda #0
                       >
1a27 : 48              >            pha         ;use stack to load status
1a28 : 28              >            plp
                        
1a29 : ae0102                   ldx abs1+1
1a2c : 08                       php         ;test stores do not alter flags
1a2d : 8a                       txa
1a2e : 49c3                     eor #$c3
1a30 : aa                       tax
1a31 : 28                       plp
1a32 : 8610                     stx zpt+1
1a34 : 08                       php         ;flags after load/store sequence
1a35 : 49c3                     eor #$c3
1a37 : c50b                     cmp zp1+1   ;test result
1a39 : d0fe                     bne *       ;trap
1a3b : 68                       pla         ;load status
                                eor_flag 0
1a3c : 4930            >            eor #(0|$30)
                        
1a3e : cd0602                   cmp fLDx+1  ;test flags
1a41 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1a43 : a900            >            lda #0
                       >
1a45 : 48              >            pha         ;use stack to load status
1a46 : 28              >            plp
                        
1a47 : ae0202                   ldx abs1+2
1a4a : 08                       php         ;test stores do not alter flags
1a4b : 8a                       txa
1a4c : 49c3                     eor #$c3
1a4e : aa                       tax
1a4f : 28                       plp
1a50 : 8611                     stx zpt+2
1a52 : 08                       php         ;flags after load/store sequence
1a53 : 49c3                     eor #$c3
1a55 : c50c                     cmp zp1+2   ;test result
1a57 : d0fe                     bne *       ;trap
1a59 : 68                       pla         ;load status
                                eor_flag 0
1a5a : 4930            >            eor #(0|$30)
                        
1a5c : cd0702                   cmp fLDx+2  ;test flags
1a5f : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1a61 : a900            >            lda #0
                       >
1a63 : 48              >            pha         ;use stack to load status
1a64 : 28              >            plp
                        
1a65 : ae0302                   ldx abs1+3
1a68 : 08                       php         ;test stores do not alter flags
1a69 : 8a                       txa
1a6a : 49c3                     eor #$c3
1a6c : aa                       tax
1a6d : 28                       plp
1a6e : 8612                     stx zpt+3
1a70 : 08                       php         ;flags after load/store sequence
1a71 : 49c3                     eor #$c3
1a73 : c50d                     cmp zp1+3   ;test result
1a75 : d0fe                     bne *       ;trap
1a77 : 68                       pla         ;load status
                                eor_flag 0
1a78 : 4930            >            eor #(0|$30)
                        
1a7a : cd0802                   cmp fLDx+3  ;test flags
1a7d : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
1a7f : a9ff            >            lda #$ff
                       >
1a81 : 48              >            pha         ;use stack to load status
1a82 : 28              >            plp
                        
1a83 : ae0002                   ldx abs1
1a86 : 08                       php         ;test stores do not alter flags
1a87 : 8a                       txa
1a88 : 49c3                     eor #$c3
1a8a : aa                       tax
1a8b : 28                       plp
1a8c : 860f                     stx zpt
1a8e : 08                       php         ;flags after load/store sequence
1a8f : 49c3                     eor #$c3
1a91 : aa                       tax
1a92 : e40a                     cpx zp1     ;test result
1a94 : d0fe                     bne *       ;trap
1a96 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1a97 : 497d            >            eor #(lo~fnz |$30)
                        
1a99 : cd0502                   cmp fLDx    ;test flags
1a9c : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1a9e : a9ff            >            lda #$ff
                       >
1aa0 : 48              >            pha         ;use stack to load status
1aa1 : 28              >            plp
                        
1aa2 : ae0102                   ldx abs1+1
1aa5 : 08                       php         ;test stores do not alter flags
1aa6 : 8a                       txa
1aa7 : 49c3                     eor #$c3
1aa9 : aa                       tax
1aaa : 28                       plp
1aab : 8610                     stx zpt+1
1aad : 08                       php         ;flags after load/store sequence
1aae : 49c3                     eor #$c3
1ab0 : aa                       tax
1ab1 : e40b                     cpx zp1+1   ;test result
1ab3 : d0fe                     bne *       ;trap
1ab5 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1ab6 : 497d            >            eor #(lo~fnz |$30)
                        
1ab8 : cd0602                   cmp fLDx+1  ;test flags
1abb : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1abd : a9ff            >            lda #$ff
                       >
1abf : 48              >            pha         ;use stack to load status
1ac0 : 28              >            plp
                        
1ac1 : ae0202                   ldx abs1+2
1ac4 : 08                       php         ;test stores do not alter flags
1ac5 : 8a                       txa
1ac6 : 49c3                     eor #$c3
1ac8 : aa                       tax
1ac9 : 28                       plp
1aca : 8611                     stx zpt+2
1acc : 08                       php         ;flags after load/store sequence
1acd : 49c3                     eor #$c3
1acf : aa                       tax
1ad0 : e40c                     cpx zp1+2   ;test result
1ad2 : d0fe                     bne *       ;trap
1ad4 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1ad5 : 497d            >            eor #(lo~fnz |$30)
                        
1ad7 : cd0702                   cmp fLDx+2  ;test flags
1ada : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1adc : a9ff            >            lda #$ff
                       >
1ade : 48              >            pha         ;use stack to load status
1adf : 28              >            plp
                        
1ae0 : ae0302                   ldx abs1+3
1ae3 : 08                       php         ;test stores do not alter flags
1ae4 : 8a                       txa
1ae5 : 49c3                     eor #$c3
1ae7 : aa                       tax
1ae8 : 28                       plp
1ae9 : 8612                     stx zpt+3
1aeb : 08                       php         ;flags after load/store sequence
1aec : 49c3                     eor #$c3
1aee : aa                       tax
1aef : e40d                     cpx zp1+3   ;test result
1af1 : d0fe                     bne *       ;trap
1af3 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1af4 : 497d            >            eor #(lo~fnz |$30)
                        
1af6 : cd0802                   cmp fLDx+3  ;test flags
1af9 : d0fe                     bne *       ;trap
                        
                                set_stat 0
                       >            load_flag 0
1afb : a900            >            lda #0
                       >
1afd : 48              >            pha         ;use stack to load status
1afe : 28              >            plp
                        
1aff : a2c3                     ldx #$c3
1b01 : 08                       php
1b02 : ec0002                   cpx abs1    ;test result
1b05 : d0fe                     bne *       ;trap
1b07 : 68                       pla         ;load status
                                eor_flag 0
1b08 : 4930            >            eor #(0|$30)
                        
1b0a : cd0502                   cmp fLDx    ;test flags
1b0d : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1b0f : a900            >            lda #0
                       >
1b11 : 48              >            pha         ;use stack to load status
1b12 : 28              >            plp
                        
1b13 : a282                     ldx #$82
1b15 : 08                       php
1b16 : ec0102                   cpx abs1+1  ;test result
1b19 : d0fe                     bne *       ;trap
1b1b : 68                       pla         ;load status
                                eor_flag 0
1b1c : 4930            >            eor #(0|$30)
                        
1b1e : cd0602                   cmp fLDx+1  ;test flags
1b21 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1b23 : a900            >            lda #0
                       >
1b25 : 48              >            pha         ;use stack to load status
1b26 : 28              >            plp
                        
1b27 : a241                     ldx #$41
1b29 : 08                       php
1b2a : ec0202                   cpx abs1+2  ;test result
1b2d : d0fe                     bne *       ;trap
1b2f : 68                       pla         ;load status
                                eor_flag 0
1b30 : 4930            >            eor #(0|$30)
                        
1b32 : cd0702                   cmp fLDx+2  ;test flags
1b35 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1b37 : a900            >            lda #0
                       >
1b39 : 48              >            pha         ;use stack to load status
1b3a : 28              >            plp
                        
1b3b : a200                     ldx #0
1b3d : 08                       php
1b3e : ec0302                   cpx abs1+3  ;test result
1b41 : d0fe                     bne *       ;trap
1b43 : 68                       pla         ;load status
                                eor_flag 0    ;always on bits
1b44 : 4930            >            eor #(0    |$30)
                        
1b46 : cd0802                   cmp fLDx+3  ;test flags
1b49 : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
1b4b : a9ff            >            lda #$ff
                       >
1b4d : 48              >            pha         ;use stack to load status
1b4e : 28              >            plp
                        
1b4f : a2c3                     ldx #$c3
1b51 : 08                       php
1b52 : ec0002                   cpx abs1    ;test result
1b55 : d0fe                     bne *       ;trap
1b57 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1b58 : 497d            >            eor #(lo~fnz |$30)
                        
1b5a : cd0502                   cmp fLDx    ;test flags
1b5d : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1b5f : a9ff            >            lda #$ff
                       >
1b61 : 48              >            pha         ;use stack to load status
1b62 : 28              >            plp
                        
1b63 : a282                     ldx #$82
1b65 : 08                       php
1b66 : ec0102                   cpx abs1+1  ;test result
1b69 : d0fe                     bne *       ;trap
1b6b : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1b6c : 497d            >            eor #(lo~fnz |$30)
                        
1b6e : cd0602                   cmp fLDx+1  ;test flags
1b71 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1b73 : a9ff            >            lda #$ff
                       >
1b75 : 48              >            pha         ;use stack to load status
1b76 : 28              >            plp
                        
1b77 : a241                     ldx #$41
1b79 : 08                       php
1b7a : ec0202                   cpx abs1+2  ;test result
1b7d : d0fe                     bne *       ;trap
1b7f : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1b80 : 497d            >            eor #(lo~fnz |$30)
                        
1b82 : cd0702                   cmp fLDx+2  ;test flags
1b85 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1b87 : a9ff            >            lda #$ff
                       >
1b89 : 48              >            pha         ;use stack to load status
1b8a : 28              >            plp
                        
1b8b : a200                     ldx #0
1b8d : 08                       php
1b8e : ec0302                   cpx abs1+3  ;test result
1b91 : d0fe                     bne *       ;trap
1b93 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1b94 : 497d            >            eor #(lo~fnz |$30)
                        
1b96 : cd0802                   cmp fLDx+3  ;test flags
1b99 : d0fe                     bne *       ;trap
                        
1b9b : a200                     ldx #0
1b9d : a50f                     lda zpt
1b9f : 49c3                     eor #$c3
1ba1 : c50a                     cmp zp1
1ba3 : d0fe                     bne *       ;trap: store to zp data
1ba5 : 860f                     stx zpt     ;clear
1ba7 : ad3302                   lda abst
1baa : 49c3                     eor #$c3
1bac : cd0002                   cmp abs1
1baf : d0fe                     bne *       ;trap: store to abs data
1bb1 : 8e3302                   stx abst    ;clear
1bb4 : a510                     lda zpt+1
1bb6 : 49c3                     eor #$c3
1bb8 : c50b                     cmp zp1+1
1bba : d0fe                     bne *       ;trap: store to zp data
1bbc : 8610                     stx zpt+1   ;clear
1bbe : ad3402                   lda abst+1
1bc1 : 49c3                     eor #$c3
1bc3 : cd0102                   cmp abs1+1
1bc6 : d0fe                     bne *       ;trap: store to abs data
1bc8 : 8e3402                   stx abst+1  ;clear
1bcb : a511                     lda zpt+2
1bcd : 49c3                     eor #$c3
1bcf : c50c                     cmp zp1+2
1bd1 : d0fe                     bne *       ;trap: store to zp data
1bd3 : 8611                     stx zpt+2   ;clear
1bd5 : ad3502                   lda abst+2
1bd8 : 49c3                     eor #$c3
1bda : cd0202                   cmp abs1+2
1bdd : d0fe                     bne *       ;trap: store to abs data
1bdf : 8e3502                   stx abst+2  ;clear
1be2 : a512                     lda zpt+3
1be4 : 49c3                     eor #$c3
1be6 : c50d                     cmp zp1+3
1be8 : d0fe                     bne *       ;trap: store to zp data
1bea : 8612                     stx zpt+3   ;clear
1bec : ad3602                   lda abst+3
1bef : 49c3                     eor #$c3
1bf1 : cd0302                   cmp abs1+3
1bf4 : d0fe                     bne *       ;trap: store to abs data
1bf6 : 8e3602                   stx abst+3  ;clear
                        
                        ; LDY / STY - zp / abs / #
                                set_stat 0
                       >            load_flag 0
1bf9 : a900            >            lda #0
                       >
1bfb : 48              >            pha         ;use stack to load status
1bfc : 28              >            plp
                        
1bfd : a40a                     ldy zp1
1bff : 08                       php         ;test stores do not alter flags
1c00 : 98                       tya
1c01 : 49c3                     eor #$c3
1c03 : a8                       tay
1c04 : 28                       plp
1c05 : 8c3302                   sty abst
1c08 : 08                       php         ;flags after load/store sequence
1c09 : 49c3                     eor #$c3
1c0b : a8                       tay
1c0c : c0c3                     cpy #$c3    ;test result
1c0e : d0fe                     bne *       ;trap
1c10 : 68                       pla         ;load status
                                eor_flag 0
1c11 : 4930            >            eor #(0|$30)
                        
1c13 : cd0502                   cmp fLDx    ;test flags
1c16 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1c18 : a900            >            lda #0
                       >
1c1a : 48              >            pha         ;use stack to load status
1c1b : 28              >            plp
                        
1c1c : a40b                     ldy zp1+1
1c1e : 08                       php         ;test stores do not alter flags
1c1f : 98                       tya
1c20 : 49c3                     eor #$c3
1c22 : a8                       tay
1c23 : 28                       plp
1c24 : 8c3402                   sty abst+1
1c27 : 08                       php         ;flags after load/store sequence
1c28 : 49c3                     eor #$c3
1c2a : a8                       tay
1c2b : c082                     cpy #$82    ;test result
1c2d : d0fe                     bne *       ;trap
1c2f : 68                       pla         ;load status
                                eor_flag 0
1c30 : 4930            >            eor #(0|$30)
                        
1c32 : cd0602                   cmp fLDx+1  ;test flags
1c35 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1c37 : a900            >            lda #0
                       >
1c39 : 48              >            pha         ;use stack to load status
1c3a : 28              >            plp
                        
1c3b : a40c                     ldy zp1+2
1c3d : 08                       php         ;test stores do not alter flags
1c3e : 98                       tya
1c3f : 49c3                     eor #$c3
1c41 : a8                       tay
1c42 : 28                       plp
1c43 : 8c3502                   sty abst+2
1c46 : 08                       php         ;flags after load/store sequence
1c47 : 49c3                     eor #$c3
1c49 : a8                       tay
1c4a : c041                     cpy #$41    ;test result
1c4c : d0fe                     bne *       ;trap
1c4e : 68                       pla         ;load status
                                eor_flag 0
1c4f : 4930            >            eor #(0|$30)
                        
1c51 : cd0702                   cmp fLDx+2  ;test flags
1c54 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1c56 : a900            >            lda #0
                       >
1c58 : 48              >            pha         ;use stack to load status
1c59 : 28              >            plp
                        
1c5a : a40d                     ldy zp1+3
1c5c : 08                       php         ;test stores do not alter flags
1c5d : 98                       tya
1c5e : 49c3                     eor #$c3
1c60 : a8                       tay
1c61 : 28                       plp
1c62 : 8c3602                   sty abst+3
1c65 : 08                       php         ;flags after load/store sequence
1c66 : 49c3                     eor #$c3
1c68 : a8                       tay
1c69 : c000                     cpy #0      ;test result
1c6b : d0fe                     bne *       ;trap
1c6d : 68                       pla         ;load status
                                eor_flag 0
1c6e : 4930            >            eor #(0|$30)
                        
1c70 : cd0802                   cmp fLDx+3  ;test flags
1c73 : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
1c75 : a9ff            >            lda #$ff
                       >
1c77 : 48              >            pha         ;use stack to load status
1c78 : 28              >            plp
                        
1c79 : a40a                     ldy zp1
1c7b : 08                       php         ;test stores do not alter flags
1c7c : 98                       tya
1c7d : 49c3                     eor #$c3
1c7f : a8                       tay
1c80 : 28                       plp
1c81 : 8c3302                   sty abst
1c84 : 08                       php         ;flags after load/store sequence
1c85 : 49c3                     eor #$c3
1c87 : a8                       tay
1c88 : c0c3                     cpy #$c3    ;test result
1c8a : d0fe                     bne *       ;trap
1c8c : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1c8d : 497d            >            eor #(lo~fnz |$30)
                        
1c8f : cd0502                   cmp fLDx    ;test flags
1c92 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1c94 : a9ff            >            lda #$ff
                       >
1c96 : 48              >            pha         ;use stack to load status
1c97 : 28              >            plp
                        
1c98 : a40b                     ldy zp1+1
1c9a : 08                       php         ;test stores do not alter flags
1c9b : 98                       tya
1c9c : 49c3                     eor #$c3
1c9e : a8                       tay
1c9f : 28                       plp
1ca0 : 8c3402                   sty abst+1
1ca3 : 08                       php         ;flags after load/store sequence
1ca4 : 49c3                     eor #$c3
1ca6 : a8                       tay
1ca7 : c082                     cpy #$82   ;test result
1ca9 : d0fe                     bne *       ;trap
1cab : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1cac : 497d            >            eor #(lo~fnz |$30)
                        
1cae : cd0602                   cmp fLDx+1  ;test flags
1cb1 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1cb3 : a9ff            >            lda #$ff
                       >
1cb5 : 48              >            pha         ;use stack to load status
1cb6 : 28              >            plp
                        
1cb7 : a40c                     ldy zp1+2
1cb9 : 08                       php         ;test stores do not alter flags
1cba : 98                       tya
1cbb : 49c3                     eor #$c3
1cbd : a8                       tay
1cbe : 28                       plp
1cbf : 8c3502                   sty abst+2
1cc2 : 08                       php         ;flags after load/store sequence
1cc3 : 49c3                     eor #$c3
1cc5 : a8                       tay
1cc6 : c041                     cpy #$41    ;test result
1cc8 : d0fe                     bne *       ;trap
1cca : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1ccb : 497d            >            eor #(lo~fnz |$30)
                        
1ccd : cd0702                   cmp fLDx+2  ;test flags
1cd0 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1cd2 : a9ff            >            lda #$ff
                       >
1cd4 : 48              >            pha         ;use stack to load status
1cd5 : 28              >            plp
                        
1cd6 : a40d                     ldy zp1+3
1cd8 : 08                       php         ;test stores do not alter flags
1cd9 : 98                       tya
1cda : 49c3                     eor #$c3
1cdc : a8                       tay
1cdd : 28                       plp
1cde : 8c3602                   sty abst+3
1ce1 : 08                       php         ;flags after load/store sequence
1ce2 : 49c3                     eor #$c3
1ce4 : a8                       tay
1ce5 : c000                     cpy #0      ;test result
1ce7 : d0fe                     bne *       ;trap
1ce9 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1cea : 497d            >            eor #(lo~fnz |$30)
                        
1cec : cd0802                   cmp fLDx+3  ;test flags
1cef : d0fe                     bne *       ;trap
                        
                                set_stat 0
                       >            load_flag 0
1cf1 : a900            >            lda #0
                       >
1cf3 : 48              >            pha         ;use stack to load status
1cf4 : 28              >            plp
                        
1cf5 : ac0002                   ldy abs1
1cf8 : 08                       php         ;test stores do not alter flags
1cf9 : 98                       tya
1cfa : 49c3                     eor #$c3
1cfc : a8                       tay
1cfd : 28                       plp
1cfe : 840f                     sty zpt
1d00 : 08                       php         ;flags after load/store sequence
1d01 : 49c3                     eor #$c3
1d03 : a8                       tay
1d04 : c40a                     cpy zp1     ;test result
1d06 : d0fe                     bne *       ;trap
1d08 : 68                       pla         ;load status
                                eor_flag 0
1d09 : 4930            >            eor #(0|$30)
                        
1d0b : cd0502                   cmp fLDx    ;test flags
1d0e : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1d10 : a900            >            lda #0
                       >
1d12 : 48              >            pha         ;use stack to load status
1d13 : 28              >            plp
                        
1d14 : ac0102                   ldy abs1+1
1d17 : 08                       php         ;test stores do not alter flags
1d18 : 98                       tya
1d19 : 49c3                     eor #$c3
1d1b : a8                       tay
1d1c : 28                       plp
1d1d : 8410                     sty zpt+1
1d1f : 08                       php         ;flags after load/store sequence
1d20 : 49c3                     eor #$c3
1d22 : a8                       tay
1d23 : c40b                     cpy zp1+1   ;test result
1d25 : d0fe                     bne *       ;trap
1d27 : 68                       pla         ;load status
                                eor_flag 0
1d28 : 4930            >            eor #(0|$30)
                        
1d2a : cd0602                   cmp fLDx+1  ;test flags
1d2d : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1d2f : a900            >            lda #0
                       >
1d31 : 48              >            pha         ;use stack to load status
1d32 : 28              >            plp
                        
1d33 : ac0202                   ldy abs1+2
1d36 : 08                       php         ;test stores do not alter flags
1d37 : 98                       tya
1d38 : 49c3                     eor #$c3
1d3a : a8                       tay
1d3b : 28                       plp
1d3c : 8411                     sty zpt+2
1d3e : 08                       php         ;flags after load/store sequence
1d3f : 49c3                     eor #$c3
1d41 : a8                       tay
1d42 : c40c                     cpy zp1+2   ;test result
1d44 : d0fe                     bne *       ;trap
1d46 : 68                       pla         ;load status
                                eor_flag 0
1d47 : 4930            >            eor #(0|$30)
                        
1d49 : cd0702                   cmp fLDx+2  ;test flags
1d4c : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1d4e : a900            >            lda #0
                       >
1d50 : 48              >            pha         ;use stack to load status
1d51 : 28              >            plp
                        
1d52 : ac0302                   ldy abs1+3
1d55 : 08                       php         ;test stores do not alter flags
1d56 : 98                       tya
1d57 : 49c3                     eor #$c3
1d59 : a8                       tay
1d5a : 28                       plp
1d5b : 8412                     sty zpt+3
1d5d : 08                       php         ;flags after load/store sequence
1d5e : 49c3                     eor #$c3
1d60 : a8                       tay
1d61 : c40d                     cpy zp1+3   ;test result
1d63 : d0fe                     bne *       ;trap
1d65 : 68                       pla         ;load status
                                eor_flag 0
1d66 : 4930            >            eor #(0|$30)
                        
1d68 : cd0802                   cmp fLDx+3  ;test flags
1d6b : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
1d6d : a9ff            >            lda #$ff
                       >
1d6f : 48              >            pha         ;use stack to load status
1d70 : 28              >            plp
                        
1d71 : ac0002                   ldy abs1
1d74 : 08                       php         ;test stores do not alter flags
1d75 : 98                       tya
1d76 : 49c3                     eor #$c3
1d78 : a8                       tay
1d79 : 28                       plp
1d7a : 840f                     sty zpt
1d7c : 08                       php         ;flags after load/store sequence
1d7d : 49c3                     eor #$c3
1d7f : a8                       tay
1d80 : c50a                     cmp zp1     ;test result
1d82 : d0fe                     bne *       ;trap
1d84 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1d85 : 497d            >            eor #(lo~fnz |$30)
                        
1d87 : cd0502                   cmp fLDx    ;test flags
1d8a : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1d8c : a9ff            >            lda #$ff
                       >
1d8e : 48              >            pha         ;use stack to load status
1d8f : 28              >            plp
                        
1d90 : ac0102                   ldy abs1+1
1d93 : 08                       php         ;test stores do not alter flags
1d94 : 98                       tya
1d95 : 49c3                     eor #$c3
1d97 : a8                       tay
1d98 : 28                       plp
1d99 : 8410                     sty zpt+1
1d9b : 08                       php         ;flags after load/store sequence
1d9c : 49c3                     eor #$c3
1d9e : a8                       tay
1d9f : c50b                     cmp zp1+1   ;test result
1da1 : d0fe                     bne *       ;trap
1da3 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1da4 : 497d            >            eor #(lo~fnz |$30)
                        
1da6 : cd0602                   cmp fLDx+1  ;test flags
1da9 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1dab : a9ff            >            lda #$ff
                       >
1dad : 48              >            pha         ;use stack to load status
1dae : 28              >            plp
                        
1daf : ac0202                   ldy abs1+2
1db2 : 08                       php         ;test stores do not alter flags
1db3 : 98                       tya
1db4 : 49c3                     eor #$c3
1db6 : a8                       tay
1db7 : 28                       plp
1db8 : 8411                     sty zpt+2
1dba : 08                       php         ;flags after load/store sequence
1dbb : 49c3                     eor #$c3
1dbd : a8                       tay
1dbe : c50c                     cmp zp1+2   ;test result
1dc0 : d0fe                     bne *       ;trap
1dc2 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1dc3 : 497d            >            eor #(lo~fnz |$30)
                        
1dc5 : cd0702                   cmp fLDx+2  ;test flags
1dc8 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1dca : a9ff            >            lda #$ff
                       >
1dcc : 48              >            pha         ;use stack to load status
1dcd : 28              >            plp
                        
1dce : ac0302                   ldy abs1+3
1dd1 : 08                       php         ;test stores do not alter flags
1dd2 : 98                       tya
1dd3 : 49c3                     eor #$c3
1dd5 : a8                       tay
1dd6 : 28                       plp
1dd7 : 8412                     sty zpt+3
1dd9 : 08                       php         ;flags after load/store sequence
1dda : 49c3                     eor #$c3
1ddc : a8                       tay
1ddd : c50d                     cmp zp1+3   ;test result
1ddf : d0fe                     bne *       ;trap
1de1 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1de2 : 497d            >            eor #(lo~fnz |$30)
                        
1de4 : cd0802                   cmp fLDx+3  ;test flags
1de7 : d0fe                     bne *       ;trap
                        
                        
                                set_stat 0
                       >            load_flag 0
1de9 : a900            >            lda #0
                       >
1deb : 48              >            pha         ;use stack to load status
1dec : 28              >            plp
                        
1ded : a0c3                     ldy #$c3
1def : 08                       php
1df0 : cc0002                   cpy abs1    ;test result
1df3 : d0fe                     bne *       ;trap
1df5 : 68                       pla         ;load status
                                eor_flag 0    ;always on bits
1df6 : 4930            >            eor #(0    |$30)
                        
1df8 : cd0502                   cmp fLDx    ;test flags
1dfb : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1dfd : a900            >            lda #0
                       >
1dff : 48              >            pha         ;use stack to load status
1e00 : 28              >            plp
                        
1e01 : a082                     ldy #$82
1e03 : 08                       php
1e04 : cc0102                   cpy abs1+1  ;test result
1e07 : d0fe                     bne *       ;trap
1e09 : 68                       pla         ;load status
                                eor_flag 0
1e0a : 4930            >            eor #(0|$30)
                        
1e0c : cd0602                   cmp fLDx+1  ;test flags
1e0f : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1e11 : a900            >            lda #0
                       >
1e13 : 48              >            pha         ;use stack to load status
1e14 : 28              >            plp
                        
1e15 : a041                     ldy #$41
1e17 : 08                       php
1e18 : cc0202                   cpy abs1+2  ;test result
1e1b : d0fe                     bne *       ;trap
1e1d : 68                       pla         ;load status
                                eor_flag 0
1e1e : 4930            >            eor #(0|$30)
                        
1e20 : cd0702                   cmp fLDx+2  ;test flags
1e23 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1e25 : a900            >            lda #0
                       >
1e27 : 48              >            pha         ;use stack to load status
1e28 : 28              >            plp
                        
1e29 : a000                     ldy #0
1e2b : 08                       php
1e2c : cc0302                   cpy abs1+3  ;test result
1e2f : d0fe                     bne *       ;trap
1e31 : 68                       pla         ;load status
                                eor_flag 0
1e32 : 4930            >            eor #(0|$30)
                        
1e34 : cd0802                   cmp fLDx+3  ;test flags
1e37 : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
1e39 : a9ff            >            lda #$ff
                       >
1e3b : 48              >            pha         ;use stack to load status
1e3c : 28              >            plp
                        
1e3d : a0c3                     ldy #$c3
1e3f : 08                       php
1e40 : cc0002                   cpy abs1     ;test result
1e43 : d0fe                     bne *       ;trap
1e45 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1e46 : 497d            >            eor #(lo~fnz |$30)
                        
1e48 : cd0502                   cmp fLDx    ;test flags
1e4b : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1e4d : a9ff            >            lda #$ff
                       >
1e4f : 48              >            pha         ;use stack to load status
1e50 : 28              >            plp
                        
1e51 : a082                     ldy #$82
1e53 : 08                       php
1e54 : cc0102                   cpy abs1+1   ;test result
1e57 : d0fe                     bne *       ;trap
1e59 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1e5a : 497d            >            eor #(lo~fnz |$30)
                        
1e5c : cd0602                   cmp fLDx+1  ;test flags
1e5f : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1e61 : a9ff            >            lda #$ff
                       >
1e63 : 48              >            pha         ;use stack to load status
1e64 : 28              >            plp
                        
1e65 : a041                     ldy #$41
1e67 : 08                       php
1e68 : cc0202                   cpy abs1+2   ;test result
1e6b : d0fe                     bne *       ;trap
1e6d : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1e6e : 497d            >            eor #(lo~fnz |$30)
                        
1e70 : cd0702                   cmp fLDx+2  ;test flags
1e73 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1e75 : a9ff            >            lda #$ff
                       >
1e77 : 48              >            pha         ;use stack to load status
1e78 : 28              >            plp
                        
1e79 : a000                     ldy #0
1e7b : 08                       php
1e7c : cc0302                   cpy abs1+3   ;test result
1e7f : d0fe                     bne *       ;trap
1e81 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1e82 : 497d            >            eor #(lo~fnz |$30)
                        
1e84 : cd0802                   cmp fLDx+3  ;test flags
1e87 : d0fe                     bne *       ;trap
                        
1e89 : a000                     ldy #0
1e8b : a50f                     lda zpt
1e8d : 49c3                     eor #$c3
1e8f : c50a                     cmp zp1
1e91 : d0fe                     bne *       ;trap: store to zp   data
1e93 : 840f                     sty zpt     ;clear
1e95 : ad3302                   lda abst
1e98 : 49c3                     eor #$c3
1e9a : cd0002                   cmp abs1
1e9d : d0fe                     bne *       ;trap: store to abs   data
1e9f : 8c3302                   sty abst    ;clear
1ea2 : a510                     lda zpt+1
1ea4 : 49c3                     eor #$c3
1ea6 : c50b                     cmp zp1+1
1ea8 : d0fe                     bne *       ;trap: store to zp+1 data
1eaa : 8410                     sty zpt+1   ;clear
1eac : ad3402                   lda abst+1
1eaf : 49c3                     eor #$c3
1eb1 : cd0102                   cmp abs1+1
1eb4 : d0fe                     bne *       ;trap: store to abs+1 data
1eb6 : 8c3402                   sty abst+1  ;clear
1eb9 : a511                     lda zpt+2
1ebb : 49c3                     eor #$c3
1ebd : c50c                     cmp zp1+2
1ebf : d0fe                     bne *       ;trap: store to zp+2 data
1ec1 : 8411                     sty zpt+2   ;clear
1ec3 : ad3502                   lda abst+2
1ec6 : 49c3                     eor #$c3
1ec8 : cd0202                   cmp abs1+2
1ecb : d0fe                     bne *       ;trap: store to abs+2 data
1ecd : 8c3502                   sty abst+2  ;clear
1ed0 : a512                     lda zpt+3
1ed2 : 49c3                     eor #$c3
1ed4 : c50d                     cmp zp1+3
1ed6 : d0fe                     bne *       ;trap: store to zp+3 data
1ed8 : 8412                     sty zpt+3   ;clear
1eda : ad3602                   lda abst+3
1edd : 49c3                     eor #$c3
1edf : cd0302                   cmp abs1+3
1ee2 : d0fe                     bne *       ;trap: store to abs+3 data
1ee4 : 8c3602                   sty abst+3  ;clear
                        
                        ; testing load / store accumulator LDA / STA all addressing modes
                        ; LDA / STA - zp,x / abs,x
1ee7 : a203                     ldx #3
1ee9 :                  tldax
                                set_stat 0
                       >            load_flag 0
1ee9 : a900            >            lda #0
                       >
1eeb : 48              >            pha         ;use stack to load status
1eec : 28              >            plp
                        
1eed : b50a                     lda zp1,x
1eef : 08                       php         ;test stores do not alter flags
1ef0 : 49c3                     eor #$c3
1ef2 : 28                       plp
1ef3 : 9d3302                   sta abst,x
1ef6 : 08                       php         ;flags after load/store sequence
1ef7 : 49c3                     eor #$c3
1ef9 : dd0002                   cmp abs1,x  ;test result
1efc : d0fe                     bne *       ;trap
1efe : 68                       pla         ;load status
                                eor_flag 0
1eff : 4930            >            eor #(0|$30)
                        
1f01 : dd0502                   cmp fLDx,x  ;test flags
1f04 : d0fe                     bne *       ;trap
1f06 : ca                       dex
1f07 : 10e0                     bpl tldax
                        
1f09 : a203                     ldx #3
1f0b :                  tldax1
                                set_stat $ff
                       >            load_flag $ff
1f0b : a9ff            >            lda #$ff
                       >
1f0d : 48              >            pha         ;use stack to load status
1f0e : 28              >            plp
                        
1f0f : b50a                     lda zp1,x
1f11 : 08                       php         ;test stores do not alter flags
1f12 : 49c3                     eor #$c3
1f14 : 28                       plp
1f15 : 9d3302                   sta abst,x
1f18 : 08                       php         ;flags after load/store sequence
1f19 : 49c3                     eor #$c3
1f1b : dd0002                   cmp abs1,x   ;test result
1f1e : d0fe                     bne *       ;trap
1f20 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1f21 : 497d            >            eor #(lo~fnz |$30)
                        
1f23 : dd0502                   cmp fLDx,x  ;test flags
1f26 : d0fe                     bne *       ;trap
1f28 : ca                       dex
1f29 : 10e0                     bpl tldax1
                        
1f2b : a203                     ldx #3
1f2d :                  tldax2
                                set_stat 0
                       >            load_flag 0
1f2d : a900            >            lda #0
                       >
1f2f : 48              >            pha         ;use stack to load status
1f30 : 28              >            plp
                        
1f31 : bd0002                   lda abs1,x
1f34 : 08                       php         ;test stores do not alter flags
1f35 : 49c3                     eor #$c3
1f37 : 28                       plp
1f38 : 950f                     sta zpt,x
1f3a : 08                       php         ;flags after load/store sequence
1f3b : 49c3                     eor #$c3
1f3d : d50a                     cmp zp1,x   ;test result
1f3f : d0fe                     bne *       ;trap
1f41 : 68                       pla         ;load status
                                eor_flag 0
1f42 : 4930            >            eor #(0|$30)
                        
1f44 : dd0502                   cmp fLDx,x  ;test flags
1f47 : d0fe                     bne *       ;trap
1f49 : ca                       dex
1f4a : 10e1                     bpl tldax2
                        
1f4c : a203                     ldx #3
1f4e :                  tldax3
                                set_stat $ff
                       >            load_flag $ff
1f4e : a9ff            >            lda #$ff
                       >
1f50 : 48              >            pha         ;use stack to load status
1f51 : 28              >            plp
                        
1f52 : bd0002                   lda abs1,x
1f55 : 08                       php         ;test stores do not alter flags
1f56 : 49c3                     eor #$c3
1f58 : 28                       plp
1f59 : 950f                     sta zpt,x
1f5b : 08                       php         ;flags after load/store sequence
1f5c : 49c3                     eor #$c3
1f5e : d50a                     cmp zp1,x   ;test result
1f60 : d0fe                     bne *       ;trap
1f62 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1f63 : 497d            >            eor #(lo~fnz |$30)
                        
1f65 : dd0502                   cmp fLDx,x  ;test flags
1f68 : d0fe                     bne *       ;trap
1f6a : ca                       dex
1f6b : 10e1                     bpl tldax3
                        
1f6d : a203                     ldx #3      ;testing store result
1f6f : a000                     ldy #0
1f71 : b50f             tstax   lda zpt,x
1f73 : 49c3                     eor #$c3
1f75 : d50a                     cmp zp1,x
1f77 : d0fe                     bne *       ;trap: store to zp,x data
1f79 : 940f                     sty zpt,x   ;clear
1f7b : bd3302                   lda abst,x
1f7e : 49c3                     eor #$c3
1f80 : dd0002                   cmp abs1,x
1f83 : d0fe                     bne *       ;trap: store to abs,x data
1f85 : 8a                       txa
1f86 : 9d3302                   sta abst,x  ;clear
1f89 : ca                       dex
1f8a : 10e5                     bpl tstax
                        
                        ; LDA / STA - (zp),y / abs,y / (zp,x)
1f8c : a003                     ldy #3
1f8e :                  tlday
                                set_stat 0
                       >            load_flag 0
1f8e : a900            >            lda #0
                       >
1f90 : 48              >            pha         ;use stack to load status
1f91 : 28              >            plp
                        
1f92 : b120                     lda (ind1),y
1f94 : 08                       php         ;test stores do not alter flags
1f95 : 49c3                     eor #$c3
1f97 : 28                       plp
1f98 : 993302                   sta abst,y
1f9b : 08                       php         ;flags after load/store sequence
1f9c : 49c3                     eor #$c3
1f9e : d90002                   cmp abs1,y  ;test result
1fa1 : d0fe                     bne *       ;trap
1fa3 : 68                       pla         ;load status
                                eor_flag 0
1fa4 : 4930            >            eor #(0|$30)
                        
1fa6 : d90502                   cmp fLDx,y  ;test flags
1fa9 : d0fe                     bne *       ;trap
1fab : 88                       dey
1fac : 10e0                     bpl tlday
                        
1fae : a003                     ldy #3
1fb0 :                  tlday1
                                set_stat $ff
                       >            load_flag $ff
1fb0 : a9ff            >            lda #$ff
                       >
1fb2 : 48              >            pha         ;use stack to load status
1fb3 : 28              >            plp
                        
1fb4 : b120                     lda (ind1),y
1fb6 : 08                       php         ;test stores do not alter flags
1fb7 : 49c3                     eor #$c3
1fb9 : 28                       plp
1fba : 993302                   sta abst,y
1fbd : 08                       php         ;flags after load/store sequence
1fbe : 49c3                     eor #$c3
1fc0 : d90002                   cmp abs1,y  ;test result
1fc3 : d0fe                     bne *       ;trap
1fc5 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1fc6 : 497d            >            eor #(lo~fnz |$30)
                        
1fc8 : d90502                   cmp fLDx,y  ;test flags
1fcb : d0fe                     bne *       ;trap
1fcd : 88                       dey
1fce : 10e0                     bpl tlday1
                        
1fd0 : a003                     ldy #3      ;testing store result
1fd2 : a200                     ldx #0
1fd4 : b93302           tstay   lda abst,y
1fd7 : 49c3                     eor #$c3
1fd9 : d90002                   cmp abs1,y
1fdc : d0fe                     bne *       ;trap: store to abs data
1fde : 8a                       txa
1fdf : 993302                   sta abst,y  ;clear
1fe2 : 88                       dey
1fe3 : 10ef                     bpl tstay
                        
1fe5 : a003                     ldy #3
1fe7 :                  tlday2
                                set_stat 0
                       >            load_flag 0
1fe7 : a900            >            lda #0
                       >
1fe9 : 48              >            pha         ;use stack to load status
1fea : 28              >            plp
                        
1feb : b90002                   lda abs1,y
1fee : 08                       php         ;test stores do not alter flags
1fef : 49c3                     eor #$c3
1ff1 : 28                       plp
1ff2 : 912c                     sta (indt),y
1ff4 : 08                       php         ;flags after load/store sequence
1ff5 : 49c3                     eor #$c3
1ff7 : d120                     cmp (ind1),y   ;test result
1ff9 : d0fe                     bne *       ;trap
1ffb : 68                       pla         ;load status
                                eor_flag $30    ;always on bits
1ffc : 4930            >            eor #($30    |$30)
                        
1ffe : d90502                   cmp fLDx,y  ;test flags
2001 : d0fe                     bne *       ;trap
2003 : 88                       dey
2004 : 10e1                     bpl tlday2
                        
2006 : a003                     ldy #3
2008 :                  tlday3
                                set_stat $ff
                       >            load_flag $ff
2008 : a9ff            >            lda #$ff
                       >
200a : 48              >            pha         ;use stack to load status
200b : 28              >            plp
                        
200c : b90002                   lda abs1,y
200f : 08                       php         ;test stores do not alter flags
2010 : 49c3                     eor #$c3
2012 : 28                       plp
2013 : 912c                     sta (indt),y
2015 : 08                       php         ;flags after load/store sequence
2016 : 49c3                     eor #$c3
2018 : d120                     cmp (ind1),y   ;test result
201a : d0fe                     bne *       ;trap
201c : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
201d : 497d            >            eor #(lo~fnz |$30)
                        
201f : d90502                   cmp fLDx,y  ;test flags
2022 : d0fe                     bne *       ;trap
2024 : 88                       dey
2025 : 10e1                     bpl tlday3
                        
2027 : a003                     ldy #3      ;testing store result
2029 : a200                     ldx #0
202b : b93302           tstay1  lda abst,y
202e : 49c3                     eor #$c3
2030 : d90002                   cmp abs1,y
2033 : d0fe                     bne *       ;trap: store to abs data
2035 : 8a                       txa
2036 : 993302                   sta abst,y  ;clear
2039 : 88                       dey
203a : 10ef                     bpl tstay1
                        
203c : a206                     ldx #6
203e : a003                     ldy #3
2040 :                  tldax4
                                set_stat 0
                       >            load_flag 0
2040 : a900            >            lda #0
                       >
2042 : 48              >            pha         ;use stack to load status
2043 : 28              >            plp
                        
2044 : a120                     lda (ind1,x)
2046 : 08                       php         ;test stores do not alter flags
2047 : 49c3                     eor #$c3
2049 : 28                       plp
204a : 812c                     sta (indt,x)
204c : 08                       php         ;flags after load/store sequence
204d : 49c3                     eor #$c3
204f : d90002                   cmp abs1,y  ;test result
2052 : d0fe                     bne *       ;trap
2054 : 68                       pla         ;load status
                                eor_flag 0    ;always on bits
2055 : 4930            >            eor #(0    |$30)
                        
2057 : d90502                   cmp fLDx,y  ;test flags
205a : d0fe                     bne *       ;trap
205c : ca                       dex
205d : ca                       dex
205e : 88                       dey
205f : 10df                     bpl tldax4
                        
2061 : a206                     ldx #6
2063 : a003                     ldy #3
2065 :                  tldax5
                                set_stat $ff
                       >            load_flag $ff
2065 : a9ff            >            lda #$ff
                       >
2067 : 48              >            pha         ;use stack to load status
2068 : 28              >            plp
                        
2069 : a120                     lda (ind1,x)
206b : 08                       php         ;test stores do not alter flags
206c : 49c3                     eor #$c3
206e : 28                       plp
206f : 812c                     sta (indt,x)
2071 : 08                       php         ;flags after load/store sequence
2072 : 49c3                     eor #$c3
2074 : d90002                   cmp abs1,y  ;test result
2077 : d0fe                     bne *       ;trap
2079 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
207a : 497d            >            eor #(lo~fnz |$30)
                        
207c : d90502                   cmp fLDx,y  ;test flags
207f : d0fe                     bne *       ;trap
2081 : ca                       dex
2082 : ca                       dex
2083 : 88                       dey
2084 : 10df                     bpl tldax5
                        
2086 : a003                     ldy #3      ;testing store result
2088 : a200                     ldx #0
208a : b93302           tstay2  lda abst,y
208d : 49c3                     eor #$c3
208f : d90002                   cmp abs1,y
2092 : d0fe                     bne *       ;trap: store to abs data
2094 : 8a                       txa
2095 : 993302                   sta abst,y  ;clear
2098 : 88                       dey
2099 : 10ef                     bpl tstay2
                        
                        ; indexed wraparound test (only zp should wrap)
209b : a2fd                     ldx #3+$fa
209d : b510             tldax6  lda zp1-$fa&$ff,x   ;wrap on indexed zp
209f : 9d3901                   sta abst-$fa,x      ;no STX abs,x!
20a2 : ca                       dex
20a3 : e0fa                     cpx #$fa
20a5 : b0f6                     bcs tldax6
20a7 : a2fd                     ldx #3+$fa
20a9 : bd0601           tldax7  lda abs1-$fa,x      ;no wrap on indexed abs
20ac : 9515                     sta zpt-$fa&$ff,x
20ae : ca                       dex
20af : e0fa                     cpx #$fa
20b1 : b0f6                     bcs tldax7
                        
20b3 : a203                     ldx #3      ;testing wraparound result
20b5 : a000                     ldy #0
20b7 : b50f             tstax1  lda zpt,x
20b9 : d50a                     cmp zp1,x
20bb : d0fe                     bne *       ;trap: store to zp,x data
20bd : 940f                     sty zpt,x   ;clear
20bf : bd3302                   lda abst,x
20c2 : dd0002                   cmp abs1,x
20c5 : d0fe                     bne *       ;trap: store to abs,x data
20c7 : 8a                       txa
20c8 : 9d3302                   sta abst,x  ;clear
20cb : ca                       dex
20cc : 10e9                     bpl tstax1
                        
20ce : a0fb                     ldy #3+$f8
20d0 : a2fe                     ldx #6+$f8
20d2 : a128             tlday4  lda (ind1-$f8&$ff,x) ;wrap on indexed zp indirect
20d4 : 993b01                   sta abst-$f8,y
20d7 : ca                       dex
20d8 : ca                       dex
20d9 : 88                       dey
20da : c0f8                     cpy #$f8
20dc : b0f4                     bcs tlday4
20de : a003                     ldy #3      ;testing wraparound result
20e0 : a200                     ldx #0
20e2 : b93302           tstay4  lda abst,y
20e5 : d90002                   cmp abs1,y
20e8 : d0fe                     bne *       ;trap: store to abs data
20ea : 8a                       txa
20eb : 993302                   sta abst,y  ;clear
20ee : 88                       dey
20ef : 10f1                     bpl tstay4
                        
20f1 : a0fb                     ldy #3+$f8
20f3 : b90801           tlday5  lda abs1-$f8,y  ;no wrap on indexed abs
20f6 : 9134                     sta (inwt),y
20f8 : 88                       dey
20f9 : c0f8                     cpy #$f8
20fb : b0f6                     bcs tlday5
20fd : a003                     ldy #3      ;testing wraparound result
20ff : a200                     ldx #0
2101 : b93302           tstay5  lda abst,y
2104 : d90002                   cmp abs1,y
2107 : d0fe                     bne *       ;trap: store to abs data
2109 : 8a                       txa
210a : 993302                   sta abst,y  ;clear
210d : 88                       dey
210e : 10f1                     bpl tstay5
                        
2110 : a0fb                     ldy #3+$f8
2112 : a2fe                     ldx #6+$f8
2114 : b12a             tlday6  lda (inw1),y    ;no wrap on zp indirect indexed
2116 : 8134                     sta (indt-$f8&$ff,x)
2118 : ca                       dex
2119 : ca                       dex
211a : 88                       dey
211b : c0f8                     cpy #$f8
211d : b0f5                     bcs tlday6
211f : a003                     ldy #3      ;testing wraparound result
2121 : a200                     ldx #0
2123 : b93302           tstay6  lda abst,y
2126 : d90002                   cmp abs1,y
2129 : d0fe                     bne *       ;trap: store to abs data
212b : 8a                       txa
212c : 993302                   sta abst,y  ;clear
212f : 88                       dey
2130 : 10f1                     bpl tstay6
                        
                        ; LDA / STA - zp / abs / #
                                set_stat 0
                       >            load_flag 0
2132 : a900            >            lda #0
                       >
2134 : 48              >            pha         ;use stack to load status
2135 : 28              >            plp
                        
2136 : a50a                     lda zp1
2138 : 08                       php         ;test stores do not alter flags
2139 : 49c3                     eor #$c3
213b : 28                       plp
213c : 8d3302                   sta abst
213f : 08                       php         ;flags after load/store sequence
2140 : 49c3                     eor #$c3
2142 : c9c3                     cmp #$c3    ;test result
2144 : d0fe                     bne *       ;trap
2146 : 68                       pla         ;load status
                                eor_flag 0
2147 : 4930            >            eor #(0|$30)
                        
2149 : cd0502                   cmp fLDx    ;test flags
214c : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
214e : a900            >            lda #0
                       >
2150 : 48              >            pha         ;use stack to load status
2151 : 28              >            plp
                        
2152 : a50b                     lda zp1+1
2154 : 08                       php         ;test stores do not alter flags
2155 : 49c3                     eor #$c3
2157 : 28                       plp
2158 : 8d3402                   sta abst+1
215b : 08                       php         ;flags after load/store sequence
215c : 49c3                     eor #$c3
215e : c982                     cmp #$82    ;test result
2160 : d0fe                     bne *       ;trap
2162 : 68                       pla         ;load status
                                eor_flag 0
2163 : 4930            >            eor #(0|$30)
                        
2165 : cd0602                   cmp fLDx+1  ;test flags
2168 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
216a : a900            >            lda #0
                       >
216c : 48              >            pha         ;use stack to load status
216d : 28              >            plp
                        
216e : a50c                     lda zp1+2
2170 : 08                       php         ;test stores do not alter flags
2171 : 49c3                     eor #$c3
2173 : 28                       plp
2174 : 8d3502                   sta abst+2
2177 : 08                       php         ;flags after load/store sequence
2178 : 49c3                     eor #$c3
217a : c941                     cmp #$41    ;test result
217c : d0fe                     bne *       ;trap
217e : 68                       pla         ;load status
                                eor_flag 0
217f : 4930            >            eor #(0|$30)
                        
2181 : cd0702                   cmp fLDx+2  ;test flags
2184 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
2186 : a900            >            lda #0
                       >
2188 : 48              >            pha         ;use stack to load status
2189 : 28              >            plp
                        
218a : a50d                     lda zp1+3
218c : 08                       php         ;test stores do not alter flags
218d : 49c3                     eor #$c3
218f : 28                       plp
2190 : 8d3602                   sta abst+3
2193 : 08                       php         ;flags after load/store sequence
2194 : 49c3                     eor #$c3
2196 : c900                     cmp #0      ;test result
2198 : d0fe                     bne *       ;trap
219a : 68                       pla         ;load status
                                eor_flag 0
219b : 4930            >            eor #(0|$30)
                        
219d : cd0802                   cmp fLDx+3  ;test flags
21a0 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
21a2 : a9ff            >            lda #$ff
                       >
21a4 : 48              >            pha         ;use stack to load status
21a5 : 28              >            plp
                        
21a6 : a50a                     lda zp1
21a8 : 08                       php         ;test stores do not alter flags
21a9 : 49c3                     eor #$c3
21ab : 28                       plp
21ac : 8d3302                   sta abst
21af : 08                       php         ;flags after load/store sequence
21b0 : 49c3                     eor #$c3
21b2 : c9c3                     cmp #$c3    ;test result
21b4 : d0fe                     bne *       ;trap
21b6 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
21b7 : 497d            >            eor #(lo~fnz |$30)
                        
21b9 : cd0502                   cmp fLDx    ;test flags
21bc : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
21be : a9ff            >            lda #$ff
                       >
21c0 : 48              >            pha         ;use stack to load status
21c1 : 28              >            plp
                        
21c2 : a50b                     lda zp1+1
21c4 : 08                       php         ;test stores do not alter flags
21c5 : 49c3                     eor #$c3
21c7 : 28                       plp
21c8 : 8d3402                   sta abst+1
21cb : 08                       php         ;flags after load/store sequence
21cc : 49c3                     eor #$c3
21ce : c982                     cmp #$82    ;test result
21d0 : d0fe                     bne *       ;trap
21d2 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
21d3 : 497d            >            eor #(lo~fnz |$30)
                        
21d5 : cd0602                   cmp fLDx+1  ;test flags
21d8 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
21da : a9ff            >            lda #$ff
                       >
21dc : 48              >            pha         ;use stack to load status
21dd : 28              >            plp
                        
21de : a50c                     lda zp1+2
21e0 : 08                       php         ;test stores do not alter flags
21e1 : 49c3                     eor #$c3
21e3 : 28                       plp
21e4 : 8d3502                   sta abst+2
21e7 : 08                       php         ;flags after load/store sequence
21e8 : 49c3                     eor #$c3
21ea : c941                     cmp #$41    ;test result
21ec : d0fe                     bne *       ;trap
21ee : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
21ef : 497d            >            eor #(lo~fnz |$30)
                        
21f1 : cd0702                   cmp fLDx+2  ;test flags
21f4 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
21f6 : a9ff            >            lda #$ff
                       >
21f8 : 48              >            pha         ;use stack to load status
21f9 : 28              >            plp
                        
21fa : a50d                     lda zp1+3
21fc : 08                       php         ;test stores do not alter flags
21fd : 49c3                     eor #$c3
21ff : 28                       plp
2200 : 8d3602                   sta abst+3
2203 : 08                       php         ;flags after load/store sequence
2204 : 49c3                     eor #$c3
2206 : c900                     cmp #0      ;test result
2208 : d0fe                     bne *       ;trap
220a : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
220b : 497d            >            eor #(lo~fnz |$30)
                        
220d : cd0802                   cmp fLDx+3  ;test flags
2210 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
2212 : a900            >            lda #0
                       >
2214 : 48              >            pha         ;use stack to load status
2215 : 28              >            plp
                        
2216 : ad0002                   lda abs1
2219 : 08                       php         ;test stores do not alter flags
221a : 49c3                     eor #$c3
221c : 28                       plp
221d : 850f                     sta zpt
221f : 08                       php         ;flags after load/store sequence
2220 : 49c3                     eor #$c3
2222 : c50a                     cmp zp1     ;test result
2224 : d0fe                     bne *       ;trap
2226 : 68                       pla         ;load status
                                eor_flag 0
2227 : 4930            >            eor #(0|$30)
                        
2229 : cd0502                   cmp fLDx    ;test flags
222c : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
222e : a900            >            lda #0
                       >
2230 : 48              >            pha         ;use stack to load status
2231 : 28              >            plp
                        
2232 : ad0102                   lda abs1+1
2235 : 08                       php         ;test stores do not alter flags
2236 : 49c3                     eor #$c3
2238 : 28                       plp
2239 : 8510                     sta zpt+1
223b : 08                       php         ;flags after load/store sequence
223c : 49c3                     eor #$c3
223e : c50b                     cmp zp1+1   ;test result
2240 : d0fe                     bne *       ;trap
2242 : 68                       pla         ;load status
                                eor_flag 0
2243 : 4930            >            eor #(0|$30)
                        
2245 : cd0602                   cmp fLDx+1  ;test flags
2248 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
224a : a900            >            lda #0
                       >
224c : 48              >            pha         ;use stack to load status
224d : 28              >            plp
                        
224e : ad0202                   lda abs1+2
2251 : 08                       php         ;test stores do not alter flags
2252 : 49c3                     eor #$c3
2254 : 28                       plp
2255 : 8511                     sta zpt+2
2257 : 08                       php         ;flags after load/store sequence
2258 : 49c3                     eor #$c3
225a : c50c                     cmp zp1+2   ;test result
225c : d0fe                     bne *       ;trap
225e : 68                       pla         ;load status
                                eor_flag 0
225f : 4930            >            eor #(0|$30)
                        
2261 : cd0702                   cmp fLDx+2  ;test flags
2264 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
2266 : a900            >            lda #0
                       >
2268 : 48              >            pha         ;use stack to load status
2269 : 28              >            plp
                        
226a : ad0302                   lda abs1+3
226d : 08                       php         ;test stores do not alter flags
226e : 49c3                     eor #$c3
2270 : 28                       plp
2271 : 8512                     sta zpt+3
2273 : 08                       php         ;flags after load/store sequence
2274 : 49c3                     eor #$c3
2276 : c50d                     cmp zp1+3   ;test result
2278 : d0fe                     bne *       ;trap
227a : 68                       pla         ;load status
                                eor_flag 0
227b : 4930            >            eor #(0|$30)
                        
227d : cd0802                   cmp fLDx+3  ;test flags
2280 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
2282 : a9ff            >            lda #$ff
                       >
2284 : 48              >            pha         ;use stack to load status
2285 : 28              >            plp
                        
2286 : ad0002                   lda abs1
2289 : 08                       php         ;test stores do not alter flags
228a : 49c3                     eor #$c3
228c : 28                       plp
228d : 850f                     sta zpt
228f : 08                       php         ;flags after load/store sequence
2290 : 49c3                     eor #$c3
2292 : c50a                     cmp zp1     ;test result
2294 : d0fe                     bne *       ;trap
2296 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2297 : 497d            >            eor #(lo~fnz |$30)
                        
2299 : cd0502                   cmp fLDx    ;test flags
229c : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
229e : a9ff            >            lda #$ff
                       >
22a0 : 48              >            pha         ;use stack to load status
22a1 : 28              >            plp
                        
22a2 : ad0102                   lda abs1+1
22a5 : 08                       php         ;test stores do not alter flags
22a6 : 49c3                     eor #$c3
22a8 : 28                       plp
22a9 : 8510                     sta zpt+1
22ab : 08                       php         ;flags after load/store sequence
22ac : 49c3                     eor #$c3
22ae : c50b                     cmp zp1+1   ;test result
22b0 : d0fe                     bne *       ;trap
22b2 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
22b3 : 497d            >            eor #(lo~fnz |$30)
                        
22b5 : cd0602                   cmp fLDx+1  ;test flags
22b8 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
22ba : a9ff            >            lda #$ff
                       >
22bc : 48              >            pha         ;use stack to load status
22bd : 28              >            plp
                        
22be : ad0202                   lda abs1+2
22c1 : 08                       php         ;test stores do not alter flags
22c2 : 49c3                     eor #$c3
22c4 : 28                       plp
22c5 : 8511                     sta zpt+2
22c7 : 08                       php         ;flags after load/store sequence
22c8 : 49c3                     eor #$c3
22ca : c50c                     cmp zp1+2   ;test result
22cc : d0fe                     bne *       ;trap
22ce : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
22cf : 497d            >            eor #(lo~fnz |$30)
                        
22d1 : cd0702                   cmp fLDx+2  ;test flags
22d4 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
22d6 : a9ff            >            lda #$ff
                       >
22d8 : 48              >            pha         ;use stack to load status
22d9 : 28              >            plp
                        
22da : ad0302                   lda abs1+3
22dd : 08                       php         ;test stores do not alter flags
22de : 49c3                     eor #$c3
22e0 : 28                       plp
22e1 : 8512                     sta zpt+3
22e3 : 08                       php         ;flags after load/store sequence
22e4 : 49c3                     eor #$c3
22e6 : c50d                     cmp zp1+3   ;test result
22e8 : d0fe                     bne *       ;trap
22ea : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
22eb : 497d            >            eor #(lo~fnz |$30)
                        
22ed : cd0802                   cmp fLDx+3  ;test flags
22f0 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
22f2 : a900            >            lda #0
                       >
22f4 : 48              >            pha         ;use stack to load status
22f5 : 28              >            plp
                        
22f6 : a9c3                     lda #$c3
22f8 : 08                       php
22f9 : cd0002                   cmp abs1    ;test result
22fc : d0fe                     bne *       ;trap
22fe : 68                       pla         ;load status
                                eor_flag 0
22ff : 4930            >            eor #(0|$30)
                        
2301 : cd0502                   cmp fLDx    ;test flags
2304 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
2306 : a900            >            lda #0
                       >
2308 : 48              >            pha         ;use stack to load status
2309 : 28              >            plp
                        
230a : a982                     lda #$82
230c : 08                       php
230d : cd0102                   cmp abs1+1  ;test result
2310 : d0fe                     bne *       ;trap
2312 : 68                       pla         ;load status
                                eor_flag 0
2313 : 4930            >            eor #(0|$30)
                        
2315 : cd0602                   cmp fLDx+1  ;test flags
2318 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
231a : a900            >            lda #0
                       >
231c : 48              >            pha         ;use stack to load status
231d : 28              >            plp
                        
231e : a941                     lda #$41
2320 : 08                       php
2321 : cd0202                   cmp abs1+2  ;test result
2324 : d0fe                     bne *       ;trap
2326 : 68                       pla         ;load status
                                eor_flag 0
2327 : 4930            >            eor #(0|$30)
                        
2329 : cd0702                   cmp fLDx+2  ;test flags
232c : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
232e : a900            >            lda #0
                       >
2330 : 48              >            pha         ;use stack to load status
2331 : 28              >            plp
                        
2332 : a900                     lda #0
2334 : 08                       php
2335 : cd0302                   cmp abs1+3  ;test result
2338 : d0fe                     bne *       ;trap
233a : 68                       pla         ;load status
                                eor_flag 0
233b : 4930            >            eor #(0|$30)
                        
233d : cd0802                   cmp fLDx+3  ;test flags
2340 : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
2342 : a9ff            >            lda #$ff
                       >
2344 : 48              >            pha         ;use stack to load status
2345 : 28              >            plp
                        
2346 : a9c3                     lda #$c3
2348 : 08                       php
2349 : cd0002                   cmp abs1    ;test result
234c : d0fe                     bne *       ;trap
234e : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
234f : 497d            >            eor #(lo~fnz |$30)
                        
2351 : cd0502                   cmp fLDx    ;test flags
2354 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
2356 : a9ff            >            lda #$ff
                       >
2358 : 48              >            pha         ;use stack to load status
2359 : 28              >            plp
                        
235a : a982                     lda #$82
235c : 08                       php
235d : cd0102                   cmp abs1+1  ;test result
2360 : d0fe                     bne *       ;trap
2362 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2363 : 497d            >            eor #(lo~fnz |$30)
                        
2365 : cd0602                   cmp fLDx+1  ;test flags
2368 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
236a : a9ff            >            lda #$ff
                       >
236c : 48              >            pha         ;use stack to load status
236d : 28              >            plp
                        
236e : a941                     lda #$41
2370 : 08                       php
2371 : cd0202                   cmp abs1+2  ;test result
2374 : d0fe                     bne *       ;trap
2376 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2377 : 497d            >            eor #(lo~fnz |$30)
                        
2379 : cd0702                   cmp fLDx+2  ;test flags
237c : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
237e : a9ff            >            lda #$ff
                       >
2380 : 48              >            pha         ;use stack to load status
2381 : 28              >            plp
                        
2382 : a900                     lda #0
2384 : 08                       php
2385 : cd0302                   cmp abs1+3  ;test result
2388 : d0fe                     bne *       ;trap
238a : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
238b : 497d            >            eor #(lo~fnz |$30)
                        
238d : cd0802                   cmp fLDx+3  ;test flags
2390 : d0fe                     bne *       ;trap
                        
2392 : a200                     ldx #0
2394 : a50f                     lda zpt
2396 : 49c3                     eor #$c3
2398 : c50a                     cmp zp1
239a : d0fe                     bne *       ;trap: store to zp data
239c : 860f                     stx zpt     ;clear
239e : ad3302                   lda abst
23a1 : 49c3                     eor #$c3
23a3 : cd0002                   cmp abs1
23a6 : d0fe                     bne *       ;trap: store to abs data
23a8 : 8e3302                   stx abst    ;clear
23ab : a510                     lda zpt+1
23ad : 49c3                     eor #$c3
23af : c50b                     cmp zp1+1
23b1 : d0fe                     bne *       ;trap: store to zp data
23b3 : 8610                     stx zpt+1   ;clear
23b5 : ad3402                   lda abst+1
23b8 : 49c3                     eor #$c3
23ba : cd0102                   cmp abs1+1
23bd : d0fe                     bne *       ;trap: store to abs data
23bf : 8e3402                   stx abst+1  ;clear
23c2 : a511                     lda zpt+2
23c4 : 49c3                     eor #$c3
23c6 : c50c                     cmp zp1+2
23c8 : d0fe                     bne *       ;trap: store to zp data
23ca : 8611                     stx zpt+2   ;clear
23cc : ad3502                   lda abst+2
23cf : 49c3                     eor #$c3
23d1 : cd0202                   cmp abs1+2
23d4 : d0fe                     bne *       ;trap: store to abs data
23d6 : 8e3502                   stx abst+2  ;clear
23d9 : a512                     lda zpt+3
23db : 49c3                     eor #$c3
23dd : c50d                     cmp zp1+3
23df : d0fe                     bne *       ;trap: store to zp data
23e1 : 8612                     stx zpt+3   ;clear
23e3 : ad3602                   lda abst+3
23e6 : 49c3                     eor #$c3
23e8 : cd0302                   cmp abs1+3
23eb : d0fe                     bne *       ;trap: store to abs data
23ed : 8e3602                   stx abst+3  ;clear
                        
                        ; testing bit test & compares BIT CPX CPY CMP all addressing modes
                        ; BIT - zp / abs
                                set_a $ff,0
                       >            load_flag 0
23f0 : a900            >            lda #0
                       >
23f2 : 48              >            pha         ;use stack to load status
23f3 : a9ff            >            lda #$ff     ;precharge accu
23f5 : 28              >            plp
                        
23f6 : 240d                     bit zp1+3   ;00 - should set Z / clear  NV
                                tst_a $ff,fz
23f8 : 08              >            php         ;save flags
23f9 : 08              >            php
23fa : c9ff            >            cmp #$ff     ;test result
23fc : d0fe            >            bne *       ;trap
23fe : 68              >            pla         ;load status
                       >            cmp_flag fz
23ff : c932            >            cmp #(fz|$30)&$ff
                       >
2401 : d0fe            >            bne *       ;trap
2403 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
2404 : a900            >            lda #0
                       >
2406 : 48              >            pha         ;use stack to load status
2407 : a901            >            lda #1     ;precharge accu
2409 : 28              >            plp
                        
240a : 240c                     bit zp1+2   ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
240c : 08              >            php         ;save flags
240d : 08              >            php
240e : c901            >            cmp #1     ;test result
2410 : d0fe            >            bne *       ;trap
2412 : 68              >            pla         ;load status
                       >            cmp_flag fv
2413 : c970            >            cmp #(fv|$30)&$ff
                       >
2415 : d0fe            >            bne *       ;trap
2417 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
2418 : a900            >            lda #0
                       >
241a : 48              >            pha         ;use stack to load status
241b : a901            >            lda #1     ;precharge accu
241d : 28              >            plp
                        
241e : 240b                     bit zp1+1   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
2420 : 08              >            php         ;save flags
2421 : 08              >            php
2422 : c901            >            cmp #1     ;test result
2424 : d0fe            >            bne *       ;trap
2426 : 68              >            pla         ;load status
                       >            cmp_flag fnz
2427 : c9b2            >            cmp #(fnz|$30)&$ff
                       >
2429 : d0fe            >            bne *       ;trap
242b : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
242c : a900            >            lda #0
                       >
242e : 48              >            pha         ;use stack to load status
242f : a901            >            lda #1     ;precharge accu
2431 : 28              >            plp
                        
2432 : 240a                     bit zp1     ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
2434 : 08              >            php         ;save flags
2435 : 08              >            php
2436 : c901            >            cmp #1     ;test result
2438 : d0fe            >            bne *       ;trap
243a : 68              >            pla         ;load status
                       >            cmp_flag fnv
243b : c9f0            >            cmp #(fnv|$30)&$ff
                       >
243d : d0fe            >            bne *       ;trap
243f : 28              >            plp         ;restore status
                        
                        
                                set_a $ff,$ff
                       >            load_flag $ff
2440 : a9ff            >            lda #$ff
                       >
2442 : 48              >            pha         ;use stack to load status
2443 : a9ff            >            lda #$ff     ;precharge accu
2445 : 28              >            plp
                        
2446 : 240d                     bit zp1+3   ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv
2448 : 08              >            php         ;save flags
2449 : 08              >            php
244a : c9ff            >            cmp #$ff     ;test result
244c : d0fe            >            bne *       ;trap
244e : 68              >            pla         ;load status
                       >            cmp_flag ~fnv
244f : c93f            >            cmp #(~fnv|$30)&$ff
                       >
2451 : d0fe            >            bne *       ;trap
2453 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
2454 : a9ff            >            lda #$ff
                       >
2456 : 48              >            pha         ;use stack to load status
2457 : a901            >            lda #1     ;precharge accu
2459 : 28              >            plp
                        
245a : 240c                     bit zp1+2   ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
245c : 08              >            php         ;save flags
245d : 08              >            php
245e : c901            >            cmp #1     ;test result
2460 : d0fe            >            bne *       ;trap
2462 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2463 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
2465 : d0fe            >            bne *       ;trap
2467 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
2468 : a9ff            >            lda #$ff
                       >
246a : 48              >            pha         ;use stack to load status
246b : a901            >            lda #1     ;precharge accu
246d : 28              >            plp
                        
246e : 240b                     bit zp1+1   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
2470 : 08              >            php         ;save flags
2471 : 08              >            php
2472 : c901            >            cmp #1     ;test result
2474 : d0fe            >            bne *       ;trap
2476 : 68              >            pla         ;load status
                       >            cmp_flag ~fv
2477 : c9bf            >            cmp #(~fv|$30)&$ff
                       >
2479 : d0fe            >            bne *       ;trap
247b : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
247c : a9ff            >            lda #$ff
                       >
247e : 48              >            pha         ;use stack to load status
247f : a901            >            lda #1     ;precharge accu
2481 : 28              >            plp
                        
2482 : 240a                     bit zp1     ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
2484 : 08              >            php         ;save flags
2485 : 08              >            php
2486 : c901            >            cmp #1     ;test result
2488 : d0fe            >            bne *       ;trap
248a : 68              >            pla         ;load status
                       >            cmp_flag ~fz
248b : c9fd            >            cmp #(~fz|$30)&$ff
                       >
248d : d0fe            >            bne *       ;trap
248f : 28              >            plp         ;restore status
                        
                        
                                set_a $ff,0
                       >            load_flag 0
2490 : a900            >            lda #0
                       >
2492 : 48              >            pha         ;use stack to load status
2493 : a9ff            >            lda #$ff     ;precharge accu
2495 : 28              >            plp
                        
2496 : 2c0302                   bit abs1+3  ;00 - should set Z / clear  NV
                                tst_a $ff,fz
2499 : 08              >            php         ;save flags
249a : 08              >            php
249b : c9ff            >            cmp #$ff     ;test result
249d : d0fe            >            bne *       ;trap
249f : 68              >            pla         ;load status
                       >            cmp_flag fz
24a0 : c932            >            cmp #(fz|$30)&$ff
                       >
24a2 : d0fe            >            bne *       ;trap
24a4 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
24a5 : a900            >            lda #0
                       >
24a7 : 48              >            pha         ;use stack to load status
24a8 : a901            >            lda #1     ;precharge accu
24aa : 28              >            plp
                        
24ab : 2c0202                   bit abs1+2  ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
24ae : 08              >            php         ;save flags
24af : 08              >            php
24b0 : c901            >            cmp #1     ;test result
24b2 : d0fe            >            bne *       ;trap
24b4 : 68              >            pla         ;load status
                       >            cmp_flag fv
24b5 : c970            >            cmp #(fv|$30)&$ff
                       >
24b7 : d0fe            >            bne *       ;trap
24b9 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
24ba : a900            >            lda #0
                       >
24bc : 48              >            pha         ;use stack to load status
24bd : a901            >            lda #1     ;precharge accu
24bf : 28              >            plp
                        
24c0 : 2c0102                   bit abs1+1  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
24c3 : 08              >            php         ;save flags
24c4 : 08              >            php
24c5 : c901            >            cmp #1     ;test result
24c7 : d0fe            >            bne *       ;trap
24c9 : 68              >            pla         ;load status
                       >            cmp_flag fnz
24ca : c9b2            >            cmp #(fnz|$30)&$ff
                       >
24cc : d0fe            >            bne *       ;trap
24ce : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
24cf : a900            >            lda #0
                       >
24d1 : 48              >            pha         ;use stack to load status
24d2 : a901            >            lda #1     ;precharge accu
24d4 : 28              >            plp
                        
24d5 : 2c0002                   bit abs1    ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
24d8 : 08              >            php         ;save flags
24d9 : 08              >            php
24da : c901            >            cmp #1     ;test result
24dc : d0fe            >            bne *       ;trap
24de : 68              >            pla         ;load status
                       >            cmp_flag fnv
24df : c9f0            >            cmp #(fnv|$30)&$ff
                       >
24e1 : d0fe            >            bne *       ;trap
24e3 : 28              >            plp         ;restore status
                        
                        
                                set_a $ff,$ff
                       >            load_flag $ff
24e4 : a9ff            >            lda #$ff
                       >
24e6 : 48              >            pha         ;use stack to load status
24e7 : a9ff            >            lda #$ff     ;precharge accu
24e9 : 28              >            plp
                        
24ea : 2c0302                   bit abs1+3  ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv
24ed : 08              >            php         ;save flags
24ee : 08              >            php
24ef : c9ff            >            cmp #$ff     ;test result
24f1 : d0fe            >            bne *       ;trap
24f3 : 68              >            pla         ;load status
                       >            cmp_flag ~fnv
24f4 : c93f            >            cmp #(~fnv|$30)&$ff
                       >
24f6 : d0fe            >            bne *       ;trap
24f8 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
24f9 : a9ff            >            lda #$ff
                       >
24fb : 48              >            pha         ;use stack to load status
24fc : a901            >            lda #1     ;precharge accu
24fe : 28              >            plp
                        
24ff : 2c0202                   bit abs1+2  ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
2502 : 08              >            php         ;save flags
2503 : 08              >            php
2504 : c901            >            cmp #1     ;test result
2506 : d0fe            >            bne *       ;trap
2508 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2509 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
250b : d0fe            >            bne *       ;trap
250d : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
250e : a9ff            >            lda #$ff
                       >
2510 : 48              >            pha         ;use stack to load status
2511 : a901            >            lda #1     ;precharge accu
2513 : 28              >            plp
                        
2514 : 2c0102                   bit abs1+1  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
2517 : 08              >            php         ;save flags
2518 : 08              >            php
2519 : c901            >            cmp #1     ;test result
251b : d0fe            >            bne *       ;trap
251d : 68              >            pla         ;load status
                       >            cmp_flag ~fv
251e : c9bf            >            cmp #(~fv|$30)&$ff
                       >
2520 : d0fe            >            bne *       ;trap
2522 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
2523 : a9ff            >            lda #$ff
                       >
2525 : 48              >            pha         ;use stack to load status
2526 : a901            >            lda #1     ;precharge accu
2528 : 28              >            plp
                        
2529 : 2c0002                   bit abs1    ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
252c : 08              >            php         ;save flags
252d : 08              >            php
252e : c901            >            cmp #1     ;test result
2530 : d0fe            >            bne *       ;trap
2532 : 68              >            pla         ;load status
                       >            cmp_flag ~fz
2533 : c9fd            >            cmp #(~fz|$30)&$ff
                       >
2535 : d0fe            >            bne *       ;trap
2537 : 28              >            plp         ;restore status
                        
                        
                        ; CPX - zp / abs / #
                                set_x $80,0
                       >            load_flag 0
2538 : a900            >            lda #0
                       >
253a : 48              >            pha         ;use stack to load status
253b : a280            >            ldx #$80     ;precharge accu
253d : 28              >            plp
                        
253e : e40e                     cpx zp7f
                                tst_stat fc
2540 : 08              >            php         ;save status
2541 : 08              >            php         ;use stack to retrieve status
2542 : 68              >            pla
                       >            cmp_flag fc
2543 : c931            >            cmp #(fc|$30)&$ff
                       >
2545 : d0fe            >            bne *       ;trap
2547 : 28              >            plp         ;restore status
                        
2548 : ca                       dex
2549 : e40e                     cpx zp7f
                                tst_stat fzc
254b : 08              >            php         ;save status
254c : 08              >            php         ;use stack to retrieve status
254d : 68              >            pla
                       >            cmp_flag fzc
254e : c933            >            cmp #(fzc|$30)&$ff
                       >
2550 : d0fe            >            bne *       ;trap
2552 : 28              >            plp         ;restore status
                        
2553 : ca                       dex
2554 : e40e                     cpx zp7f
                                tst_x $7e,fn
2556 : 08              >            php         ;save flags
2557 : 08              >            php
2558 : e07e            >            cpx #$7e     ;test result
255a : d0fe            >            bne *       ;trap
255c : 68              >            pla         ;load status
                       >            cmp_flag fn
255d : c9b0            >            cmp #(fn|$30)&$ff
                       >
255f : d0fe            >            bne *       ;trap
2561 : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
2562 : a9ff            >            lda #$ff
                       >
2564 : 48              >            pha         ;use stack to load status
2565 : a280            >            ldx #$80     ;precharge accu
2567 : 28              >            plp
                        
2568 : e40e                     cpx zp7f
                                tst_stat ~fnz
256a : 08              >            php         ;save status
256b : 08              >            php         ;use stack to retrieve status
256c : 68              >            pla
                       >            cmp_flag ~fnz
256d : c97d            >            cmp #(~fnz|$30)&$ff
                       >
256f : d0fe            >            bne *       ;trap
2571 : 28              >            plp         ;restore status
                        
2572 : ca                       dex
2573 : e40e                     cpx zp7f
                                tst_stat ~fn
2575 : 08              >            php         ;save status
2576 : 08              >            php         ;use stack to retrieve status
2577 : 68              >            pla
                       >            cmp_flag ~fn
2578 : c97f            >            cmp #(~fn|$30)&$ff
                       >
257a : d0fe            >            bne *       ;trap
257c : 28              >            plp         ;restore status
                        
257d : ca                       dex
257e : e40e                     cpx zp7f
                                tst_x $7e,~fzc
2580 : 08              >            php         ;save flags
2581 : 08              >            php
2582 : e07e            >            cpx #$7e     ;test result
2584 : d0fe            >            bne *       ;trap
2586 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2587 : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
2589 : d0fe            >            bne *       ;trap
258b : 28              >            plp         ;restore status
                        
                        
                                set_x $80,0
                       >            load_flag 0
258c : a900            >            lda #0
                       >
258e : 48              >            pha         ;use stack to load status
258f : a280            >            ldx #$80     ;precharge accu
2591 : 28              >            plp
                        
2592 : ec0402                   cpx abs7f
                                tst_stat fc
2595 : 08              >            php         ;save status
2596 : 08              >            php         ;use stack to retrieve status
2597 : 68              >            pla
                       >            cmp_flag fc
2598 : c931            >            cmp #(fc|$30)&$ff
                       >
259a : d0fe            >            bne *       ;trap
259c : 28              >            plp         ;restore status
                        
259d : ca                       dex
259e : ec0402                   cpx abs7f
                                tst_stat fzc
25a1 : 08              >            php         ;save status
25a2 : 08              >            php         ;use stack to retrieve status
25a3 : 68              >            pla
                       >            cmp_flag fzc
25a4 : c933            >            cmp #(fzc|$30)&$ff
                       >
25a6 : d0fe            >            bne *       ;trap
25a8 : 28              >            plp         ;restore status
                        
25a9 : ca                       dex
25aa : ec0402                   cpx abs7f
                                tst_x $7e,fn
25ad : 08              >            php         ;save flags
25ae : 08              >            php
25af : e07e            >            cpx #$7e     ;test result
25b1 : d0fe            >            bne *       ;trap
25b3 : 68              >            pla         ;load status
                       >            cmp_flag fn
25b4 : c9b0            >            cmp #(fn|$30)&$ff
                       >
25b6 : d0fe            >            bne *       ;trap
25b8 : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
25b9 : a9ff            >            lda #$ff
                       >
25bb : 48              >            pha         ;use stack to load status
25bc : a280            >            ldx #$80     ;precharge accu
25be : 28              >            plp
                        
25bf : ec0402                   cpx abs7f
                                tst_stat ~fnz
25c2 : 08              >            php         ;save status
25c3 : 08              >            php         ;use stack to retrieve status
25c4 : 68              >            pla
                       >            cmp_flag ~fnz
25c5 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
25c7 : d0fe            >            bne *       ;trap
25c9 : 28              >            plp         ;restore status
                        
25ca : ca                       dex
25cb : ec0402                   cpx abs7f
                                tst_stat ~fn
25ce : 08              >            php         ;save status
25cf : 08              >            php         ;use stack to retrieve status
25d0 : 68              >            pla
                       >            cmp_flag ~fn
25d1 : c97f            >            cmp #(~fn|$30)&$ff
                       >
25d3 : d0fe            >            bne *       ;trap
25d5 : 28              >            plp         ;restore status
                        
25d6 : ca                       dex
25d7 : ec0402                   cpx abs7f
                                tst_x $7e,~fzc
25da : 08              >            php         ;save flags
25db : 08              >            php
25dc : e07e            >            cpx #$7e     ;test result
25de : d0fe            >            bne *       ;trap
25e0 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
25e1 : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
25e3 : d0fe            >            bne *       ;trap
25e5 : 28              >            plp         ;restore status
                        
                        
                                set_x $80,0
                       >            load_flag 0
25e6 : a900            >            lda #0
                       >
25e8 : 48              >            pha         ;use stack to load status
25e9 : a280            >            ldx #$80     ;precharge accu
25eb : 28              >            plp
                        
25ec : e07f                     cpx #$7f
                                tst_stat fc
25ee : 08              >            php         ;save status
25ef : 08              >            php         ;use stack to retrieve status
25f0 : 68              >            pla
                       >            cmp_flag fc
25f1 : c931            >            cmp #(fc|$30)&$ff
                       >
25f3 : d0fe            >            bne *       ;trap
25f5 : 28              >            plp         ;restore status
                        
25f6 : ca                       dex
25f7 : e07f                     cpx #$7f
                                tst_stat fzc
25f9 : 08              >            php         ;save status
25fa : 08              >            php         ;use stack to retrieve status
25fb : 68              >            pla
                       >            cmp_flag fzc
25fc : c933            >            cmp #(fzc|$30)&$ff
                       >
25fe : d0fe            >            bne *       ;trap
2600 : 28              >            plp         ;restore status
                        
2601 : ca                       dex
2602 : e07f                     cpx #$7f
                                tst_x $7e,fn
2604 : 08              >            php         ;save flags
2605 : 08              >            php
2606 : e07e            >            cpx #$7e     ;test result
2608 : d0fe            >            bne *       ;trap
260a : 68              >            pla         ;load status
                       >            cmp_flag fn
260b : c9b0            >            cmp #(fn|$30)&$ff
                       >
260d : d0fe            >            bne *       ;trap
260f : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
2610 : a9ff            >            lda #$ff
                       >
2612 : 48              >            pha         ;use stack to load status
2613 : a280            >            ldx #$80     ;precharge accu
2615 : 28              >            plp
                        
2616 : e07f                     cpx #$7f
                                tst_stat ~fnz
2618 : 08              >            php         ;save status
2619 : 08              >            php         ;use stack to retrieve status
261a : 68              >            pla
                       >            cmp_flag ~fnz
261b : c97d            >            cmp #(~fnz|$30)&$ff
                       >
261d : d0fe            >            bne *       ;trap
261f : 28              >            plp         ;restore status
                        
2620 : ca                       dex
2621 : e07f                     cpx #$7f
                                tst_stat ~fn
2623 : 08              >            php         ;save status
2624 : 08              >            php         ;use stack to retrieve status
2625 : 68              >            pla
                       >            cmp_flag ~fn
2626 : c97f            >            cmp #(~fn|$30)&$ff
                       >
2628 : d0fe            >            bne *       ;trap
262a : 28              >            plp         ;restore status
                        
262b : ca                       dex
262c : e07f                     cpx #$7f
                                tst_x $7e,~fzc
262e : 08              >            php         ;save flags
262f : 08              >            php
2630 : e07e            >            cpx #$7e     ;test result
2632 : d0fe            >            bne *       ;trap
2634 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2635 : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
2637 : d0fe            >            bne *       ;trap
2639 : 28              >            plp         ;restore status
                        
                        
                        ; CPY - zp / abs / #
                                set_y $80,0
                       >            load_flag 0
263a : a900            >            lda #0
                       >
263c : 48              >            pha         ;use stack to load status
263d : a080            >            ldy #$80     ;precharge accu
263f : 28              >            plp
                        
2640 : c40e                     cpy zp7f
                                tst_stat fc
2642 : 08              >            php         ;save status
2643 : 08              >            php         ;use stack to retrieve status
2644 : 68              >            pla
                       >            cmp_flag fc
2645 : c931            >            cmp #(fc|$30)&$ff
                       >
2647 : d0fe            >            bne *       ;trap
2649 : 28              >            plp         ;restore status
                        
264a : 88                       dey
264b : c40e                     cpy zp7f
                                tst_stat fzc
264d : 08              >            php         ;save status
264e : 08              >            php         ;use stack to retrieve status
264f : 68              >            pla
                       >            cmp_flag fzc
2650 : c933            >            cmp #(fzc|$30)&$ff
                       >
2652 : d0fe            >            bne *       ;trap
2654 : 28              >            plp         ;restore status
                        
2655 : 88                       dey
2656 : c40e                     cpy zp7f
                                tst_y $7e,fn
2658 : 08              >            php         ;save flags
2659 : 08              >            php
265a : c07e            >            cpy #$7e     ;test result
265c : d0fe            >            bne *       ;trap
265e : 68              >            pla         ;load status
                       >            cmp_flag fn
265f : c9b0            >            cmp #(fn|$30)&$ff
                       >
2661 : d0fe            >            bne *       ;trap
2663 : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
2664 : a9ff            >            lda #$ff
                       >
2666 : 48              >            pha         ;use stack to load status
2667 : a080            >            ldy #$80     ;precharge accu
2669 : 28              >            plp
                        
266a : c40e                     cpy zp7f
                                tst_stat ~fnz
266c : 08              >            php         ;save status
266d : 08              >            php         ;use stack to retrieve status
266e : 68              >            pla
                       >            cmp_flag ~fnz
266f : c97d            >            cmp #(~fnz|$30)&$ff
                       >
2671 : d0fe            >            bne *       ;trap
2673 : 28              >            plp         ;restore status
                        
2674 : 88                       dey
2675 : c40e                     cpy zp7f
                                tst_stat ~fn
2677 : 08              >            php         ;save status
2678 : 08              >            php         ;use stack to retrieve status
2679 : 68              >            pla
                       >            cmp_flag ~fn
267a : c97f            >            cmp #(~fn|$30)&$ff
                       >
267c : d0fe            >            bne *       ;trap
267e : 28              >            plp         ;restore status
                        
267f : 88                       dey
2680 : c40e                     cpy zp7f
                                tst_y $7e,~fzc
2682 : 08              >            php         ;save flags
2683 : 08              >            php
2684 : c07e            >            cpy #$7e     ;test result
2686 : d0fe            >            bne *       ;trap
2688 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2689 : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
268b : d0fe            >            bne *       ;trap
268d : 28              >            plp         ;restore status
                        
                        
                                set_y $80,0
                       >            load_flag 0
268e : a900            >            lda #0
                       >
2690 : 48              >            pha         ;use stack to load status
2691 : a080            >            ldy #$80     ;precharge accu
2693 : 28              >            plp
                        
2694 : cc0402                   cpy abs7f
                                tst_stat fc
2697 : 08              >            php         ;save status
2698 : 08              >            php         ;use stack to retrieve status
2699 : 68              >            pla
                       >            cmp_flag fc
269a : c931            >            cmp #(fc|$30)&$ff
                       >
269c : d0fe            >            bne *       ;trap
269e : 28              >            plp         ;restore status
                        
269f : 88                       dey
26a0 : cc0402                   cpy abs7f
                                tst_stat fzc
26a3 : 08              >            php         ;save status
26a4 : 08              >            php         ;use stack to retrieve status
26a5 : 68              >            pla
                       >            cmp_flag fzc
26a6 : c933            >            cmp #(fzc|$30)&$ff
                       >
26a8 : d0fe            >            bne *       ;trap
26aa : 28              >            plp         ;restore status
                        
26ab : 88                       dey
26ac : cc0402                   cpy abs7f
                                tst_y $7e,fn
26af : 08              >            php         ;save flags
26b0 : 08              >            php
26b1 : c07e            >            cpy #$7e     ;test result
26b3 : d0fe            >            bne *       ;trap
26b5 : 68              >            pla         ;load status
                       >            cmp_flag fn
26b6 : c9b0            >            cmp #(fn|$30)&$ff
                       >
26b8 : d0fe            >            bne *       ;trap
26ba : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
26bb : a9ff            >            lda #$ff
                       >
26bd : 48              >            pha         ;use stack to load status
26be : a080            >            ldy #$80     ;precharge accu
26c0 : 28              >            plp
                        
26c1 : cc0402                   cpy abs7f
                                tst_stat ~fnz
26c4 : 08              >            php         ;save status
26c5 : 08              >            php         ;use stack to retrieve status
26c6 : 68              >            pla
                       >            cmp_flag ~fnz
26c7 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
26c9 : d0fe            >            bne *       ;trap
26cb : 28              >            plp         ;restore status
                        
26cc : 88                       dey
26cd : cc0402                   cpy abs7f
                                tst_stat ~fn
26d0 : 08              >            php         ;save status
26d1 : 08              >            php         ;use stack to retrieve status
26d2 : 68              >            pla
                       >            cmp_flag ~fn
26d3 : c97f            >            cmp #(~fn|$30)&$ff
                       >
26d5 : d0fe            >            bne *       ;trap
26d7 : 28              >            plp         ;restore status
                        
26d8 : 88                       dey
26d9 : cc0402                   cpy abs7f
                                tst_y $7e,~fzc
26dc : 08              >            php         ;save flags
26dd : 08              >            php
26de : c07e            >            cpy #$7e     ;test result
26e0 : d0fe            >            bne *       ;trap
26e2 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
26e3 : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
26e5 : d0fe            >            bne *       ;trap
26e7 : 28              >            plp         ;restore status
                        
                        
                                set_y $80,0
                       >            load_flag 0
26e8 : a900            >            lda #0
                       >
26ea : 48              >            pha         ;use stack to load status
26eb : a080            >            ldy #$80     ;precharge accu
26ed : 28              >            plp
                        
26ee : c07f                     cpy #$7f
                                tst_stat fc
26f0 : 08              >            php         ;save status
26f1 : 08              >            php         ;use stack to retrieve status
26f2 : 68              >            pla
                       >            cmp_flag fc
26f3 : c931            >            cmp #(fc|$30)&$ff
                       >
26f5 : d0fe            >            bne *       ;trap
26f7 : 28              >            plp         ;restore status
                        
26f8 : 88                       dey
26f9 : c07f                     cpy #$7f
                                tst_stat fzc
26fb : 08              >            php         ;save status
26fc : 08              >            php         ;use stack to retrieve status
26fd : 68              >            pla
                       >            cmp_flag fzc
26fe : c933            >            cmp #(fzc|$30)&$ff
                       >
2700 : d0fe            >            bne *       ;trap
2702 : 28              >            plp         ;restore status
                        
2703 : 88                       dey
2704 : c07f                     cpy #$7f
                                tst_y $7e,fn
2706 : 08              >            php         ;save flags
2707 : 08              >            php
2708 : c07e            >            cpy #$7e     ;test result
270a : d0fe            >            bne *       ;trap
270c : 68              >            pla         ;load status
                       >            cmp_flag fn
270d : c9b0            >            cmp #(fn|$30)&$ff
                       >
270f : d0fe            >            bne *       ;trap
2711 : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
2712 : a9ff            >            lda #$ff
                       >
2714 : 48              >            pha         ;use stack to load status
2715 : a080            >            ldy #$80     ;precharge accu
2717 : 28              >            plp
                        
2718 : c07f                     cpy #$7f
                                tst_stat ~fnz
271a : 08              >            php         ;save status
271b : 08              >            php         ;use stack to retrieve status
271c : 68              >            pla
                       >            cmp_flag ~fnz
271d : c97d            >            cmp #(~fnz|$30)&$ff
                       >
271f : d0fe            >            bne *       ;trap
2721 : 28              >            plp         ;restore status
                        
2722 : 88                       dey
2723 : c07f                     cpy #$7f
                                tst_stat ~fn
2725 : 08              >            php         ;save status
2726 : 08              >            php         ;use stack to retrieve status
2727 : 68              >            pla
                       >            cmp_flag ~fn
2728 : c97f            >            cmp #(~fn|$30)&$ff
                       >
272a : d0fe            >            bne *       ;trap
272c : 28              >            plp         ;restore status
                        
272d : 88                       dey
272e : c07f                     cpy #$7f
                                tst_y $7e,~fzc
2730 : 08              >            php         ;save flags
2731 : 08              >            php
2732 : c07e            >            cpy #$7e     ;test result
2734 : d0fe            >            bne *       ;trap
2736 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2737 : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
2739 : d0fe            >            bne *       ;trap
273b : 28              >            plp         ;restore status
                        
                        
                        ; CMP - zp / abs / #
                                set_a $80,0
                       >            load_flag 0
273c : a900            >            lda #0
                       >
273e : 48              >            pha         ;use stack to load status
273f : a980            >            lda #$80     ;precharge accu
2741 : 28              >            plp
                        
2742 : c50e                     cmp zp7f
                                tst_a $80,fc
2744 : 08              >            php         ;save flags
2745 : 08              >            php
2746 : c980            >            cmp #$80     ;test result
2748 : d0fe            >            bne *       ;trap
274a : 68              >            pla         ;load status
                       >            cmp_flag fc
274b : c931            >            cmp #(fc|$30)&$ff
                       >
274d : d0fe            >            bne *       ;trap
274f : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
2750 : a900            >            lda #0
                       >
2752 : 48              >            pha         ;use stack to load status
2753 : a97f            >            lda #$7f     ;precharge accu
2755 : 28              >            plp
                        
2756 : c50e                     cmp zp7f
                                tst_a $7f,fzc
2758 : 08              >            php         ;save flags
2759 : 08              >            php
275a : c97f            >            cmp #$7f     ;test result
275c : d0fe            >            bne *       ;trap
275e : 68              >            pla         ;load status
                       >            cmp_flag fzc
275f : c933            >            cmp #(fzc|$30)&$ff
                       >
2761 : d0fe            >            bne *       ;trap
2763 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
2764 : a900            >            lda #0
                       >
2766 : 48              >            pha         ;use stack to load status
2767 : a97e            >            lda #$7e     ;precharge accu
2769 : 28              >            plp
                        
276a : c50e                     cmp zp7f
                                tst_a $7e,fn
276c : 08              >            php         ;save flags
276d : 08              >            php
276e : c97e            >            cmp #$7e     ;test result
2770 : d0fe            >            bne *       ;trap
2772 : 68              >            pla         ;load status
                       >            cmp_flag fn
2773 : c9b0            >            cmp #(fn|$30)&$ff
                       >
2775 : d0fe            >            bne *       ;trap
2777 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
2778 : a9ff            >            lda #$ff
                       >
277a : 48              >            pha         ;use stack to load status
277b : a980            >            lda #$80     ;precharge accu
277d : 28              >            plp
                        
277e : c50e                     cmp zp7f
                                tst_a $80,~fnz
2780 : 08              >            php         ;save flags
2781 : 08              >            php
2782 : c980            >            cmp #$80     ;test result
2784 : d0fe            >            bne *       ;trap
2786 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2787 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
2789 : d0fe            >            bne *       ;trap
278b : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
278c : a9ff            >            lda #$ff
                       >
278e : 48              >            pha         ;use stack to load status
278f : a97f            >            lda #$7f     ;precharge accu
2791 : 28              >            plp
                        
2792 : c50e                     cmp zp7f
                                tst_a $7f,~fn
2794 : 08              >            php         ;save flags
2795 : 08              >            php
2796 : c97f            >            cmp #$7f     ;test result
2798 : d0fe            >            bne *       ;trap
279a : 68              >            pla         ;load status
                       >            cmp_flag ~fn
279b : c97f            >            cmp #(~fn|$30)&$ff
                       >
279d : d0fe            >            bne *       ;trap
279f : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
27a0 : a9ff            >            lda #$ff
                       >
27a2 : 48              >            pha         ;use stack to load status
27a3 : a97e            >            lda #$7e     ;precharge accu
27a5 : 28              >            plp
                        
27a6 : c50e                     cmp zp7f
                                tst_a $7e,~fzc
27a8 : 08              >            php         ;save flags
27a9 : 08              >            php
27aa : c97e            >            cmp #$7e     ;test result
27ac : d0fe            >            bne *       ;trap
27ae : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
27af : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
27b1 : d0fe            >            bne *       ;trap
27b3 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
27b4 : a900            >            lda #0
                       >
27b6 : 48              >            pha         ;use stack to load status
27b7 : a980            >            lda #$80     ;precharge accu
27b9 : 28              >            plp
                        
27ba : cd0402                   cmp abs7f
                                tst_a $80,fc
27bd : 08              >            php         ;save flags
27be : 08              >            php
27bf : c980            >            cmp #$80     ;test result
27c1 : d0fe            >            bne *       ;trap
27c3 : 68              >            pla         ;load status
                       >            cmp_flag fc
27c4 : c931            >            cmp #(fc|$30)&$ff
                       >
27c6 : d0fe            >            bne *       ;trap
27c8 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
27c9 : a900            >            lda #0
                       >
27cb : 48              >            pha         ;use stack to load status
27cc : a97f            >            lda #$7f     ;precharge accu
27ce : 28              >            plp
                        
27cf : cd0402                   cmp abs7f
                                tst_a $7f,fzc
27d2 : 08              >            php         ;save flags
27d3 : 08              >            php
27d4 : c97f            >            cmp #$7f     ;test result
27d6 : d0fe            >            bne *       ;trap
27d8 : 68              >            pla         ;load status
                       >            cmp_flag fzc
27d9 : c933            >            cmp #(fzc|$30)&$ff
                       >
27db : d0fe            >            bne *       ;trap
27dd : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
27de : a900            >            lda #0
                       >
27e0 : 48              >            pha         ;use stack to load status
27e1 : a97e            >            lda #$7e     ;precharge accu
27e3 : 28              >            plp
                        
27e4 : cd0402                   cmp abs7f
                                tst_a $7e,fn
27e7 : 08              >            php         ;save flags
27e8 : 08              >            php
27e9 : c97e            >            cmp #$7e     ;test result
27eb : d0fe            >            bne *       ;trap
27ed : 68              >            pla         ;load status
                       >            cmp_flag fn
27ee : c9b0            >            cmp #(fn|$30)&$ff
                       >
27f0 : d0fe            >            bne *       ;trap
27f2 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
27f3 : a9ff            >            lda #$ff
                       >
27f5 : 48              >            pha         ;use stack to load status
27f6 : a980            >            lda #$80     ;precharge accu
27f8 : 28              >            plp
                        
27f9 : cd0402                   cmp abs7f
                                tst_a $80,~fnz
27fc : 08              >            php         ;save flags
27fd : 08              >            php
27fe : c980            >            cmp #$80     ;test result
2800 : d0fe            >            bne *       ;trap
2802 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2803 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
2805 : d0fe            >            bne *       ;trap
2807 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2808 : a9ff            >            lda #$ff
                       >
280a : 48              >            pha         ;use stack to load status
280b : a97f            >            lda #$7f     ;precharge accu
280d : 28              >            plp
                        
280e : cd0402                   cmp abs7f
                                tst_a $7f,~fn
2811 : 08              >            php         ;save flags
2812 : 08              >            php
2813 : c97f            >            cmp #$7f     ;test result
2815 : d0fe            >            bne *       ;trap
2817 : 68              >            pla         ;load status
                       >            cmp_flag ~fn
2818 : c97f            >            cmp #(~fn|$30)&$ff
                       >
281a : d0fe            >            bne *       ;trap
281c : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
281d : a9ff            >            lda #$ff
                       >
281f : 48              >            pha         ;use stack to load status
2820 : a97e            >            lda #$7e     ;precharge accu
2822 : 28              >            plp
                        
2823 : cd0402                   cmp abs7f
                                tst_a $7e,~fzc
2826 : 08              >            php         ;save flags
2827 : 08              >            php
2828 : c97e            >            cmp #$7e     ;test result
282a : d0fe            >            bne *       ;trap
282c : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
282d : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
282f : d0fe            >            bne *       ;trap
2831 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
2832 : a900            >            lda #0
                       >
2834 : 48              >            pha         ;use stack to load status
2835 : a980            >            lda #$80     ;precharge accu
2837 : 28              >            plp
                        
2838 : c97f                     cmp #$7f
                                tst_a $80,fc
283a : 08              >            php         ;save flags
283b : 08              >            php
283c : c980            >            cmp #$80     ;test result
283e : d0fe            >            bne *       ;trap
2840 : 68              >            pla         ;load status
                       >            cmp_flag fc
2841 : c931            >            cmp #(fc|$30)&$ff
                       >
2843 : d0fe            >            bne *       ;trap
2845 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
2846 : a900            >            lda #0
                       >
2848 : 48              >            pha         ;use stack to load status
2849 : a97f            >            lda #$7f     ;precharge accu
284b : 28              >            plp
                        
284c : c97f                     cmp #$7f
                                tst_a $7f,fzc
284e : 08              >            php         ;save flags
284f : 08              >            php
2850 : c97f            >            cmp #$7f     ;test result
2852 : d0fe            >            bne *       ;trap
2854 : 68              >            pla         ;load status
                       >            cmp_flag fzc
2855 : c933            >            cmp #(fzc|$30)&$ff
                       >
2857 : d0fe            >            bne *       ;trap
2859 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
285a : a900            >            lda #0
                       >
285c : 48              >            pha         ;use stack to load status
285d : a97e            >            lda #$7e     ;precharge accu
285f : 28              >            plp
                        
2860 : c97f                     cmp #$7f
                                tst_a $7e,fn
2862 : 08              >            php         ;save flags
2863 : 08              >            php
2864 : c97e            >            cmp #$7e     ;test result
2866 : d0fe            >            bne *       ;trap
2868 : 68              >            pla         ;load status
                       >            cmp_flag fn
2869 : c9b0            >            cmp #(fn|$30)&$ff
                       >
286b : d0fe            >            bne *       ;trap
286d : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
286e : a9ff            >            lda #$ff
                       >
2870 : 48              >            pha         ;use stack to load status
2871 : a980            >            lda #$80     ;precharge accu
2873 : 28              >            plp
                        
2874 : c97f                     cmp #$7f
                                tst_a $80,~fnz
2876 : 08              >            php         ;save flags
2877 : 08              >            php
2878 : c980            >            cmp #$80     ;test result
287a : d0fe            >            bne *       ;trap
287c : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
287d : c97d            >            cmp #(~fnz|$30)&$ff
                       >
287f : d0fe            >            bne *       ;trap
2881 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2882 : a9ff            >            lda #$ff
                       >
2884 : 48              >            pha         ;use stack to load status
2885 : a97f            >            lda #$7f     ;precharge accu
2887 : 28              >            plp
                        
2888 : c97f                     cmp #$7f
                                tst_a $7f,~fn
288a : 08              >            php         ;save flags
288b : 08              >            php
288c : c97f            >            cmp #$7f     ;test result
288e : d0fe            >            bne *       ;trap
2890 : 68              >            pla         ;load status
                       >            cmp_flag ~fn
2891 : c97f            >            cmp #(~fn|$30)&$ff
                       >
2893 : d0fe            >            bne *       ;trap
2895 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2896 : a9ff            >            lda #$ff
                       >
2898 : 48              >            pha         ;use stack to load status
2899 : a97e            >            lda #$7e     ;precharge accu
289b : 28              >            plp
                        
289c : c97f                     cmp #$7f
                                tst_a $7e,~fzc
289e : 08              >            php         ;save flags
289f : 08              >            php
28a0 : c97e            >            cmp #$7e     ;test result
28a2 : d0fe            >            bne *       ;trap
28a4 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
28a5 : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
28a7 : d0fe            >            bne *       ;trap
28a9 : 28              >            plp         ;restore status
                        
                        
28aa : a204                     ldx #4          ;with indexing by X
                                set_a $80,0
                       >            load_flag 0
28ac : a900            >            lda #0
                       >
28ae : 48              >            pha         ;use stack to load status
28af : a980            >            lda #$80     ;precharge accu
28b1 : 28              >            plp
                        
28b2 : d50a                     cmp zp1,x
                                tst_a $80,fc
28b4 : 08              >            php         ;save flags
28b5 : 08              >            php
28b6 : c980            >            cmp #$80     ;test result
28b8 : d0fe            >            bne *       ;trap
28ba : 68              >            pla         ;load status
                       >            cmp_flag fc
28bb : c931            >            cmp #(fc|$30)&$ff
                       >
28bd : d0fe            >            bne *       ;trap
28bf : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
28c0 : a900            >            lda #0
                       >
28c2 : 48              >            pha         ;use stack to load status
28c3 : a97f            >            lda #$7f     ;precharge accu
28c5 : 28              >            plp
                        
28c6 : d50a                     cmp zp1,x
                                tst_a $7f,fzc
28c8 : 08              >            php         ;save flags
28c9 : 08              >            php
28ca : c97f            >            cmp #$7f     ;test result
28cc : d0fe            >            bne *       ;trap
28ce : 68              >            pla         ;load status
                       >            cmp_flag fzc
28cf : c933            >            cmp #(fzc|$30)&$ff
                       >
28d1 : d0fe            >            bne *       ;trap
28d3 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
28d4 : a900            >            lda #0
                       >
28d6 : 48              >            pha         ;use stack to load status
28d7 : a97e            >            lda #$7e     ;precharge accu
28d9 : 28              >            plp
                        
28da : d50a                     cmp zp1,x
                                tst_a $7e,fn
28dc : 08              >            php         ;save flags
28dd : 08              >            php
28de : c97e            >            cmp #$7e     ;test result
28e0 : d0fe            >            bne *       ;trap
28e2 : 68              >            pla         ;load status
                       >            cmp_flag fn
28e3 : c9b0            >            cmp #(fn|$30)&$ff
                       >
28e5 : d0fe            >            bne *       ;trap
28e7 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
28e8 : a9ff            >            lda #$ff
                       >
28ea : 48              >            pha         ;use stack to load status
28eb : a980            >            lda #$80     ;precharge accu
28ed : 28              >            plp
                        
28ee : d50a                     cmp zp1,x
                                tst_a $80,~fnz
28f0 : 08              >            php         ;save flags
28f1 : 08              >            php
28f2 : c980            >            cmp #$80     ;test result
28f4 : d0fe            >            bne *       ;trap
28f6 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
28f7 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
28f9 : d0fe            >            bne *       ;trap
28fb : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
28fc : a9ff            >            lda #$ff
                       >
28fe : 48              >            pha         ;use stack to load status
28ff : a97f            >            lda #$7f     ;precharge accu
2901 : 28              >            plp
                        
2902 : d50a                     cmp zp1,x
                                tst_a $7f,~fn
2904 : 08              >            php         ;save flags
2905 : 08              >            php
2906 : c97f            >            cmp #$7f     ;test result
2908 : d0fe            >            bne *       ;trap
290a : 68              >            pla         ;load status
                       >            cmp_flag ~fn
290b : c97f            >            cmp #(~fn|$30)&$ff
                       >
290d : d0fe            >            bne *       ;trap
290f : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2910 : a9ff            >            lda #$ff
                       >
2912 : 48              >            pha         ;use stack to load status
2913 : a97e            >            lda #$7e     ;precharge accu
2915 : 28              >            plp
                        
2916 : d50a                     cmp zp1,x
                                tst_a $7e,~fzc
2918 : 08              >            php         ;save flags
2919 : 08              >            php
291a : c97e            >            cmp #$7e     ;test result
291c : d0fe            >            bne *       ;trap
291e : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
291f : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
2921 : d0fe            >            bne *       ;trap
2923 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
2924 : a900            >            lda #0
                       >
2926 : 48              >            pha         ;use stack to load status
2927 : a980            >            lda #$80     ;precharge accu
2929 : 28              >            plp
                        
292a : dd0002                   cmp abs1,x
                                tst_a $80,fc
292d : 08              >            php         ;save flags
292e : 08              >            php
292f : c980            >            cmp #$80     ;test result
2931 : d0fe            >            bne *       ;trap
2933 : 68              >            pla         ;load status
                       >            cmp_flag fc
2934 : c931            >            cmp #(fc|$30)&$ff
                       >
2936 : d0fe            >            bne *       ;trap
2938 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
2939 : a900            >            lda #0
                       >
293b : 48              >            pha         ;use stack to load status
293c : a97f            >            lda #$7f     ;precharge accu
293e : 28              >            plp
                        
293f : dd0002                   cmp abs1,x
                                tst_a $7f,fzc
2942 : 08              >            php         ;save flags
2943 : 08              >            php
2944 : c97f            >            cmp #$7f     ;test result
2946 : d0fe            >            bne *       ;trap
2948 : 68              >            pla         ;load status
                       >            cmp_flag fzc
2949 : c933            >            cmp #(fzc|$30)&$ff
                       >
294b : d0fe            >            bne *       ;trap
294d : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
294e : a900            >            lda #0
                       >
2950 : 48              >            pha         ;use stack to load status
2951 : a97e            >            lda #$7e     ;precharge accu
2953 : 28              >            plp
                        
2954 : dd0002                   cmp abs1,x
                                tst_a $7e,fn
2957 : 08              >            php         ;save flags
2958 : 08              >            php
2959 : c97e            >            cmp #$7e     ;test result
295b : d0fe            >            bne *       ;trap
295d : 68              >            pla         ;load status
                       >            cmp_flag fn
295e : c9b0            >            cmp #(fn|$30)&$ff
                       >
2960 : d0fe            >            bne *       ;trap
2962 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
2963 : a9ff            >            lda #$ff
                       >
2965 : 48              >            pha         ;use stack to load status
2966 : a980            >            lda #$80     ;precharge accu
2968 : 28              >            plp
                        
2969 : dd0002                   cmp abs1,x
                                tst_a $80,~fnz
296c : 08              >            php         ;save flags
296d : 08              >            php
296e : c980            >            cmp #$80     ;test result
2970 : d0fe            >            bne *       ;trap
2972 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2973 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
2975 : d0fe            >            bne *       ;trap
2977 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2978 : a9ff            >            lda #$ff
                       >
297a : 48              >            pha         ;use stack to load status
297b : a97f            >            lda #$7f     ;precharge accu
297d : 28              >            plp
                        
297e : dd0002                   cmp abs1,x
                                tst_a $7f,~fn
2981 : 08              >            php         ;save flags
2982 : 08              >            php
2983 : c97f            >            cmp #$7f     ;test result
2985 : d0fe            >            bne *       ;trap
2987 : 68              >            pla         ;load status
                       >            cmp_flag ~fn
2988 : c97f            >            cmp #(~fn|$30)&$ff
                       >
298a : d0fe            >            bne *       ;trap
298c : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
298d : a9ff            >            lda #$ff
                       >
298f : 48              >            pha         ;use stack to load status
2990 : a97e            >            lda #$7e     ;precharge accu
2992 : 28              >            plp
                        
2993 : dd0002                   cmp abs1,x
                                tst_a $7e,~fzc
2996 : 08              >            php         ;save flags
2997 : 08              >            php
2998 : c97e            >            cmp #$7e     ;test result
299a : d0fe            >            bne *       ;trap
299c : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
299d : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
299f : d0fe            >            bne *       ;trap
29a1 : 28              >            plp         ;restore status
                        
                        
29a2 : a004                     ldy #4          ;with indexing by Y
29a4 : a208                     ldx #8          ;with indexed indirect
                                set_a $80,0
                       >            load_flag 0
29a6 : a900            >            lda #0
                       >
29a8 : 48              >            pha         ;use stack to load status
29a9 : a980            >            lda #$80     ;precharge accu
29ab : 28              >            plp
                        
29ac : d90002                   cmp abs1,y
                                tst_a $80,fc
29af : 08              >            php         ;save flags
29b0 : 08              >            php
29b1 : c980            >            cmp #$80     ;test result
29b3 : d0fe            >            bne *       ;trap
29b5 : 68              >            pla         ;load status
                       >            cmp_flag fc
29b6 : c931            >            cmp #(fc|$30)&$ff
                       >
29b8 : d0fe            >            bne *       ;trap
29ba : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
29bb : a900            >            lda #0
                       >
29bd : 48              >            pha         ;use stack to load status
29be : a97f            >            lda #$7f     ;precharge accu
29c0 : 28              >            plp
                        
29c1 : d90002                   cmp abs1,y
                                tst_a $7f,fzc
29c4 : 08              >            php         ;save flags
29c5 : 08              >            php
29c6 : c97f            >            cmp #$7f     ;test result
29c8 : d0fe            >            bne *       ;trap
29ca : 68              >            pla         ;load status
                       >            cmp_flag fzc
29cb : c933            >            cmp #(fzc|$30)&$ff
                       >
29cd : d0fe            >            bne *       ;trap
29cf : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
29d0 : a900            >            lda #0
                       >
29d2 : 48              >            pha         ;use stack to load status
29d3 : a97e            >            lda #$7e     ;precharge accu
29d5 : 28              >            plp
                        
29d6 : d90002                   cmp abs1,y
                                tst_a $7e,fn
29d9 : 08              >            php         ;save flags
29da : 08              >            php
29db : c97e            >            cmp #$7e     ;test result
29dd : d0fe            >            bne *       ;trap
29df : 68              >            pla         ;load status
                       >            cmp_flag fn
29e0 : c9b0            >            cmp #(fn|$30)&$ff
                       >
29e2 : d0fe            >            bne *       ;trap
29e4 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
29e5 : a9ff            >            lda #$ff
                       >
29e7 : 48              >            pha         ;use stack to load status
29e8 : a980            >            lda #$80     ;precharge accu
29ea : 28              >            plp
                        
29eb : d90002                   cmp abs1,y
                                tst_a $80,~fnz
29ee : 08              >            php         ;save flags
29ef : 08              >            php
29f0 : c980            >            cmp #$80     ;test result
29f2 : d0fe            >            bne *       ;trap
29f4 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
29f5 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
29f7 : d0fe            >            bne *       ;trap
29f9 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
29fa : a9ff            >            lda #$ff
                       >
29fc : 48              >            pha         ;use stack to load status
29fd : a97f            >            lda #$7f     ;precharge accu
29ff : 28              >            plp
                        
2a00 : d90002                   cmp abs1,y
                                tst_a $7f,~fn
2a03 : 08              >            php         ;save flags
2a04 : 08              >            php
2a05 : c97f            >            cmp #$7f     ;test result
2a07 : d0fe            >            bne *       ;trap
2a09 : 68              >            pla         ;load status
                       >            cmp_flag ~fn
2a0a : c97f            >            cmp #(~fn|$30)&$ff
                       >
2a0c : d0fe            >            bne *       ;trap
2a0e : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2a0f : a9ff            >            lda #$ff
                       >
2a11 : 48              >            pha         ;use stack to load status
2a12 : a97e            >            lda #$7e     ;precharge accu
2a14 : 28              >            plp
                        
2a15 : d90002                   cmp abs1,y
                                tst_a $7e,~fzc
2a18 : 08              >            php         ;save flags
2a19 : 08              >            php
2a1a : c97e            >            cmp #$7e     ;test result
2a1c : d0fe            >            bne *       ;trap
2a1e : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2a1f : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
2a21 : d0fe            >            bne *       ;trap
2a23 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
2a24 : a900            >            lda #0
                       >
2a26 : 48              >            pha         ;use stack to load status
2a27 : a980            >            lda #$80     ;precharge accu
2a29 : 28              >            plp
                        
2a2a : c120                     cmp (ind1,x)
                                tst_a $80,fc
2a2c : 08              >            php         ;save flags
2a2d : 08              >            php
2a2e : c980            >            cmp #$80     ;test result
2a30 : d0fe            >            bne *       ;trap
2a32 : 68              >            pla         ;load status
                       >            cmp_flag fc
2a33 : c931            >            cmp #(fc|$30)&$ff
                       >
2a35 : d0fe            >            bne *       ;trap
2a37 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
2a38 : a900            >            lda #0
                       >
2a3a : 48              >            pha         ;use stack to load status
2a3b : a97f            >            lda #$7f     ;precharge accu
2a3d : 28              >            plp
                        
2a3e : c120                     cmp (ind1,x)
                                tst_a $7f,fzc
2a40 : 08              >            php         ;save flags
2a41 : 08              >            php
2a42 : c97f            >            cmp #$7f     ;test result
2a44 : d0fe            >            bne *       ;trap
2a46 : 68              >            pla         ;load status
                       >            cmp_flag fzc
2a47 : c933            >            cmp #(fzc|$30)&$ff
                       >
2a49 : d0fe            >            bne *       ;trap
2a4b : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
2a4c : a900            >            lda #0
                       >
2a4e : 48              >            pha         ;use stack to load status
2a4f : a97e            >            lda #$7e     ;precharge accu
2a51 : 28              >            plp
                        
2a52 : c120                     cmp (ind1,x)
                                tst_a $7e,fn
2a54 : 08              >            php         ;save flags
2a55 : 08              >            php
2a56 : c97e            >            cmp #$7e     ;test result
2a58 : d0fe            >            bne *       ;trap
2a5a : 68              >            pla         ;load status
                       >            cmp_flag fn
2a5b : c9b0            >            cmp #(fn|$30)&$ff
                       >
2a5d : d0fe            >            bne *       ;trap
2a5f : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
2a60 : a9ff            >            lda #$ff
                       >
2a62 : 48              >            pha         ;use stack to load status
2a63 : a980            >            lda #$80     ;precharge accu
2a65 : 28              >            plp
                        
2a66 : c120                     cmp (ind1,x)
                                tst_a $80,~fnz
2a68 : 08              >            php         ;save flags
2a69 : 08              >            php
2a6a : c980            >            cmp #$80     ;test result
2a6c : d0fe            >            bne *       ;trap
2a6e : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2a6f : c97d            >            cmp #(~fnz|$30)&$ff
                       >
2a71 : d0fe            >            bne *       ;trap
2a73 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2a74 : a9ff            >            lda #$ff
                       >
2a76 : 48              >            pha         ;use stack to load status
2a77 : a97f            >            lda #$7f     ;precharge accu
2a79 : 28              >            plp
                        
2a7a : c120                     cmp (ind1,x)
                                tst_a $7f,~fn
2a7c : 08              >            php         ;save flags
2a7d : 08              >            php
2a7e : c97f            >            cmp #$7f     ;test result
2a80 : d0fe            >            bne *       ;trap
2a82 : 68              >            pla         ;load status
                       >            cmp_flag ~fn
2a83 : c97f            >            cmp #(~fn|$30)&$ff
                       >
2a85 : d0fe            >            bne *       ;trap
2a87 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2a88 : a9ff            >            lda #$ff
                       >
2a8a : 48              >            pha         ;use stack to load status
2a8b : a97e            >            lda #$7e     ;precharge accu
2a8d : 28              >            plp
                        
2a8e : c120                     cmp (ind1,x)
                                tst_a $7e,~fzc
2a90 : 08              >            php         ;save flags
2a91 : 08              >            php
2a92 : c97e            >            cmp #$7e     ;test result
2a94 : d0fe            >            bne *       ;trap
2a96 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2a97 : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
2a99 : d0fe            >            bne *       ;trap
2a9b : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
2a9c : a900            >            lda #0
                       >
2a9e : 48              >            pha         ;use stack to load status
2a9f : a980            >            lda #$80     ;precharge accu
2aa1 : 28              >            plp
                        
2aa2 : d120                     cmp (ind1),y
                                tst_a $80,fc
2aa4 : 08              >            php         ;save flags
2aa5 : 08              >            php
2aa6 : c980            >            cmp #$80     ;test result
2aa8 : d0fe            >            bne *       ;trap
2aaa : 68              >            pla         ;load status
                       >            cmp_flag fc
2aab : c931            >            cmp #(fc|$30)&$ff
                       >
2aad : d0fe            >            bne *       ;trap
2aaf : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
2ab0 : a900            >            lda #0
                       >
2ab2 : 48              >            pha         ;use stack to load status
2ab3 : a97f            >            lda #$7f     ;precharge accu
2ab5 : 28              >            plp
                        
2ab6 : d120                     cmp (ind1),y
                                tst_a $7f,fzc
2ab8 : 08              >            php         ;save flags
2ab9 : 08              >            php
2aba : c97f            >            cmp #$7f     ;test result
2abc : d0fe            >            bne *       ;trap
2abe : 68              >            pla         ;load status
                       >            cmp_flag fzc
2abf : c933            >            cmp #(fzc|$30)&$ff
                       >
2ac1 : d0fe            >            bne *       ;trap
2ac3 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
2ac4 : a900            >            lda #0
                       >
2ac6 : 48              >            pha         ;use stack to load status
2ac7 : a97e            >            lda #$7e     ;precharge accu
2ac9 : 28              >            plp
                        
2aca : d120                     cmp (ind1),y
                                tst_a $7e,fn
2acc : 08              >            php         ;save flags
2acd : 08              >            php
2ace : c97e            >            cmp #$7e     ;test result
2ad0 : d0fe            >            bne *       ;trap
2ad2 : 68              >            pla         ;load status
                       >            cmp_flag fn
2ad3 : c9b0            >            cmp #(fn|$30)&$ff
                       >
2ad5 : d0fe            >            bne *       ;trap
2ad7 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
2ad8 : a9ff            >            lda #$ff
                       >
2ada : 48              >            pha         ;use stack to load status
2adb : a980            >            lda #$80     ;precharge accu
2add : 28              >            plp
                        
2ade : d120                     cmp (ind1),y
                                tst_a $80,~fnz
2ae0 : 08              >            php         ;save flags
2ae1 : 08              >            php
2ae2 : c980            >            cmp #$80     ;test result
2ae4 : d0fe            >            bne *       ;trap
2ae6 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2ae7 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
2ae9 : d0fe            >            bne *       ;trap
2aeb : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2aec : a9ff            >            lda #$ff
                       >
2aee : 48              >            pha         ;use stack to load status
2aef : a97f            >            lda #$7f     ;precharge accu
2af1 : 28              >            plp
                        
2af2 : d120                     cmp (ind1),y
                                tst_a $7f,~fn
2af4 : 08              >            php         ;save flags
2af5 : 08              >            php
2af6 : c97f            >            cmp #$7f     ;test result
2af8 : d0fe            >            bne *       ;trap
2afa : 68              >            pla         ;load status
                       >            cmp_flag ~fn
2afb : c97f            >            cmp #(~fn|$30)&$ff
                       >
2afd : d0fe            >            bne *       ;trap
2aff : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2b00 : a9ff            >            lda #$ff
                       >
2b02 : 48              >            pha         ;use stack to load status
2b03 : a97e            >            lda #$7e     ;precharge accu
2b05 : 28              >            plp
                        
2b06 : d120                     cmp (ind1),y
                                tst_a $7e,~fzc
2b08 : 08              >            php         ;save flags
2b09 : 08              >            php
2b0a : c97e            >            cmp #$7e     ;test result
2b0c : d0fe            >            bne *       ;trap
2b0e : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2b0f : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
2b11 : d0fe            >            bne *       ;trap
2b13 : 28              >            plp         ;restore status
                        
                        
                        ; testing shifts - ASL LSR ROL ROR all addressing modes
                        ; shifts - accumulator
2b14 : a203                     ldx #3
2b16 :                  tasl
                                set_ax zp1,0
                       >            load_flag 0
2b16 : a900            >            lda #0
                       >
2b18 : 48              >            pha         ;use stack to load status
2b19 : b50a            >            lda zp1,x    ;precharge accu
2b1b : 28              >            plp
                        
2b1c : 0a                       asl a
                                tst_ax rASL,fASL,0
2b1d : 08              >            php         ;save flags
2b1e : dd0902          >            cmp rASL,x    ;test result
2b21 : d0fe            >            bne *       ;trap
2b23 : 68              >            pla         ;load status
                       >            eor_flag 0
2b24 : 4930            >            eor #(0|$30)
                       >
2b26 : dd1902          >            cmp fASL,x    ;test flags
2b29 : d0fe            >            bne *       ;trap
                        
2b2b : ca                       dex
2b2c : 10e8                     bpl tasl
2b2e : a203                     ldx #3
2b30 :                  tasl1
                                set_ax zp1,$ff
                       >            load_flag $ff
2b30 : a9ff            >            lda #$ff
                       >
2b32 : 48              >            pha         ;use stack to load status
2b33 : b50a            >            lda zp1,x    ;precharge accu
2b35 : 28              >            plp
                        
2b36 : 0a                       asl a
                                tst_ax rASL,fASL,$ff-fnzc
2b37 : 08              >            php         ;save flags
2b38 : dd0902          >            cmp rASL,x    ;test result
2b3b : d0fe            >            bne *       ;trap
2b3d : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2b3e : 497c            >            eor #($ff-fnzc|$30)
                       >
2b40 : dd1902          >            cmp fASL,x    ;test flags
2b43 : d0fe            >            bne *       ;trap
                        
2b45 : ca                       dex
2b46 : 10e8                     bpl tasl1
                        
2b48 : a203                     ldx #3
2b4a :                  tlsr
                                set_ax zp1,0
                       >            load_flag 0
2b4a : a900            >            lda #0
                       >
2b4c : 48              >            pha         ;use stack to load status
2b4d : b50a            >            lda zp1,x    ;precharge accu
2b4f : 28              >            plp
                        
2b50 : 4a                       lsr a
                                tst_ax rLSR,fLSR,0
2b51 : 08              >            php         ;save flags
2b52 : dd1102          >            cmp rLSR,x    ;test result
2b55 : d0fe            >            bne *       ;trap
2b57 : 68              >            pla         ;load status
                       >            eor_flag 0
2b58 : 4930            >            eor #(0|$30)
                       >
2b5a : dd2102          >            cmp fLSR,x    ;test flags
2b5d : d0fe            >            bne *       ;trap
                        
2b5f : ca                       dex
2b60 : 10e8                     bpl tlsr
2b62 : a203                     ldx #3
2b64 :                  tlsr1
                                set_ax zp1,$ff
                       >            load_flag $ff
2b64 : a9ff            >            lda #$ff
                       >
2b66 : 48              >            pha         ;use stack to load status
2b67 : b50a            >            lda zp1,x    ;precharge accu
2b69 : 28              >            plp
                        
2b6a : 4a                       lsr a
                                tst_ax rLSR,fLSR,$ff-fnzc
2b6b : 08              >            php         ;save flags
2b6c : dd1102          >            cmp rLSR,x    ;test result
2b6f : d0fe            >            bne *       ;trap
2b71 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2b72 : 497c            >            eor #($ff-fnzc|$30)
                       >
2b74 : dd2102          >            cmp fLSR,x    ;test flags
2b77 : d0fe            >            bne *       ;trap
                        
2b79 : ca                       dex
2b7a : 10e8                     bpl tlsr1
                        
2b7c : a203                     ldx #3
2b7e :                  trol
                                set_ax zp1,0
                       >            load_flag 0
2b7e : a900            >            lda #0
                       >
2b80 : 48              >            pha         ;use stack to load status
2b81 : b50a            >            lda zp1,x    ;precharge accu
2b83 : 28              >            plp
                        
2b84 : 2a                       rol a
                                tst_ax rROL,fROL,0
2b85 : 08              >            php         ;save flags
2b86 : dd0902          >            cmp rROL,x    ;test result
2b89 : d0fe            >            bne *       ;trap
2b8b : 68              >            pla         ;load status
                       >            eor_flag 0
2b8c : 4930            >            eor #(0|$30)
                       >
2b8e : dd1902          >            cmp fROL,x    ;test flags
2b91 : d0fe            >            bne *       ;trap
                        
2b93 : ca                       dex
2b94 : 10e8                     bpl trol
2b96 : a203                     ldx #3
2b98 :                  trol1
                                set_ax zp1,$ff-fc
                       >            load_flag $ff-fc
2b98 : a9fe            >            lda #$ff-fc
                       >
2b9a : 48              >            pha         ;use stack to load status
2b9b : b50a            >            lda zp1,x    ;precharge accu
2b9d : 28              >            plp
                        
2b9e : 2a                       rol a
                                tst_ax rROL,fROL,$ff-fnzc
2b9f : 08              >            php         ;save flags
2ba0 : dd0902          >            cmp rROL,x    ;test result
2ba3 : d0fe            >            bne *       ;trap
2ba5 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2ba6 : 497c            >            eor #($ff-fnzc|$30)
                       >
2ba8 : dd1902          >            cmp fROL,x    ;test flags
2bab : d0fe            >            bne *       ;trap
                        
2bad : ca                       dex
2bae : 10e8                     bpl trol1
                        
2bb0 : a203                     ldx #3
2bb2 :                  trolc
                                set_ax zp1,fc
                       >            load_flag fc
2bb2 : a901            >            lda #fc
                       >
2bb4 : 48              >            pha         ;use stack to load status
2bb5 : b50a            >            lda zp1,x    ;precharge accu
2bb7 : 28              >            plp
                        
2bb8 : 2a                       rol a
                                tst_ax rROLc,fROLc,0
2bb9 : 08              >            php         ;save flags
2bba : dd0d02          >            cmp rROLc,x    ;test result
2bbd : d0fe            >            bne *       ;trap
2bbf : 68              >            pla         ;load status
                       >            eor_flag 0
2bc0 : 4930            >            eor #(0|$30)
                       >
2bc2 : dd1d02          >            cmp fROLc,x    ;test flags
2bc5 : d0fe            >            bne *       ;trap
                        
2bc7 : ca                       dex
2bc8 : 10e8                     bpl trolc
2bca : a203                     ldx #3
2bcc :                  trolc1
                                set_ax zp1,$ff
                       >            load_flag $ff
2bcc : a9ff            >            lda #$ff
                       >
2bce : 48              >            pha         ;use stack to load status
2bcf : b50a            >            lda zp1,x    ;precharge accu
2bd1 : 28              >            plp
                        
2bd2 : 2a                       rol a
                                tst_ax rROLc,fROLc,$ff-fnzc
2bd3 : 08              >            php         ;save flags
2bd4 : dd0d02          >            cmp rROLc,x    ;test result
2bd7 : d0fe            >            bne *       ;trap
2bd9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2bda : 497c            >            eor #($ff-fnzc|$30)
                       >
2bdc : dd1d02          >            cmp fROLc,x    ;test flags
2bdf : d0fe            >            bne *       ;trap
                        
2be1 : ca                       dex
2be2 : 10e8                     bpl trolc1
                        
2be4 : a203                     ldx #3
2be6 :                  tror
                                set_ax zp1,0
                       >            load_flag 0
2be6 : a900            >            lda #0
                       >
2be8 : 48              >            pha         ;use stack to load status
2be9 : b50a            >            lda zp1,x    ;precharge accu
2beb : 28              >            plp
                        
2bec : 6a                       ror a
                                tst_ax rROR,fROR,0
2bed : 08              >            php         ;save flags
2bee : dd1102          >            cmp rROR,x    ;test result
2bf1 : d0fe            >            bne *       ;trap
2bf3 : 68              >            pla         ;load status
                       >            eor_flag 0
2bf4 : 4930            >            eor #(0|$30)
                       >
2bf6 : dd2102          >            cmp fROR,x    ;test flags
2bf9 : d0fe            >            bne *       ;trap
                        
2bfb : ca                       dex
2bfc : 10e8                     bpl tror
2bfe : a203                     ldx #3
2c00 :                  tror1
                                set_ax zp1,$ff-fc
                       >            load_flag $ff-fc
2c00 : a9fe            >            lda #$ff-fc
                       >
2c02 : 48              >            pha         ;use stack to load status
2c03 : b50a            >            lda zp1,x    ;precharge accu
2c05 : 28              >            plp
                        
2c06 : 6a                       ror a
                                tst_ax rROR,fROR,$ff-fnzc
2c07 : 08              >            php         ;save flags
2c08 : dd1102          >            cmp rROR,x    ;test result
2c0b : d0fe            >            bne *       ;trap
2c0d : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2c0e : 497c            >            eor #($ff-fnzc|$30)
                       >
2c10 : dd2102          >            cmp fROR,x    ;test flags
2c13 : d0fe            >            bne *       ;trap
                        
2c15 : ca                       dex
2c16 : 10e8                     bpl tror1
                        
2c18 : a203                     ldx #3
2c1a :                  trorc
                                set_ax zp1,fc
                       >            load_flag fc
2c1a : a901            >            lda #fc
                       >
2c1c : 48              >            pha         ;use stack to load status
2c1d : b50a            >            lda zp1,x    ;precharge accu
2c1f : 28              >            plp
                        
2c20 : 6a                       ror a
                                tst_ax rRORc,fRORc,0
2c21 : 08              >            php         ;save flags
2c22 : dd1502          >            cmp rRORc,x    ;test result
2c25 : d0fe            >            bne *       ;trap
2c27 : 68              >            pla         ;load status
                       >            eor_flag 0
2c28 : 4930            >            eor #(0|$30)
                       >
2c2a : dd2502          >            cmp fRORc,x    ;test flags
2c2d : d0fe            >            bne *       ;trap
                        
2c2f : ca                       dex
2c30 : 10e8                     bpl trorc
2c32 : a203                     ldx #3
2c34 :                  trorc1
                                set_ax zp1,$ff
                       >            load_flag $ff
2c34 : a9ff            >            lda #$ff
                       >
2c36 : 48              >            pha         ;use stack to load status
2c37 : b50a            >            lda zp1,x    ;precharge accu
2c39 : 28              >            plp
                        
2c3a : 6a                       ror a
                                tst_ax rRORc,fRORc,$ff-fnzc
2c3b : 08              >            php         ;save flags
2c3c : dd1502          >            cmp rRORc,x    ;test result
2c3f : d0fe            >            bne *       ;trap
2c41 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2c42 : 497c            >            eor #($ff-fnzc|$30)
                       >
2c44 : dd2502          >            cmp fRORc,x    ;test flags
2c47 : d0fe            >            bne *       ;trap
                        
2c49 : ca                       dex
2c4a : 10e8                     bpl trorc1
                        
                        ; shifts - zeropage
2c4c : a203                     ldx #3
2c4e :                  tasl2
                                set_z zp1,0
                       >            load_flag 0
2c4e : a900            >            lda #0
                       >
2c50 : 48              >            pha         ;use stack to load status
2c51 : b50a            >            lda zp1,x    ;load to zeropage
2c53 : 850f            >            sta zpt
2c55 : 28              >            plp
                        
2c56 : 060f                     asl zpt
                                tst_z rASL,fASL,0
2c58 : 08              >            php         ;save flags
2c59 : a50f            >            lda zpt
2c5b : dd0902          >            cmp rASL,x    ;test result
2c5e : d0fe            >            bne *       ;trap
2c60 : 68              >            pla         ;load status
                       >            eor_flag 0
2c61 : 4930            >            eor #(0|$30)
                       >
2c63 : dd1902          >            cmp fASL,x    ;test flags
2c66 : d0fe            >            bne *       ;trap
                        
2c68 : ca                       dex
2c69 : 10e3                     bpl tasl2
2c6b : a203                     ldx #3
2c6d :                  tasl3
                                set_z zp1,$ff
                       >            load_flag $ff
2c6d : a9ff            >            lda #$ff
                       >
2c6f : 48              >            pha         ;use stack to load status
2c70 : b50a            >            lda zp1,x    ;load to zeropage
2c72 : 850f            >            sta zpt
2c74 : 28              >            plp
                        
2c75 : 060f                     asl zpt
                                tst_z rASL,fASL,$ff-fnzc
2c77 : 08              >            php         ;save flags
2c78 : a50f            >            lda zpt
2c7a : dd0902          >            cmp rASL,x    ;test result
2c7d : d0fe            >            bne *       ;trap
2c7f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2c80 : 497c            >            eor #($ff-fnzc|$30)
                       >
2c82 : dd1902          >            cmp fASL,x    ;test flags
2c85 : d0fe            >            bne *       ;trap
                        
2c87 : ca                       dex
2c88 : 10e3                     bpl tasl3
                        
2c8a : a203                     ldx #3
2c8c :                  tlsr2
                                set_z zp1,0
                       >            load_flag 0
2c8c : a900            >            lda #0
                       >
2c8e : 48              >            pha         ;use stack to load status
2c8f : b50a            >            lda zp1,x    ;load to zeropage
2c91 : 850f            >            sta zpt
2c93 : 28              >            plp
                        
2c94 : 460f                     lsr zpt
                                tst_z rLSR,fLSR,0
2c96 : 08              >            php         ;save flags
2c97 : a50f            >            lda zpt
2c99 : dd1102          >            cmp rLSR,x    ;test result
2c9c : d0fe            >            bne *       ;trap
2c9e : 68              >            pla         ;load status
                       >            eor_flag 0
2c9f : 4930            >            eor #(0|$30)
                       >
2ca1 : dd2102          >            cmp fLSR,x    ;test flags
2ca4 : d0fe            >            bne *       ;trap
                        
2ca6 : ca                       dex
2ca7 : 10e3                     bpl tlsr2
2ca9 : a203                     ldx #3
2cab :                  tlsr3
                                set_z zp1,$ff
                       >            load_flag $ff
2cab : a9ff            >            lda #$ff
                       >
2cad : 48              >            pha         ;use stack to load status
2cae : b50a            >            lda zp1,x    ;load to zeropage
2cb0 : 850f            >            sta zpt
2cb2 : 28              >            plp
                        
2cb3 : 460f                     lsr zpt
                                tst_z rLSR,fLSR,$ff-fnzc
2cb5 : 08              >            php         ;save flags
2cb6 : a50f            >            lda zpt
2cb8 : dd1102          >            cmp rLSR,x    ;test result
2cbb : d0fe            >            bne *       ;trap
2cbd : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2cbe : 497c            >            eor #($ff-fnzc|$30)
                       >
2cc0 : dd2102          >            cmp fLSR,x    ;test flags
2cc3 : d0fe            >            bne *       ;trap
                        
2cc5 : ca                       dex
2cc6 : 10e3                     bpl tlsr3
                        
2cc8 : a203                     ldx #3
2cca :                  trol2
                                set_z zp1,0
                       >            load_flag 0
2cca : a900            >            lda #0
                       >
2ccc : 48              >            pha         ;use stack to load status
2ccd : b50a            >            lda zp1,x    ;load to zeropage
2ccf : 850f            >            sta zpt
2cd1 : 28              >            plp
                        
2cd2 : 260f                     rol zpt
                                tst_z rROL,fROL,0
2cd4 : 08              >            php         ;save flags
2cd5 : a50f            >            lda zpt
2cd7 : dd0902          >            cmp rROL,x    ;test result
2cda : d0fe            >            bne *       ;trap
2cdc : 68              >            pla         ;load status
                       >            eor_flag 0
2cdd : 4930            >            eor #(0|$30)
                       >
2cdf : dd1902          >            cmp fROL,x    ;test flags
2ce2 : d0fe            >            bne *       ;trap
                        
2ce4 : ca                       dex
2ce5 : 10e3                     bpl trol2
2ce7 : a203                     ldx #3
2ce9 :                  trol3
                                set_z zp1,$ff-fc
                       >            load_flag $ff-fc
2ce9 : a9fe            >            lda #$ff-fc
                       >
2ceb : 48              >            pha         ;use stack to load status
2cec : b50a            >            lda zp1,x    ;load to zeropage
2cee : 850f            >            sta zpt
2cf0 : 28              >            plp
                        
2cf1 : 260f                     rol zpt
                                tst_z rROL,fROL,$ff-fnzc
2cf3 : 08              >            php         ;save flags
2cf4 : a50f            >            lda zpt
2cf6 : dd0902          >            cmp rROL,x    ;test result
2cf9 : d0fe            >            bne *       ;trap
2cfb : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2cfc : 497c            >            eor #($ff-fnzc|$30)
                       >
2cfe : dd1902          >            cmp fROL,x    ;test flags
2d01 : d0fe            >            bne *       ;trap
                        
2d03 : ca                       dex
2d04 : 10e3                     bpl trol3
                        
2d06 : a203                     ldx #3
2d08 :                  trolc2
                                set_z zp1,fc
                       >            load_flag fc
2d08 : a901            >            lda #fc
                       >
2d0a : 48              >            pha         ;use stack to load status
2d0b : b50a            >            lda zp1,x    ;load to zeropage
2d0d : 850f            >            sta zpt
2d0f : 28              >            plp
                        
2d10 : 260f                     rol zpt
                                tst_z rROLc,fROLc,0
2d12 : 08              >            php         ;save flags
2d13 : a50f            >            lda zpt
2d15 : dd0d02          >            cmp rROLc,x    ;test result
2d18 : d0fe            >            bne *       ;trap
2d1a : 68              >            pla         ;load status
                       >            eor_flag 0
2d1b : 4930            >            eor #(0|$30)
                       >
2d1d : dd1d02          >            cmp fROLc,x    ;test flags
2d20 : d0fe            >            bne *       ;trap
                        
2d22 : ca                       dex
2d23 : 10e3                     bpl trolc2
2d25 : a203                     ldx #3
2d27 :                  trolc3
                                set_z zp1,$ff
                       >            load_flag $ff
2d27 : a9ff            >            lda #$ff
                       >
2d29 : 48              >            pha         ;use stack to load status
2d2a : b50a            >            lda zp1,x    ;load to zeropage
2d2c : 850f            >            sta zpt
2d2e : 28              >            plp
                        
2d2f : 260f                     rol zpt
                                tst_z rROLc,fROLc,$ff-fnzc
2d31 : 08              >            php         ;save flags
2d32 : a50f            >            lda zpt
2d34 : dd0d02          >            cmp rROLc,x    ;test result
2d37 : d0fe            >            bne *       ;trap
2d39 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2d3a : 497c            >            eor #($ff-fnzc|$30)
                       >
2d3c : dd1d02          >            cmp fROLc,x    ;test flags
2d3f : d0fe            >            bne *       ;trap
                        
2d41 : ca                       dex
2d42 : 10e3                     bpl trolc3
                        
2d44 : a203                     ldx #3
2d46 :                  tror2
                                set_z zp1,0
                       >            load_flag 0
2d46 : a900            >            lda #0
                       >
2d48 : 48              >            pha         ;use stack to load status
2d49 : b50a            >            lda zp1,x    ;load to zeropage
2d4b : 850f            >            sta zpt
2d4d : 28              >            plp
                        
2d4e : 660f                     ror zpt
                                tst_z rROR,fROR,0
2d50 : 08              >            php         ;save flags
2d51 : a50f            >            lda zpt
2d53 : dd1102          >            cmp rROR,x    ;test result
2d56 : d0fe            >            bne *       ;trap
2d58 : 68              >            pla         ;load status
                       >            eor_flag 0
2d59 : 4930            >            eor #(0|$30)
                       >
2d5b : dd2102          >            cmp fROR,x    ;test flags
2d5e : d0fe            >            bne *       ;trap
                        
2d60 : ca                       dex
2d61 : 10e3                     bpl tror2
2d63 : a203                     ldx #3
2d65 :                  tror3
                                set_z zp1,$ff-fc
                       >            load_flag $ff-fc
2d65 : a9fe            >            lda #$ff-fc
                       >
2d67 : 48              >            pha         ;use stack to load status
2d68 : b50a            >            lda zp1,x    ;load to zeropage
2d6a : 850f            >            sta zpt
2d6c : 28              >            plp
                        
2d6d : 660f                     ror zpt
                                tst_z rROR,fROR,$ff-fnzc
2d6f : 08              >            php         ;save flags
2d70 : a50f            >            lda zpt
2d72 : dd1102          >            cmp rROR,x    ;test result
2d75 : d0fe            >            bne *       ;trap
2d77 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2d78 : 497c            >            eor #($ff-fnzc|$30)
                       >
2d7a : dd2102          >            cmp fROR,x    ;test flags
2d7d : d0fe            >            bne *       ;trap
                        
2d7f : ca                       dex
2d80 : 10e3                     bpl tror3
                        
2d82 : a203                     ldx #3
2d84 :                  trorc2
                                set_z zp1,fc
                       >            load_flag fc
2d84 : a901            >            lda #fc
                       >
2d86 : 48              >            pha         ;use stack to load status
2d87 : b50a            >            lda zp1,x    ;load to zeropage
2d89 : 850f            >            sta zpt
2d8b : 28              >            plp
                        
2d8c : 660f                     ror zpt
                                tst_z rRORc,fRORc,0
2d8e : 08              >            php         ;save flags
2d8f : a50f            >            lda zpt
2d91 : dd1502          >            cmp rRORc,x    ;test result
2d94 : d0fe            >            bne *       ;trap
2d96 : 68              >            pla         ;load status
                       >            eor_flag 0
2d97 : 4930            >            eor #(0|$30)
                       >
2d99 : dd2502          >            cmp fRORc,x    ;test flags
2d9c : d0fe            >            bne *       ;trap
                        
2d9e : ca                       dex
2d9f : 10e3                     bpl trorc2
2da1 : a203                     ldx #3
2da3 :                  trorc3
                                set_z zp1,$ff
                       >            load_flag $ff
2da3 : a9ff            >            lda #$ff
                       >
2da5 : 48              >            pha         ;use stack to load status
2da6 : b50a            >            lda zp1,x    ;load to zeropage
2da8 : 850f            >            sta zpt
2daa : 28              >            plp
                        
2dab : 660f                     ror zpt
                                tst_z rRORc,fRORc,$ff-fnzc
2dad : 08              >            php         ;save flags
2dae : a50f            >            lda zpt
2db0 : dd1502          >            cmp rRORc,x    ;test result
2db3 : d0fe            >            bne *       ;trap
2db5 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2db6 : 497c            >            eor #($ff-fnzc|$30)
                       >
2db8 : dd2502          >            cmp fRORc,x    ;test flags
2dbb : d0fe            >            bne *       ;trap
                        
2dbd : ca                       dex
2dbe : 10e3                     bpl trorc3
                        
                        ; shifts - absolute
2dc0 : a203                     ldx #3
2dc2 :                  tasl4
                                set_abs zp1,0
                       >            load_flag 0
2dc2 : a900            >            lda #0
                       >
2dc4 : 48              >            pha         ;use stack to load status
2dc5 : b50a            >            lda zp1,x    ;load to memory
2dc7 : 8d3302          >            sta abst
2dca : 28              >            plp
                        
2dcb : 0e3302                   asl abst
                                tst_abs rASL,fASL,0
2dce : 08              >            php         ;save flags
2dcf : ad3302          >            lda abst
2dd2 : dd0902          >            cmp rASL,x    ;test result
2dd5 : d0fe            >            bne *       ;trap
2dd7 : 68              >            pla         ;load status
                       >            eor_flag 0
2dd8 : 4930            >            eor #(0|$30)
                       >
2dda : dd1902          >            cmp fASL,x    ;test flags
2ddd : d0fe            >            bne *       ;trap
                        
2ddf : ca                       dex
2de0 : 10e0                     bpl tasl4
2de2 : a203                     ldx #3
2de4 :                  tasl5
                                set_abs zp1,$ff
                       >            load_flag $ff
2de4 : a9ff            >            lda #$ff
                       >
2de6 : 48              >            pha         ;use stack to load status
2de7 : b50a            >            lda zp1,x    ;load to memory
2de9 : 8d3302          >            sta abst
2dec : 28              >            plp
                        
2ded : 0e3302                   asl abst
                                tst_abs rASL,fASL,$ff-fnzc
2df0 : 08              >            php         ;save flags
2df1 : ad3302          >            lda abst
2df4 : dd0902          >            cmp rASL,x    ;test result
2df7 : d0fe            >            bne *       ;trap
2df9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2dfa : 497c            >            eor #($ff-fnzc|$30)
                       >
2dfc : dd1902          >            cmp fASL,x    ;test flags
2dff : d0fe            >            bne *       ;trap
                        
2e01 : ca                       dex
2e02 : 10e0                     bpl tasl5
                        
2e04 : a203                     ldx #3
2e06 :                  tlsr4
                                set_abs zp1,0
                       >            load_flag 0
2e06 : a900            >            lda #0
                       >
2e08 : 48              >            pha         ;use stack to load status
2e09 : b50a            >            lda zp1,x    ;load to memory
2e0b : 8d3302          >            sta abst
2e0e : 28              >            plp
                        
2e0f : 4e3302                   lsr abst
                                tst_abs rLSR,fLSR,0
2e12 : 08              >            php         ;save flags
2e13 : ad3302          >            lda abst
2e16 : dd1102          >            cmp rLSR,x    ;test result
2e19 : d0fe            >            bne *       ;trap
2e1b : 68              >            pla         ;load status
                       >            eor_flag 0
2e1c : 4930            >            eor #(0|$30)
                       >
2e1e : dd2102          >            cmp fLSR,x    ;test flags
2e21 : d0fe            >            bne *       ;trap
                        
2e23 : ca                       dex
2e24 : 10e0                     bpl tlsr4
2e26 : a203                     ldx #3
2e28 :                  tlsr5
                                set_abs zp1,$ff
                       >            load_flag $ff
2e28 : a9ff            >            lda #$ff
                       >
2e2a : 48              >            pha         ;use stack to load status
2e2b : b50a            >            lda zp1,x    ;load to memory
2e2d : 8d3302          >            sta abst
2e30 : 28              >            plp
                        
2e31 : 4e3302                   lsr abst
                                tst_abs rLSR,fLSR,$ff-fnzc
2e34 : 08              >            php         ;save flags
2e35 : ad3302          >            lda abst
2e38 : dd1102          >            cmp rLSR,x    ;test result
2e3b : d0fe            >            bne *       ;trap
2e3d : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2e3e : 497c            >            eor #($ff-fnzc|$30)
                       >
2e40 : dd2102          >            cmp fLSR,x    ;test flags
2e43 : d0fe            >            bne *       ;trap
                        
2e45 : ca                       dex
2e46 : 10e0                     bpl tlsr5
                        
2e48 : a203                     ldx #3
2e4a :                  trol4
                                set_abs zp1,0
                       >            load_flag 0
2e4a : a900            >            lda #0
                       >
2e4c : 48              >            pha         ;use stack to load status
2e4d : b50a            >            lda zp1,x    ;load to memory
2e4f : 8d3302          >            sta abst
2e52 : 28              >            plp
                        
2e53 : 2e3302                   rol abst
                                tst_abs rROL,fROL,0
2e56 : 08              >            php         ;save flags
2e57 : ad3302          >            lda abst
2e5a : dd0902          >            cmp rROL,x    ;test result
2e5d : d0fe            >            bne *       ;trap
2e5f : 68              >            pla         ;load status
                       >            eor_flag 0
2e60 : 4930            >            eor #(0|$30)
                       >
2e62 : dd1902          >            cmp fROL,x    ;test flags
2e65 : d0fe            >            bne *       ;trap
                        
2e67 : ca                       dex
2e68 : 10e0                     bpl trol4
2e6a : a203                     ldx #3
2e6c :                  trol5
                                set_abs zp1,$ff-fc
                       >            load_flag $ff-fc
2e6c : a9fe            >            lda #$ff-fc
                       >
2e6e : 48              >            pha         ;use stack to load status
2e6f : b50a            >            lda zp1,x    ;load to memory
2e71 : 8d3302          >            sta abst
2e74 : 28              >            plp
                        
2e75 : 2e3302                   rol abst
                                tst_abs rROL,fROL,$ff-fnzc
2e78 : 08              >            php         ;save flags
2e79 : ad3302          >            lda abst
2e7c : dd0902          >            cmp rROL,x    ;test result
2e7f : d0fe            >            bne *       ;trap
2e81 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2e82 : 497c            >            eor #($ff-fnzc|$30)
                       >
2e84 : dd1902          >            cmp fROL,x    ;test flags
2e87 : d0fe            >            bne *       ;trap
                        
2e89 : ca                       dex
2e8a : 10e0                     bpl trol5
                        
2e8c : a203                     ldx #3
2e8e :                  trolc4
                                set_abs zp1,fc
                       >            load_flag fc
2e8e : a901            >            lda #fc
                       >
2e90 : 48              >            pha         ;use stack to load status
2e91 : b50a            >            lda zp1,x    ;load to memory
2e93 : 8d3302          >            sta abst
2e96 : 28              >            plp
                        
2e97 : 2e3302                   rol abst
                                tst_abs rROLc,fROLc,0
2e9a : 08              >            php         ;save flags
2e9b : ad3302          >            lda abst
2e9e : dd0d02          >            cmp rROLc,x    ;test result
2ea1 : d0fe            >            bne *       ;trap
2ea3 : 68              >            pla         ;load status
                       >            eor_flag 0
2ea4 : 4930            >            eor #(0|$30)
                       >
2ea6 : dd1d02          >            cmp fROLc,x    ;test flags
2ea9 : d0fe            >            bne *       ;trap
                        
2eab : ca                       dex
2eac : 10e0                     bpl trolc4
2eae : a203                     ldx #3
2eb0 :                  trolc5
                                set_abs zp1,$ff
                       >            load_flag $ff
2eb0 : a9ff            >            lda #$ff
                       >
2eb2 : 48              >            pha         ;use stack to load status
2eb3 : b50a            >            lda zp1,x    ;load to memory
2eb5 : 8d3302          >            sta abst
2eb8 : 28              >            plp
                        
2eb9 : 2e3302                   rol abst
                                tst_abs rROLc,fROLc,$ff-fnzc
2ebc : 08              >            php         ;save flags
2ebd : ad3302          >            lda abst
2ec0 : dd0d02          >            cmp rROLc,x    ;test result
2ec3 : d0fe            >            bne *       ;trap
2ec5 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2ec6 : 497c            >            eor #($ff-fnzc|$30)
                       >
2ec8 : dd1d02          >            cmp fROLc,x    ;test flags
2ecb : d0fe            >            bne *       ;trap
                        
2ecd : ca                       dex
2ece : 10e0                     bpl trolc5
                        
2ed0 : a203                     ldx #3
2ed2 :                  tror4
                                set_abs zp1,0
                       >            load_flag 0
2ed2 : a900            >            lda #0
                       >
2ed4 : 48              >            pha         ;use stack to load status
2ed5 : b50a            >            lda zp1,x    ;load to memory
2ed7 : 8d3302          >            sta abst
2eda : 28              >            plp
                        
2edb : 6e3302                   ror abst
                                tst_abs rROR,fROR,0
2ede : 08              >            php         ;save flags
2edf : ad3302          >            lda abst
2ee2 : dd1102          >            cmp rROR,x    ;test result
2ee5 : d0fe            >            bne *       ;trap
2ee7 : 68              >            pla         ;load status
                       >            eor_flag 0
2ee8 : 4930            >            eor #(0|$30)
                       >
2eea : dd2102          >            cmp fROR,x    ;test flags
2eed : d0fe            >            bne *       ;trap
                        
2eef : ca                       dex
2ef0 : 10e0                     bpl tror4
2ef2 : a203                     ldx #3
2ef4 :                  tror5
                                set_abs zp1,$ff-fc
                       >            load_flag $ff-fc
2ef4 : a9fe            >            lda #$ff-fc
                       >
2ef6 : 48              >            pha         ;use stack to load status
2ef7 : b50a            >            lda zp1,x    ;load to memory
2ef9 : 8d3302          >            sta abst
2efc : 28              >            plp
                        
2efd : 6e3302                   ror abst
                                tst_abs rROR,fROR,$ff-fnzc
2f00 : 08              >            php         ;save flags
2f01 : ad3302          >            lda abst
2f04 : dd1102          >            cmp rROR,x    ;test result
2f07 : d0fe            >            bne *       ;trap
2f09 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2f0a : 497c            >            eor #($ff-fnzc|$30)
                       >
2f0c : dd2102          >            cmp fROR,x    ;test flags
2f0f : d0fe            >            bne *       ;trap
                        
2f11 : ca                       dex
2f12 : 10e0                     bpl tror5
                        
2f14 : a203                     ldx #3
2f16 :                  trorc4
                                set_abs zp1,fc
                       >            load_flag fc
2f16 : a901            >            lda #fc
                       >
2f18 : 48              >            pha         ;use stack to load status
2f19 : b50a            >            lda zp1,x    ;load to memory
2f1b : 8d3302          >            sta abst
2f1e : 28              >            plp
                        
2f1f : 6e3302                   ror abst
                                tst_abs rRORc,fRORc,0
2f22 : 08              >            php         ;save flags
2f23 : ad3302          >            lda abst
2f26 : dd1502          >            cmp rRORc,x    ;test result
2f29 : d0fe            >            bne *       ;trap
2f2b : 68              >            pla         ;load status
                       >            eor_flag 0
2f2c : 4930            >            eor #(0|$30)
                       >
2f2e : dd2502          >            cmp fRORc,x    ;test flags
2f31 : d0fe            >            bne *       ;trap
                        
2f33 : ca                       dex
2f34 : 10e0                     bpl trorc4
2f36 : a203                     ldx #3
2f38 :                  trorc5
                                set_abs zp1,$ff
                       >            load_flag $ff
2f38 : a9ff            >            lda #$ff
                       >
2f3a : 48              >            pha         ;use stack to load status
2f3b : b50a            >            lda zp1,x    ;load to memory
2f3d : 8d3302          >            sta abst
2f40 : 28              >            plp
                        
2f41 : 6e3302                   ror abst
                                tst_abs rRORc,fRORc,$ff-fnzc
2f44 : 08              >            php         ;save flags
2f45 : ad3302          >            lda abst
2f48 : dd1502          >            cmp rRORc,x    ;test result
2f4b : d0fe            >            bne *       ;trap
2f4d : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2f4e : 497c            >            eor #($ff-fnzc|$30)
                       >
2f50 : dd2502          >            cmp fRORc,x    ;test flags
2f53 : d0fe            >            bne *       ;trap
                        
2f55 : ca                       dex
2f56 : 10e0                     bpl trorc5
                        
                        ; shifts - zp indexed
2f58 : a203                     ldx #3
2f5a :                  tasl6
                                set_zx zp1,0
                       >            load_flag 0
2f5a : a900            >            lda #0
                       >
2f5c : 48              >            pha         ;use stack to load status
2f5d : b50a            >            lda zp1,x    ;load to zeropage
2f5f : 950f            >            sta zpt,x
2f61 : 28              >            plp
                        
2f62 : 160f                     asl zpt,x
                                tst_zx rASL,fASL,0
2f64 : 08              >            php         ;save flags
2f65 : b50f            >            lda zpt,x
2f67 : dd0902          >            cmp rASL,x    ;test result
2f6a : d0fe            >            bne *       ;trap
2f6c : 68              >            pla         ;load status
                       >            eor_flag 0
2f6d : 4930            >            eor #(0|$30)
                       >
2f6f : dd1902          >            cmp fASL,x    ;test flags
2f72 : d0fe            >            bne *       ;trap
                        
2f74 : ca                       dex
2f75 : 10e3                     bpl tasl6
2f77 : a203                     ldx #3
2f79 :                  tasl7
                                set_zx zp1,$ff
                       >            load_flag $ff
2f79 : a9ff            >            lda #$ff
                       >
2f7b : 48              >            pha         ;use stack to load status
2f7c : b50a            >            lda zp1,x    ;load to zeropage
2f7e : 950f            >            sta zpt,x
2f80 : 28              >            plp
                        
2f81 : 160f                     asl zpt,x
                                tst_zx rASL,fASL,$ff-fnzc
2f83 : 08              >            php         ;save flags
2f84 : b50f            >            lda zpt,x
2f86 : dd0902          >            cmp rASL,x    ;test result
2f89 : d0fe            >            bne *       ;trap
2f8b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2f8c : 497c            >            eor #($ff-fnzc|$30)
                       >
2f8e : dd1902          >            cmp fASL,x    ;test flags
2f91 : d0fe            >            bne *       ;trap
                        
2f93 : ca                       dex
2f94 : 10e3                     bpl tasl7
                        
2f96 : a203                     ldx #3
2f98 :                  tlsr6
                                set_zx zp1,0
                       >            load_flag 0
2f98 : a900            >            lda #0
                       >
2f9a : 48              >            pha         ;use stack to load status
2f9b : b50a            >            lda zp1,x    ;load to zeropage
2f9d : 950f            >            sta zpt,x
2f9f : 28              >            plp
                        
2fa0 : 560f                     lsr zpt,x
                                tst_zx rLSR,fLSR,0
2fa2 : 08              >            php         ;save flags
2fa3 : b50f            >            lda zpt,x
2fa5 : dd1102          >            cmp rLSR,x    ;test result
2fa8 : d0fe            >            bne *       ;trap
2faa : 68              >            pla         ;load status
                       >            eor_flag 0
2fab : 4930            >            eor #(0|$30)
                       >
2fad : dd2102          >            cmp fLSR,x    ;test flags
2fb0 : d0fe            >            bne *       ;trap
                        
2fb2 : ca                       dex
2fb3 : 10e3                     bpl tlsr6
2fb5 : a203                     ldx #3
2fb7 :                  tlsr7
                                set_zx zp1,$ff
                       >            load_flag $ff
2fb7 : a9ff            >            lda #$ff
                       >
2fb9 : 48              >            pha         ;use stack to load status
2fba : b50a            >            lda zp1,x    ;load to zeropage
2fbc : 950f            >            sta zpt,x
2fbe : 28              >            plp
                        
2fbf : 560f                     lsr zpt,x
                                tst_zx rLSR,fLSR,$ff-fnzc
2fc1 : 08              >            php         ;save flags
2fc2 : b50f            >            lda zpt,x
2fc4 : dd1102          >            cmp rLSR,x    ;test result
2fc7 : d0fe            >            bne *       ;trap
2fc9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2fca : 497c            >            eor #($ff-fnzc|$30)
                       >
2fcc : dd2102          >            cmp fLSR,x    ;test flags
2fcf : d0fe            >            bne *       ;trap
                        
2fd1 : ca                       dex
2fd2 : 10e3                     bpl tlsr7
                        
2fd4 : a203                     ldx #3
2fd6 :                  trol6
                                set_zx zp1,0
                       >            load_flag 0
2fd6 : a900            >            lda #0
                       >
2fd8 : 48              >            pha         ;use stack to load status
2fd9 : b50a            >            lda zp1,x    ;load to zeropage
2fdb : 950f            >            sta zpt,x
2fdd : 28              >            plp
                        
2fde : 360f                     rol zpt,x
                                tst_zx rROL,fROL,0
2fe0 : 08              >            php         ;save flags
2fe1 : b50f            >            lda zpt,x
2fe3 : dd0902          >            cmp rROL,x    ;test result
2fe6 : d0fe            >            bne *       ;trap
2fe8 : 68              >            pla         ;load status
                       >            eor_flag 0
2fe9 : 4930            >            eor #(0|$30)
                       >
2feb : dd1902          >            cmp fROL,x    ;test flags
2fee : d0fe            >            bne *       ;trap
                        
2ff0 : ca                       dex
2ff1 : 10e3                     bpl trol6
2ff3 : a203                     ldx #3
2ff5 :                  trol7
                                set_zx zp1,$ff-fc
                       >            load_flag $ff-fc
2ff5 : a9fe            >            lda #$ff-fc
                       >
2ff7 : 48              >            pha         ;use stack to load status
2ff8 : b50a            >            lda zp1,x    ;load to zeropage
2ffa : 950f            >            sta zpt,x
2ffc : 28              >            plp
                        
2ffd : 360f                     rol zpt,x
                                tst_zx rROL,fROL,$ff-fnzc
2fff : 08              >            php         ;save flags
3000 : b50f            >            lda zpt,x
3002 : dd0902          >            cmp rROL,x    ;test result
3005 : d0fe            >            bne *       ;trap
3007 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3008 : 497c            >            eor #($ff-fnzc|$30)
                       >
300a : dd1902          >            cmp fROL,x    ;test flags
300d : d0fe            >            bne *       ;trap
                        
300f : ca                       dex
3010 : 10e3                     bpl trol7
                        
3012 : a203                     ldx #3
3014 :                  trolc6
                                set_zx zp1,fc
                       >            load_flag fc
3014 : a901            >            lda #fc
                       >
3016 : 48              >            pha         ;use stack to load status
3017 : b50a            >            lda zp1,x    ;load to zeropage
3019 : 950f            >            sta zpt,x
301b : 28              >            plp
                        
301c : 360f                     rol zpt,x
                                tst_zx rROLc,fROLc,0
301e : 08              >            php         ;save flags
301f : b50f            >            lda zpt,x
3021 : dd0d02          >            cmp rROLc,x    ;test result
3024 : d0fe            >            bne *       ;trap
3026 : 68              >            pla         ;load status
                       >            eor_flag 0
3027 : 4930            >            eor #(0|$30)
                       >
3029 : dd1d02          >            cmp fROLc,x    ;test flags
302c : d0fe            >            bne *       ;trap
                        
302e : ca                       dex
302f : 10e3                     bpl trolc6
3031 : a203                     ldx #3
3033 :                  trolc7
                                set_zx zp1,$ff
                       >            load_flag $ff
3033 : a9ff            >            lda #$ff
                       >
3035 : 48              >            pha         ;use stack to load status
3036 : b50a            >            lda zp1,x    ;load to zeropage
3038 : 950f            >            sta zpt,x
303a : 28              >            plp
                        
303b : 360f                     rol zpt,x
                                tst_zx rROLc,fROLc,$ff-fnzc
303d : 08              >            php         ;save flags
303e : b50f            >            lda zpt,x
3040 : dd0d02          >            cmp rROLc,x    ;test result
3043 : d0fe            >            bne *       ;trap
3045 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3046 : 497c            >            eor #($ff-fnzc|$30)
                       >
3048 : dd1d02          >            cmp fROLc,x    ;test flags
304b : d0fe            >            bne *       ;trap
                        
304d : ca                       dex
304e : 10e3                     bpl trolc7
                        
3050 : a203                     ldx #3
3052 :                  tror6
                                set_zx zp1,0
                       >            load_flag 0
3052 : a900            >            lda #0
                       >
3054 : 48              >            pha         ;use stack to load status
3055 : b50a            >            lda zp1,x    ;load to zeropage
3057 : 950f            >            sta zpt,x
3059 : 28              >            plp
                        
305a : 760f                     ror zpt,x
                                tst_zx rROR,fROR,0
305c : 08              >            php         ;save flags
305d : b50f            >            lda zpt,x
305f : dd1102          >            cmp rROR,x    ;test result
3062 : d0fe            >            bne *       ;trap
3064 : 68              >            pla         ;load status
                       >            eor_flag 0
3065 : 4930            >            eor #(0|$30)
                       >
3067 : dd2102          >            cmp fROR,x    ;test flags
306a : d0fe            >            bne *       ;trap
                        
306c : ca                       dex
306d : 10e3                     bpl tror6
306f : a203                     ldx #3
3071 :                  tror7
                                set_zx zp1,$ff-fc
                       >            load_flag $ff-fc
3071 : a9fe            >            lda #$ff-fc
                       >
3073 : 48              >            pha         ;use stack to load status
3074 : b50a            >            lda zp1,x    ;load to zeropage
3076 : 950f            >            sta zpt,x
3078 : 28              >            plp
                        
3079 : 760f                     ror zpt,x
                                tst_zx rROR,fROR,$ff-fnzc
307b : 08              >            php         ;save flags
307c : b50f            >            lda zpt,x
307e : dd1102          >            cmp rROR,x    ;test result
3081 : d0fe            >            bne *       ;trap
3083 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3084 : 497c            >            eor #($ff-fnzc|$30)
                       >
3086 : dd2102          >            cmp fROR,x    ;test flags
3089 : d0fe            >            bne *       ;trap
                        
308b : ca                       dex
308c : 10e3                     bpl tror7
                        
308e : a203                     ldx #3
3090 :                  trorc6
                                set_zx zp1,fc
                       >            load_flag fc
3090 : a901            >            lda #fc
                       >
3092 : 48              >            pha         ;use stack to load status
3093 : b50a            >            lda zp1,x    ;load to zeropage
3095 : 950f            >            sta zpt,x
3097 : 28              >            plp
                        
3098 : 760f                     ror zpt,x
                                tst_zx rRORc,fRORc,0
309a : 08              >            php         ;save flags
309b : b50f            >            lda zpt,x
309d : dd1502          >            cmp rRORc,x    ;test result
30a0 : d0fe            >            bne *       ;trap
30a2 : 68              >            pla         ;load status
                       >            eor_flag 0
30a3 : 4930            >            eor #(0|$30)
                       >
30a5 : dd2502          >            cmp fRORc,x    ;test flags
30a8 : d0fe            >            bne *       ;trap
                        
30aa : ca                       dex
30ab : 10e3                     bpl trorc6
30ad : a203                     ldx #3
30af :                  trorc7
                                set_zx zp1,$ff
                       >            load_flag $ff
30af : a9ff            >            lda #$ff
                       >
30b1 : 48              >            pha         ;use stack to load status
30b2 : b50a            >            lda zp1,x    ;load to zeropage
30b4 : 950f            >            sta zpt,x
30b6 : 28              >            plp
                        
30b7 : 760f                     ror zpt,x
                                tst_zx rRORc,fRORc,$ff-fnzc
30b9 : 08              >            php         ;save flags
30ba : b50f            >            lda zpt,x
30bc : dd1502          >            cmp rRORc,x    ;test result
30bf : d0fe            >            bne *       ;trap
30c1 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
30c2 : 497c            >            eor #($ff-fnzc|$30)
                       >
30c4 : dd2502          >            cmp fRORc,x    ;test flags
30c7 : d0fe            >            bne *       ;trap
                        
30c9 : ca                       dex
30ca : 10e3                     bpl trorc7
                        
                        ; shifts - abs indexed
30cc : a203                     ldx #3
30ce :                  tasl8
                                set_absx zp1,0
                       >            load_flag 0
30ce : a900            >            lda #0
                       >
30d0 : 48              >            pha         ;use stack to load status
30d1 : b50a            >            lda zp1,x    ;load to memory
30d3 : 9d3302          >            sta abst,x
30d6 : 28              >            plp
                        
30d7 : 1e3302                   asl abst,x
                                tst_absx rASL,fASL,0
30da : 08              >            php         ;save flags
30db : bd3302          >            lda abst,x
30de : dd0902          >            cmp rASL,x    ;test result
30e1 : d0fe            >            bne *       ;trap
30e3 : 68              >            pla         ;load status
                       >            eor_flag 0
30e4 : 4930            >            eor #(0|$30)
                       >
30e6 : dd1902          >            cmp fASL,x    ;test flags
30e9 : d0fe            >            bne *       ;trap
                        
30eb : ca                       dex
30ec : 10e0                     bpl tasl8
30ee : a203                     ldx #3
30f0 :                  tasl9
                                set_absx zp1,$ff
                       >            load_flag $ff
30f0 : a9ff            >            lda #$ff
                       >
30f2 : 48              >            pha         ;use stack to load status
30f3 : b50a            >            lda zp1,x    ;load to memory
30f5 : 9d3302          >            sta abst,x
30f8 : 28              >            plp
                        
30f9 : 1e3302                   asl abst,x
                                tst_absx rASL,fASL,$ff-fnzc
30fc : 08              >            php         ;save flags
30fd : bd3302          >            lda abst,x
3100 : dd0902          >            cmp rASL,x    ;test result
3103 : d0fe            >            bne *       ;trap
3105 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3106 : 497c            >            eor #($ff-fnzc|$30)
                       >
3108 : dd1902          >            cmp fASL,x    ;test flags
310b : d0fe            >            bne *       ;trap
                        
310d : ca                       dex
310e : 10e0                     bpl tasl9
                        
3110 : a203                     ldx #3
3112 :                  tlsr8
                                set_absx zp1,0
                       >            load_flag 0
3112 : a900            >            lda #0
                       >
3114 : 48              >            pha         ;use stack to load status
3115 : b50a            >            lda zp1,x    ;load to memory
3117 : 9d3302          >            sta abst,x
311a : 28              >            plp
                        
311b : 5e3302                   lsr abst,x
                                tst_absx rLSR,fLSR,0
311e : 08              >            php         ;save flags
311f : bd3302          >            lda abst,x
3122 : dd1102          >            cmp rLSR,x    ;test result
3125 : d0fe            >            bne *       ;trap
3127 : 68              >            pla         ;load status
                       >            eor_flag 0
3128 : 4930            >            eor #(0|$30)
                       >
312a : dd2102          >            cmp fLSR,x    ;test flags
312d : d0fe            >            bne *       ;trap
                        
312f : ca                       dex
3130 : 10e0                     bpl tlsr8
3132 : a203                     ldx #3
3134 :                  tlsr9
                                set_absx zp1,$ff
                       >            load_flag $ff
3134 : a9ff            >            lda #$ff
                       >
3136 : 48              >            pha         ;use stack to load status
3137 : b50a            >            lda zp1,x    ;load to memory
3139 : 9d3302          >            sta abst,x
313c : 28              >            plp
                        
313d : 5e3302                   lsr abst,x
                                tst_absx rLSR,fLSR,$ff-fnzc
3140 : 08              >            php         ;save flags
3141 : bd3302          >            lda abst,x
3144 : dd1102          >            cmp rLSR,x    ;test result
3147 : d0fe            >            bne *       ;trap
3149 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
314a : 497c            >            eor #($ff-fnzc|$30)
                       >
314c : dd2102          >            cmp fLSR,x    ;test flags
314f : d0fe            >            bne *       ;trap
                        
3151 : ca                       dex
3152 : 10e0                     bpl tlsr9
                        
3154 : a203                     ldx #3
3156 :                  trol8
                                set_absx zp1,0
                       >            load_flag 0
3156 : a900            >            lda #0
                       >
3158 : 48              >            pha         ;use stack to load status
3159 : b50a            >            lda zp1,x    ;load to memory
315b : 9d3302          >            sta abst,x
315e : 28              >            plp
                        
315f : 3e3302                   rol abst,x
                                tst_absx rROL,fROL,0
3162 : 08              >            php         ;save flags
3163 : bd3302          >            lda abst,x
3166 : dd0902          >            cmp rROL,x    ;test result
3169 : d0fe            >            bne *       ;trap
316b : 68              >            pla         ;load status
                       >            eor_flag 0
316c : 4930            >            eor #(0|$30)
                       >
316e : dd1902          >            cmp fROL,x    ;test flags
3171 : d0fe            >            bne *       ;trap
                        
3173 : ca                       dex
3174 : 10e0                     bpl trol8
3176 : a203                     ldx #3
3178 :                  trol9
                                set_absx zp1,$ff-fc
                       >            load_flag $ff-fc
3178 : a9fe            >            lda #$ff-fc
                       >
317a : 48              >            pha         ;use stack to load status
317b : b50a            >            lda zp1,x    ;load to memory
317d : 9d3302          >            sta abst,x
3180 : 28              >            plp
                        
3181 : 3e3302                   rol abst,x
                                tst_absx rROL,fROL,$ff-fnzc
3184 : 08              >            php         ;save flags
3185 : bd3302          >            lda abst,x
3188 : dd0902          >            cmp rROL,x    ;test result
318b : d0fe            >            bne *       ;trap
318d : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
318e : 497c            >            eor #($ff-fnzc|$30)
                       >
3190 : dd1902          >            cmp fROL,x    ;test flags
3193 : d0fe            >            bne *       ;trap
                        
3195 : ca                       dex
3196 : 10e0                     bpl trol9
                        
3198 : a203                     ldx #3
319a :                  trolc8
                                set_absx zp1,fc
                       >            load_flag fc
319a : a901            >            lda #fc
                       >
319c : 48              >            pha         ;use stack to load status
319d : b50a            >            lda zp1,x    ;load to memory
319f : 9d3302          >            sta abst,x
31a2 : 28              >            plp
                        
31a3 : 3e3302                   rol abst,x
                                tst_absx rROLc,fROLc,0
31a6 : 08              >            php         ;save flags
31a7 : bd3302          >            lda abst,x
31aa : dd0d02          >            cmp rROLc,x    ;test result
31ad : d0fe            >            bne *       ;trap
31af : 68              >            pla         ;load status
                       >            eor_flag 0
31b0 : 4930            >            eor #(0|$30)
                       >
31b2 : dd1d02          >            cmp fROLc,x    ;test flags
31b5 : d0fe            >            bne *       ;trap
                        
31b7 : ca                       dex
31b8 : 10e0                     bpl trolc8
31ba : a203                     ldx #3
31bc :                  trolc9
                                set_absx zp1,$ff
                       >            load_flag $ff
31bc : a9ff            >            lda #$ff
                       >
31be : 48              >            pha         ;use stack to load status
31bf : b50a            >            lda zp1,x    ;load to memory
31c1 : 9d3302          >            sta abst,x
31c4 : 28              >            plp
                        
31c5 : 3e3302                   rol abst,x
                                tst_absx rROLc,fROLc,$ff-fnzc
31c8 : 08              >            php         ;save flags
31c9 : bd3302          >            lda abst,x
31cc : dd0d02          >            cmp rROLc,x    ;test result
31cf : d0fe            >            bne *       ;trap
31d1 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
31d2 : 497c            >            eor #($ff-fnzc|$30)
                       >
31d4 : dd1d02          >            cmp fROLc,x    ;test flags
31d7 : d0fe            >            bne *       ;trap
                        
31d9 : ca                       dex
31da : 10e0                     bpl trolc9
                        
31dc : a203                     ldx #3
31de :                  tror8
                                set_absx zp1,0
                       >            load_flag 0
31de : a900            >            lda #0
                       >
31e0 : 48              >            pha         ;use stack to load status
31e1 : b50a            >            lda zp1,x    ;load to memory
31e3 : 9d3302          >            sta abst,x
31e6 : 28              >            plp
                        
31e7 : 7e3302                   ror abst,x
                                tst_absx rROR,fROR,0
31ea : 08              >            php         ;save flags
31eb : bd3302          >            lda abst,x
31ee : dd1102          >            cmp rROR,x    ;test result
31f1 : d0fe            >            bne *       ;trap
31f3 : 68              >            pla         ;load status
                       >            eor_flag 0
31f4 : 4930            >            eor #(0|$30)
                       >
31f6 : dd2102          >            cmp fROR,x    ;test flags
31f9 : d0fe            >            bne *       ;trap
                        
31fb : ca                       dex
31fc : 10e0                     bpl tror8
31fe : a203                     ldx #3
3200 :                  tror9
                                set_absx zp1,$ff-fc
                       >            load_flag $ff-fc
3200 : a9fe            >            lda #$ff-fc
                       >
3202 : 48              >            pha         ;use stack to load status
3203 : b50a            >            lda zp1,x    ;load to memory
3205 : 9d3302          >            sta abst,x
3208 : 28              >            plp
                        
3209 : 7e3302                   ror abst,x
                                tst_absx rROR,fROR,$ff-fnzc
320c : 08              >            php         ;save flags
320d : bd3302          >            lda abst,x
3210 : dd1102          >            cmp rROR,x    ;test result
3213 : d0fe            >            bne *       ;trap
3215 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3216 : 497c            >            eor #($ff-fnzc|$30)
                       >
3218 : dd2102          >            cmp fROR,x    ;test flags
321b : d0fe            >            bne *       ;trap
                        
321d : ca                       dex
321e : 10e0                     bpl tror9
                        
3220 : a203                     ldx #3
3222 :                  trorc8
                                set_absx zp1,fc
                       >            load_flag fc
3222 : a901            >            lda #fc
                       >
3224 : 48              >            pha         ;use stack to load status
3225 : b50a            >            lda zp1,x    ;load to memory
3227 : 9d3302          >            sta abst,x
322a : 28              >            plp
                        
322b : 7e3302                   ror abst,x
                                tst_absx rRORc,fRORc,0
322e : 08              >            php         ;save flags
322f : bd3302          >            lda abst,x
3232 : dd1502          >            cmp rRORc,x    ;test result
3235 : d0fe            >            bne *       ;trap
3237 : 68              >            pla         ;load status
                       >            eor_flag 0
3238 : 4930            >            eor #(0|$30)
                       >
323a : dd2502          >            cmp fRORc,x    ;test flags
323d : d0fe            >            bne *       ;trap
                        
323f : ca                       dex
3240 : 10e0                     bpl trorc8
3242 : a203                     ldx #3
3244 :                  trorc9
                                set_absx zp1,$ff
                       >            load_flag $ff
3244 : a9ff            >            lda #$ff
                       >
3246 : 48              >            pha         ;use stack to load status
3247 : b50a            >            lda zp1,x    ;load to memory
3249 : 9d3302          >            sta abst,x
324c : 28              >            plp
                        
324d : 7e3302                   ror abst,x
                                tst_absx rRORc,fRORc,$ff-fnzc
3250 : 08              >            php         ;save flags
3251 : bd3302          >            lda abst,x
3254 : dd1502          >            cmp rRORc,x    ;test result
3257 : d0fe            >            bne *       ;trap
3259 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
325a : 497c            >            eor #($ff-fnzc|$30)
                       >
325c : dd2502          >            cmp fRORc,x    ;test flags
325f : d0fe            >            bne *       ;trap
                        
3261 : ca                       dex
3262 : 10e0                     bpl trorc9
                        
                        ; testing memory increment/decrement - INC DEC all addressing modes
                        ; zeropage
3264 : a200                     ldx #0
3266 : a97e                     lda #$7e
3268 : 850f                     sta zpt
326a :                  tinc
                                set_stat 0
                       >            load_flag 0
326a : a900            >            lda #0
                       >
326c : 48              >            pha         ;use stack to load status
326d : 28              >            plp
                        
326e : e60f                     inc zpt
                                tst_z rINC,fINC,0
3270 : 08              >            php         ;save flags
3271 : a50f            >            lda zpt
3273 : dd2902          >            cmp rINC,x    ;test result
3276 : d0fe            >            bne *       ;trap
3278 : 68              >            pla         ;load status
                       >            eor_flag 0
3279 : 4930            >            eor #(0|$30)
                       >
327b : dd2e02          >            cmp fINC,x    ;test flags
327e : d0fe            >            bne *       ;trap
                        
3280 : e8                       inx
3281 : e002                     cpx #2
3283 : d004                     bne tinc1
3285 : a9fe                     lda #$fe
3287 : 850f                     sta zpt
3289 : e005             tinc1   cpx #5
328b : d0dd                     bne tinc
328d : ca                       dex
328e : e60f                     inc zpt
3290 :                  tdec
                                set_stat 0
                       >            load_flag 0
3290 : a900            >            lda #0
                       >
3292 : 48              >            pha         ;use stack to load status
3293 : 28              >            plp
                        
3294 : c60f                     dec zpt
                                tst_z rINC,fINC,0
3296 : 08              >            php         ;save flags
3297 : a50f            >            lda zpt
3299 : dd2902          >            cmp rINC,x    ;test result
329c : d0fe            >            bne *       ;trap
329e : 68              >            pla         ;load status
                       >            eor_flag 0
329f : 4930            >            eor #(0|$30)
                       >
32a1 : dd2e02          >            cmp fINC,x    ;test flags
32a4 : d0fe            >            bne *       ;trap
                        
32a6 : ca                       dex
32a7 : 300a                     bmi tdec1
32a9 : e001                     cpx #1
32ab : d0e3                     bne tdec
32ad : a981                     lda #$81
32af : 850f                     sta zpt
32b1 : d0dd                     bne tdec
32b3 :                  tdec1
32b3 : a200                     ldx #0
32b5 : a97e                     lda #$7e
32b7 : 850f                     sta zpt
32b9 :                  tinc10
                                set_stat $ff
                       >            load_flag $ff
32b9 : a9ff            >            lda #$ff
                       >
32bb : 48              >            pha         ;use stack to load status
32bc : 28              >            plp
                        
32bd : e60f                     inc zpt
                                tst_z rINC,fINC,$ff-fnz
32bf : 08              >            php         ;save flags
32c0 : a50f            >            lda zpt
32c2 : dd2902          >            cmp rINC,x    ;test result
32c5 : d0fe            >            bne *       ;trap
32c7 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
32c8 : 497d            >            eor #($ff-fnz|$30)
                       >
32ca : dd2e02          >            cmp fINC,x    ;test flags
32cd : d0fe            >            bne *       ;trap
                        
32cf : e8                       inx
32d0 : e002                     cpx #2
32d2 : d004                     bne tinc11
32d4 : a9fe                     lda #$fe
32d6 : 850f                     sta zpt
32d8 : e005             tinc11  cpx #5
32da : d0dd                     bne tinc10
32dc : ca                       dex
32dd : e60f                     inc zpt
32df :                  tdec10
                                set_stat $ff
                       >            load_flag $ff
32df : a9ff            >            lda #$ff
                       >
32e1 : 48              >            pha         ;use stack to load status
32e2 : 28              >            plp
                        
32e3 : c60f                     dec zpt
                                tst_z rINC,fINC,$ff-fnz
32e5 : 08              >            php         ;save flags
32e6 : a50f            >            lda zpt
32e8 : dd2902          >            cmp rINC,x    ;test result
32eb : d0fe            >            bne *       ;trap
32ed : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
32ee : 497d            >            eor #($ff-fnz|$30)
                       >
32f0 : dd2e02          >            cmp fINC,x    ;test flags
32f3 : d0fe            >            bne *       ;trap
                        
32f5 : ca                       dex
32f6 : 300a                     bmi tdec11
32f8 : e001                     cpx #1
32fa : d0e3                     bne tdec10
32fc : a981                     lda #$81
32fe : 850f                     sta zpt
3300 : d0dd                     bne tdec10
3302 :                  tdec11
                        
                        ; absolute memory
3302 : a200                     ldx #0
3304 : a97e                     lda #$7e
3306 : 8d3302                   sta abst
3309 :                  tinc2
                                set_stat 0
                       >            load_flag 0
3309 : a900            >            lda #0
                       >
330b : 48              >            pha         ;use stack to load status
330c : 28              >            plp
                        
330d : ee3302                   inc abst
                                tst_abs rINC,fINC,0
3310 : 08              >            php         ;save flags
3311 : ad3302          >            lda abst
3314 : dd2902          >            cmp rINC,x    ;test result
3317 : d0fe            >            bne *       ;trap
3319 : 68              >            pla         ;load status
                       >            eor_flag 0
331a : 4930            >            eor #(0|$30)
                       >
331c : dd2e02          >            cmp fINC,x    ;test flags
331f : d0fe            >            bne *       ;trap
                        
3321 : e8                       inx
3322 : e002                     cpx #2
3324 : d005                     bne tinc3
3326 : a9fe                     lda #$fe
3328 : 8d3302                   sta abst
332b : e005             tinc3   cpx #5
332d : d0da                     bne tinc2
332f : ca                       dex
3330 : ee3302                   inc abst
3333 :                  tdec2
                                set_stat 0
                       >            load_flag 0
3333 : a900            >            lda #0
                       >
3335 : 48              >            pha         ;use stack to load status
3336 : 28              >            plp
                        
3337 : ce3302                   dec abst
                                tst_abs rINC,fINC,0
333a : 08              >            php         ;save flags
333b : ad3302          >            lda abst
333e : dd2902          >            cmp rINC,x    ;test result
3341 : d0fe            >            bne *       ;trap
3343 : 68              >            pla         ;load status
                       >            eor_flag 0
3344 : 4930            >            eor #(0|$30)
                       >
3346 : dd2e02          >            cmp fINC,x    ;test flags
3349 : d0fe            >            bne *       ;trap
                        
334b : ca                       dex
334c : 300b                     bmi tdec3
334e : e001                     cpx #1
3350 : d0e1                     bne tdec2
3352 : a981                     lda #$81
3354 : 8d3302                   sta abst
3357 : d0da                     bne tdec2
3359 :                  tdec3
3359 : a200                     ldx #0
335b : a97e                     lda #$7e
335d : 8d3302                   sta abst
3360 :                  tinc12
                                set_stat $ff
                       >            load_flag $ff
3360 : a9ff            >            lda #$ff
                       >
3362 : 48              >            pha         ;use stack to load status
3363 : 28              >            plp
                        
3364 : ee3302                   inc abst
                                tst_abs rINC,fINC,$ff-fnz
3367 : 08              >            php         ;save flags
3368 : ad3302          >            lda abst
336b : dd2902          >            cmp rINC,x    ;test result
336e : d0fe            >            bne *       ;trap
3370 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3371 : 497d            >            eor #($ff-fnz|$30)
                       >
3373 : dd2e02          >            cmp fINC,x    ;test flags
3376 : d0fe            >            bne *       ;trap
                        
3378 : e8                       inx
3379 : e002                     cpx #2
337b : d005                     bne tinc13
337d : a9fe                     lda #$fe
337f : 8d3302                   sta abst
3382 : e005             tinc13   cpx #5
3384 : d0da                     bne tinc12
3386 : ca                       dex
3387 : ee3302                   inc abst
338a :                  tdec12
                                set_stat $ff
                       >            load_flag $ff
338a : a9ff            >            lda #$ff
                       >
338c : 48              >            pha         ;use stack to load status
338d : 28              >            plp
                        
338e : ce3302                   dec abst
                                tst_abs rINC,fINC,$ff-fnz
3391 : 08              >            php         ;save flags
3392 : ad3302          >            lda abst
3395 : dd2902          >            cmp rINC,x    ;test result
3398 : d0fe            >            bne *       ;trap
339a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
339b : 497d            >            eor #($ff-fnz|$30)
                       >
339d : dd2e02          >            cmp fINC,x    ;test flags
33a0 : d0fe            >            bne *       ;trap
                        
33a2 : ca                       dex
33a3 : 300b                     bmi tdec13
33a5 : e001                     cpx #1
33a7 : d0e1                     bne tdec12
33a9 : a981                     lda #$81
33ab : 8d3302                   sta abst
33ae : d0da                     bne tdec12
33b0 :                  tdec13
                        
                        ; zeropage indexed
33b0 : a200                     ldx #0
33b2 : a97e                     lda #$7e
33b4 : 950f             tinc4   sta zpt,x
                                set_stat 0
                       >            load_flag 0
33b6 : a900            >            lda #0
                       >
33b8 : 48              >            pha         ;use stack to load status
33b9 : 28              >            plp
                        
33ba : f60f                     inc zpt,x
                                tst_zx rINC,fINC,0
33bc : 08              >            php         ;save flags
33bd : b50f            >            lda zpt,x
33bf : dd2902          >            cmp rINC,x    ;test result
33c2 : d0fe            >            bne *       ;trap
33c4 : 68              >            pla         ;load status
                       >            eor_flag 0
33c5 : 4930            >            eor #(0|$30)
                       >
33c7 : dd2e02          >            cmp fINC,x    ;test flags
33ca : d0fe            >            bne *       ;trap
                        
33cc : b50f                     lda zpt,x
33ce : e8                       inx
33cf : e002                     cpx #2
33d1 : d002                     bne tinc5
33d3 : a9fe                     lda #$fe
33d5 : e005             tinc5   cpx #5
33d7 : d0db                     bne tinc4
33d9 : ca                       dex
33da : a902                     lda #2
33dc : 950f             tdec4   sta zpt,x
                                set_stat 0
                       >            load_flag 0
33de : a900            >            lda #0
                       >
33e0 : 48              >            pha         ;use stack to load status
33e1 : 28              >            plp
                        
33e2 : d60f                     dec zpt,x
                                tst_zx rINC,fINC,0
33e4 : 08              >            php         ;save flags
33e5 : b50f            >            lda zpt,x
33e7 : dd2902          >            cmp rINC,x    ;test result
33ea : d0fe            >            bne *       ;trap
33ec : 68              >            pla         ;load status
                       >            eor_flag 0
33ed : 4930            >            eor #(0|$30)
                       >
33ef : dd2e02          >            cmp fINC,x    ;test flags
33f2 : d0fe            >            bne *       ;trap
                        
33f4 : b50f                     lda zpt,x
33f6 : ca                       dex
33f7 : 3008                     bmi tdec5
33f9 : e001                     cpx #1
33fb : d0df                     bne tdec4
33fd : a981                     lda #$81
33ff : d0db                     bne tdec4
3401 :                  tdec5
3401 : a200                     ldx #0
3403 : a97e                     lda #$7e
3405 : 950f             tinc14  sta zpt,x
                                set_stat $ff
                       >            load_flag $ff
3407 : a9ff            >            lda #$ff
                       >
3409 : 48              >            pha         ;use stack to load status
340a : 28              >            plp
                        
340b : f60f                     inc zpt,x
                                tst_zx rINC,fINC,$ff-fnz
340d : 08              >            php         ;save flags
340e : b50f            >            lda zpt,x
3410 : dd2902          >            cmp rINC,x    ;test result
3413 : d0fe            >            bne *       ;trap
3415 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3416 : 497d            >            eor #($ff-fnz|$30)
                       >
3418 : dd2e02          >            cmp fINC,x    ;test flags
341b : d0fe            >            bne *       ;trap
                        
341d : b50f                     lda zpt,x
341f : e8                       inx
3420 : e002                     cpx #2
3422 : d002                     bne tinc15
3424 : a9fe                     lda #$fe
3426 : e005             tinc15  cpx #5
3428 : d0db                     bne tinc14
342a : ca                       dex
342b : a902                     lda #2
342d : 950f             tdec14  sta zpt,x
                                set_stat $ff
                       >            load_flag $ff
342f : a9ff            >            lda #$ff
                       >
3431 : 48              >            pha         ;use stack to load status
3432 : 28              >            plp
                        
3433 : d60f                     dec zpt,x
                                tst_zx rINC,fINC,$ff-fnz
3435 : 08              >            php         ;save flags
3436 : b50f            >            lda zpt,x
3438 : dd2902          >            cmp rINC,x    ;test result
343b : d0fe            >            bne *       ;trap
343d : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
343e : 497d            >            eor #($ff-fnz|$30)
                       >
3440 : dd2e02          >            cmp fINC,x    ;test flags
3443 : d0fe            >            bne *       ;trap
                        
3445 : b50f                     lda zpt,x
3447 : ca                       dex
3448 : 3008                     bmi tdec15
344a : e001                     cpx #1
344c : d0df                     bne tdec14
344e : a981                     lda #$81
3450 : d0db                     bne tdec14
3452 :                  tdec15
                        
                        ; memory indexed
3452 : a200                     ldx #0
3454 : a97e                     lda #$7e
3456 : 9d3302           tinc6   sta abst,x
                                set_stat 0
                       >            load_flag 0
3459 : a900            >            lda #0
                       >
345b : 48              >            pha         ;use stack to load status
345c : 28              >            plp
                        
345d : fe3302                   inc abst,x
                                tst_absx rINC,fINC,0
3460 : 08              >            php         ;save flags
3461 : bd3302          >            lda abst,x
3464 : dd2902          >            cmp rINC,x    ;test result
3467 : d0fe            >            bne *       ;trap
3469 : 68              >            pla         ;load status
                       >            eor_flag 0
346a : 4930            >            eor #(0|$30)
                       >
346c : dd2e02          >            cmp fINC,x    ;test flags
346f : d0fe            >            bne *       ;trap
                        
3471 : bd3302                   lda abst,x
3474 : e8                       inx
3475 : e002                     cpx #2
3477 : d002                     bne tinc7
3479 : a9fe                     lda #$fe
347b : e005             tinc7   cpx #5
347d : d0d7                     bne tinc6
347f : ca                       dex
3480 : a902                     lda #2
3482 : 9d3302           tdec6   sta abst,x
                                set_stat 0
                       >            load_flag 0
3485 : a900            >            lda #0
                       >
3487 : 48              >            pha         ;use stack to load status
3488 : 28              >            plp
                        
3489 : de3302                   dec abst,x
                                tst_absx rINC,fINC,0
348c : 08              >            php         ;save flags
348d : bd3302          >            lda abst,x
3490 : dd2902          >            cmp rINC,x    ;test result
3493 : d0fe            >            bne *       ;trap
3495 : 68              >            pla         ;load status
                       >            eor_flag 0
3496 : 4930            >            eor #(0|$30)
                       >
3498 : dd2e02          >            cmp fINC,x    ;test flags
349b : d0fe            >            bne *       ;trap
                        
349d : bd3302                   lda abst,x
34a0 : ca                       dex
34a1 : 3008                     bmi tdec7
34a3 : e001                     cpx #1
34a5 : d0db                     bne tdec6
34a7 : a981                     lda #$81
34a9 : d0d7                     bne tdec6
34ab :                  tdec7
34ab : a200                     ldx #0
34ad : a97e                     lda #$7e
34af : 9d3302           tinc16  sta abst,x
                                set_stat $ff
                       >            load_flag $ff
34b2 : a9ff            >            lda #$ff
                       >
34b4 : 48              >            pha         ;use stack to load status
34b5 : 28              >            plp
                        
34b6 : fe3302                   inc abst,x
                                tst_absx rINC,fINC,$ff-fnz
34b9 : 08              >            php         ;save flags
34ba : bd3302          >            lda abst,x
34bd : dd2902          >            cmp rINC,x    ;test result
34c0 : d0fe            >            bne *       ;trap
34c2 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
34c3 : 497d            >            eor #($ff-fnz|$30)
                       >
34c5 : dd2e02          >            cmp fINC,x    ;test flags
34c8 : d0fe            >            bne *       ;trap
                        
34ca : bd3302                   lda abst,x
34cd : e8                       inx
34ce : e002                     cpx #2
34d0 : d002                     bne tinc17
34d2 : a9fe                     lda #$fe
34d4 : e005             tinc17  cpx #5
34d6 : d0d7                     bne tinc16
34d8 : ca                       dex
34d9 : a902                     lda #2
34db : 9d3302           tdec16  sta abst,x
                                set_stat $ff
                       >            load_flag $ff
34de : a9ff            >            lda #$ff
                       >
34e0 : 48              >            pha         ;use stack to load status
34e1 : 28              >            plp
                        
34e2 : de3302                   dec abst,x
                                tst_absx rINC,fINC,$ff-fnz
34e5 : 08              >            php         ;save flags
34e6 : bd3302          >            lda abst,x
34e9 : dd2902          >            cmp rINC,x    ;test result
34ec : d0fe            >            bne *       ;trap
34ee : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
34ef : 497d            >            eor #($ff-fnz|$30)
                       >
34f1 : dd2e02          >            cmp fINC,x    ;test flags
34f4 : d0fe            >            bne *       ;trap
                        
34f6 : bd3302                   lda abst,x
34f9 : ca                       dex
34fa : 3008                     bmi tdec17
34fc : e001                     cpx #1
34fe : d0db                     bne tdec16
3500 : a981                     lda #$81
3502 : d0d7                     bne tdec16
3504 :                  tdec17
                        
                        ; testing logical instructions - AND EOR ORA all addressing modes
                        ; AND
3504 : a203                     ldx #3      ;immediate - self modifying code
3506 : b518             tand    lda zpAN,x
3508 : 8d1335                   sta tandi1
                                set_ax  absANa,0
                       >            load_flag 0
350b : a900            >            lda #0
                       >
350d : 48              >            pha         ;use stack to load status
350e : bd4802          >            lda absANa,x    ;precharge accu
3511 : 28              >            plp
                        
3513 =                  tandi1  equ *+1     ;target for immediate operand
3512 : 2963                     and #99
                                tst_ax  absrlo,absflo,0
3514 : 08              >            php         ;save flags
3515 : dd5002          >            cmp absrlo,x    ;test result
3518 : d0fe            >            bne *       ;trap
351a : 68              >            pla         ;load status
                       >            eor_flag 0
351b : 4930            >            eor #(0|$30)
                       >
351d : dd5402          >            cmp absflo,x    ;test flags
3520 : d0fe            >            bne *       ;trap
                        
3522 : ca                       dex
3523 : 10e1                     bpl tand
3525 : a203                     ldx #3
3527 : b518             tand1   lda zpAN,x
3529 : 8d3435                   sta tandi2
                                set_ax  absANa,$ff
                       >            load_flag $ff
352c : a9ff            >            lda #$ff
                       >
352e : 48              >            pha         ;use stack to load status
352f : bd4802          >            lda absANa,x    ;precharge accu
3532 : 28              >            plp
                        
3534 =                  tandi2  equ *+1     ;target for immediate operand
3533 : 2963                     and #99
                                tst_ax  absrlo,absflo,$ff-fnz
3535 : 08              >            php         ;save flags
3536 : dd5002          >            cmp absrlo,x    ;test result
3539 : d0fe            >            bne *       ;trap
353b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
353c : 497d            >            eor #($ff-fnz|$30)
                       >
353e : dd5402          >            cmp absflo,x    ;test flags
3541 : d0fe            >            bne *       ;trap
                        
3543 : ca                       dex
3544 : 10e1                     bpl tand1
                        
3546 : a203                     ldx #3      ;zp
3548 : b518             tand2    lda zpAN,x
354a : 850f                     sta zpt
                                set_ax  absANa,0
                       >            load_flag 0
354c : a900            >            lda #0
                       >
354e : 48              >            pha         ;use stack to load status
354f : bd4802          >            lda absANa,x    ;precharge accu
3552 : 28              >            plp
                        
3553 : 250f                     and zpt
                                tst_ax  absrlo,absflo,0
3555 : 08              >            php         ;save flags
3556 : dd5002          >            cmp absrlo,x    ;test result
3559 : d0fe            >            bne *       ;trap
355b : 68              >            pla         ;load status
                       >            eor_flag 0
355c : 4930            >            eor #(0|$30)
                       >
355e : dd5402          >            cmp absflo,x    ;test flags
3561 : d0fe            >            bne *       ;trap
                        
3563 : ca                       dex
3564 : 10e2                     bpl tand2
3566 : a203                     ldx #3
3568 : b518             tand3   lda zpAN,x
356a : 850f                     sta zpt
                                set_ax  absANa,$ff
                       >            load_flag $ff
356c : a9ff            >            lda #$ff
                       >
356e : 48              >            pha         ;use stack to load status
356f : bd4802          >            lda absANa,x    ;precharge accu
3572 : 28              >            plp
                        
3573 : 250f                     and zpt
                                tst_ax  absrlo,absflo,$ff-fnz
3575 : 08              >            php         ;save flags
3576 : dd5002          >            cmp absrlo,x    ;test result
3579 : d0fe            >            bne *       ;trap
357b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
357c : 497d            >            eor #($ff-fnz|$30)
                       >
357e : dd5402          >            cmp absflo,x    ;test flags
3581 : d0fe            >            bne *       ;trap
                        
3583 : ca                       dex
3584 : 10e2                     bpl tand3
                        
3586 : a203                     ldx #3      ;abs
3588 : b518             tand4   lda zpAN,x
358a : 8d3302                   sta abst
                                set_ax  absANa,0
                       >            load_flag 0
358d : a900            >            lda #0
                       >
358f : 48              >            pha         ;use stack to load status
3590 : bd4802          >            lda absANa,x    ;precharge accu
3593 : 28              >            plp
                        
3594 : 2d3302                   and abst
                                tst_ax  absrlo,absflo,0
3597 : 08              >            php         ;save flags
3598 : dd5002          >            cmp absrlo,x    ;test result
359b : d0fe            >            bne *       ;trap
359d : 68              >            pla         ;load status
                       >            eor_flag 0
359e : 4930            >            eor #(0|$30)
                       >
35a0 : dd5402          >            cmp absflo,x    ;test flags
35a3 : d0fe            >            bne *       ;trap
                        
35a5 : ca                       dex
35a6 : 10e0                     bpl tand4
35a8 : a203                     ldx #3
35aa : b518             tand5   lda zpAN,x
35ac : 8d3302                   sta abst
                                set_ax  absANa,$ff
                       >            load_flag $ff
35af : a9ff            >            lda #$ff
                       >
35b1 : 48              >            pha         ;use stack to load status
35b2 : bd4802          >            lda absANa,x    ;precharge accu
35b5 : 28              >            plp
                        
35b6 : 2d3302                   and abst
                                tst_ax  absrlo,absflo,$ff-fnz
35b9 : 08              >            php         ;save flags
35ba : dd5002          >            cmp absrlo,x    ;test result
35bd : d0fe            >            bne *       ;trap
35bf : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
35c0 : 497d            >            eor #($ff-fnz|$30)
                       >
35c2 : dd5402          >            cmp absflo,x    ;test flags
35c5 : d0fe            >            bne *       ;trap
                        
35c7 : ca                       dex
35c8 : 1002                     bpl tand6
                        
35ca : a203                     ldx #3      ;zp,x
35cc :                  tand6
                                set_ax  absANa,0
                       >            load_flag 0
35cc : a900            >            lda #0
                       >
35ce : 48              >            pha         ;use stack to load status
35cf : bd4802          >            lda absANa,x    ;precharge accu
35d2 : 28              >            plp
                        
35d3 : 3518                     and zpAN,x
                                tst_ax  absrlo,absflo,0
35d5 : 08              >            php         ;save flags
35d6 : dd5002          >            cmp absrlo,x    ;test result
35d9 : d0fe            >            bne *       ;trap
35db : 68              >            pla         ;load status
                       >            eor_flag 0
35dc : 4930            >            eor #(0|$30)
                       >
35de : dd5402          >            cmp absflo,x    ;test flags
35e1 : d0fe            >            bne *       ;trap
                        
35e3 : ca                       dex
35e4 : 10e6                     bpl tand6
35e6 : a203                     ldx #3
35e8 :                  tand7
                                set_ax  absANa,$ff
                       >            load_flag $ff
35e8 : a9ff            >            lda #$ff
                       >
35ea : 48              >            pha         ;use stack to load status
35eb : bd4802          >            lda absANa,x    ;precharge accu
35ee : 28              >            plp
                        
35ef : 3518                     and zpAN,x
                                tst_ax  absrlo,absflo,$ff-fnz
35f1 : 08              >            php         ;save flags
35f2 : dd5002          >            cmp absrlo,x    ;test result
35f5 : d0fe            >            bne *       ;trap
35f7 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
35f8 : 497d            >            eor #($ff-fnz|$30)
                       >
35fa : dd5402          >            cmp absflo,x    ;test flags
35fd : d0fe            >            bne *       ;trap
                        
35ff : ca                       dex
3600 : 10e6                     bpl tand7
                        
3602 : a203                     ldx #3      ;abs,x
3604 :                  tand8
                                set_ax  absANa,0
                       >            load_flag 0
3604 : a900            >            lda #0
                       >
3606 : 48              >            pha         ;use stack to load status
3607 : bd4802          >            lda absANa,x    ;precharge accu
360a : 28              >            plp
                        
360b : 3d3c02                   and absAN,x
                                tst_ax  absrlo,absflo,0
360e : 08              >            php         ;save flags
360f : dd5002          >            cmp absrlo,x    ;test result
3612 : d0fe            >            bne *       ;trap
3614 : 68              >            pla         ;load status
                       >            eor_flag 0
3615 : 4930            >            eor #(0|$30)
                       >
3617 : dd5402          >            cmp absflo,x    ;test flags
361a : d0fe            >            bne *       ;trap
                        
361c : ca                       dex
361d : 10e5                     bpl tand8
361f : a203                     ldx #3
3621 :                  tand9
                                set_ax  absANa,$ff
                       >            load_flag $ff
3621 : a9ff            >            lda #$ff
                       >
3623 : 48              >            pha         ;use stack to load status
3624 : bd4802          >            lda absANa,x    ;precharge accu
3627 : 28              >            plp
                        
3628 : 3d3c02                   and absAN,x
                                tst_ax  absrlo,absflo,$ff-fnz
362b : 08              >            php         ;save flags
362c : dd5002          >            cmp absrlo,x    ;test result
362f : d0fe            >            bne *       ;trap
3631 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3632 : 497d            >            eor #($ff-fnz|$30)
                       >
3634 : dd5402          >            cmp absflo,x    ;test flags
3637 : d0fe            >            bne *       ;trap
                        
3639 : ca                       dex
363a : 10e5                     bpl tand9
                        
363c : a003                     ldy #3      ;abs,y
363e :                  tand10
                                set_ay  absANa,0
                       >            load_flag 0
363e : a900            >            lda #0
                       >
3640 : 48              >            pha         ;use stack to load status
3641 : b94802          >            lda absANa,y    ;precharge accu
3644 : 28              >            plp
                        
3645 : 393c02                   and absAN,y
                                tst_ay  absrlo,absflo,0
3648 : 08              >            php         ;save flags
3649 : d95002          >            cmp absrlo,y    ;test result
364c : d0fe            >            bne *       ;trap
364e : 68              >            pla         ;load status
                       >            eor_flag 0
364f : 4930            >            eor #(0|$30)
                       >
3651 : d95402          >            cmp absflo,y    ;test flags
3654 : d0fe            >            bne *       ;trap
                        
3656 : 88                       dey
3657 : 10e5                     bpl tand10
3659 : a003                     ldy #3
365b :                  tand11
                                set_ay  absANa,$ff
                       >            load_flag $ff
365b : a9ff            >            lda #$ff
                       >
365d : 48              >            pha         ;use stack to load status
365e : b94802          >            lda absANa,y    ;precharge accu
3661 : 28              >            plp
                        
3662 : 393c02                   and absAN,y
                                tst_ay  absrlo,absflo,$ff-fnz
3665 : 08              >            php         ;save flags
3666 : d95002          >            cmp absrlo,y    ;test result
3669 : d0fe            >            bne *       ;trap
366b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
366c : 497d            >            eor #($ff-fnz|$30)
                       >
366e : d95402          >            cmp absflo,y    ;test flags
3671 : d0fe            >            bne *       ;trap
                        
3673 : 88                       dey
3674 : 10e5                     bpl tand11
                        
3676 : a206                     ldx #6      ;(zp,x)
3678 : a003                     ldy #3
367a :                  tand12
                                set_ay  absANa,0
                       >            load_flag 0
367a : a900            >            lda #0
                       >
367c : 48              >            pha         ;use stack to load status
367d : b94802          >            lda absANa,y    ;precharge accu
3680 : 28              >            plp
                        
3681 : 2136                     and (indAN,x)
                                tst_ay  absrlo,absflo,0
3683 : 08              >            php         ;save flags
3684 : d95002          >            cmp absrlo,y    ;test result
3687 : d0fe            >            bne *       ;trap
3689 : 68              >            pla         ;load status
                       >            eor_flag 0
368a : 4930            >            eor #(0|$30)
                       >
368c : d95402          >            cmp absflo,y    ;test flags
368f : d0fe            >            bne *       ;trap
                        
3691 : ca                       dex
3692 : ca                       dex
3693 : 88                       dey
3694 : 10e4                     bpl tand12
3696 : a206                     ldx #6
3698 : a003                     ldy #3
369a :                  tand13
                                set_ay  absANa,$ff
                       >            load_flag $ff
369a : a9ff            >            lda #$ff
                       >
369c : 48              >            pha         ;use stack to load status
369d : b94802          >            lda absANa,y    ;precharge accu
36a0 : 28              >            plp
                        
36a1 : 2136                     and (indAN,x)
                                tst_ay  absrlo,absflo,$ff-fnz
36a3 : 08              >            php         ;save flags
36a4 : d95002          >            cmp absrlo,y    ;test result
36a7 : d0fe            >            bne *       ;trap
36a9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
36aa : 497d            >            eor #($ff-fnz|$30)
                       >
36ac : d95402          >            cmp absflo,y    ;test flags
36af : d0fe            >            bne *       ;trap
                        
36b1 : ca                       dex
36b2 : ca                       dex
36b3 : 88                       dey
36b4 : 10e4                     bpl tand13
                        
36b6 : a003                     ldy #3      ;(zp),y
36b8 :                  tand14
                                set_ay  absANa,0
                       >            load_flag 0
36b8 : a900            >            lda #0
                       >
36ba : 48              >            pha         ;use stack to load status
36bb : b94802          >            lda absANa,y    ;precharge accu
36be : 28              >            plp
                        
36bf : 3136                     and (indAN),y
                                tst_ay  absrlo,absflo,0
36c1 : 08              >            php         ;save flags
36c2 : d95002          >            cmp absrlo,y    ;test result
36c5 : d0fe            >            bne *       ;trap
36c7 : 68              >            pla         ;load status
                       >            eor_flag 0
36c8 : 4930            >            eor #(0|$30)
                       >
36ca : d95402          >            cmp absflo,y    ;test flags
36cd : d0fe            >            bne *       ;trap
                        
36cf : 88                       dey
36d0 : 10e6                     bpl tand14
36d2 : a003                     ldy #3
36d4 :                  tand15
                                set_ay  absANa,$ff
                       >            load_flag $ff
36d4 : a9ff            >            lda #$ff
                       >
36d6 : 48              >            pha         ;use stack to load status
36d7 : b94802          >            lda absANa,y    ;precharge accu
36da : 28              >            plp
                        
36db : 3136                     and (indAN),y
                                tst_ay  absrlo,absflo,$ff-fnz
36dd : 08              >            php         ;save flags
36de : d95002          >            cmp absrlo,y    ;test result
36e1 : d0fe            >            bne *       ;trap
36e3 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
36e4 : 497d            >            eor #($ff-fnz|$30)
                       >
36e6 : d95402          >            cmp absflo,y    ;test flags
36e9 : d0fe            >            bne *       ;trap
                        
36eb : 88                       dey
36ec : 10e6                     bpl tand15
                        
                        ; EOR
36ee : a203                     ldx #3      ;immediate - self modifying code
36f0 : b51c             teor    lda zpEO,x
36f2 : 8dfd36                   sta teori1
                                set_ax  absEOa,0
                       >            load_flag 0
36f5 : a900            >            lda #0
                       >
36f7 : 48              >            pha         ;use stack to load status
36f8 : bd4c02          >            lda absEOa,x    ;precharge accu
36fb : 28              >            plp
                        
36fd =                  teori1  equ *+1     ;target for immediate opereor
36fc : 4963                     eor #99
                                tst_ax  absrlo,absflo,0
36fe : 08              >            php         ;save flags
36ff : dd5002          >            cmp absrlo,x    ;test result
3702 : d0fe            >            bne *       ;trap
3704 : 68              >            pla         ;load status
                       >            eor_flag 0
3705 : 4930            >            eor #(0|$30)
                       >
3707 : dd5402          >            cmp absflo,x    ;test flags
370a : d0fe            >            bne *       ;trap
                        
370c : ca                       dex
370d : 10e1                     bpl teor
370f : a203                     ldx #3
3711 : b51c             teor1   lda zpEO,x
3713 : 8d1e37                   sta teori2
                                set_ax  absEOa,$ff
                       >            load_flag $ff
3716 : a9ff            >            lda #$ff
                       >
3718 : 48              >            pha         ;use stack to load status
3719 : bd4c02          >            lda absEOa,x    ;precharge accu
371c : 28              >            plp
                        
371e =                  teori2  equ *+1     ;target for immediate opereor
371d : 4963                     eor #99
                                tst_ax  absrlo,absflo,$ff-fnz
371f : 08              >            php         ;save flags
3720 : dd5002          >            cmp absrlo,x    ;test result
3723 : d0fe            >            bne *       ;trap
3725 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3726 : 497d            >            eor #($ff-fnz|$30)
                       >
3728 : dd5402          >            cmp absflo,x    ;test flags
372b : d0fe            >            bne *       ;trap
                        
372d : ca                       dex
372e : 10e1                     bpl teor1
                        
3730 : a203                     ldx #3      ;zp
3732 : b51c             teor2    lda zpEO,x
3734 : 850f                     sta zpt
                                set_ax  absEOa,0
                       >            load_flag 0
3736 : a900            >            lda #0
                       >
3738 : 48              >            pha         ;use stack to load status
3739 : bd4c02          >            lda absEOa,x    ;precharge accu
373c : 28              >            plp
                        
373d : 450f                     eor zpt
                                tst_ax  absrlo,absflo,0
373f : 08              >            php         ;save flags
3740 : dd5002          >            cmp absrlo,x    ;test result
3743 : d0fe            >            bne *       ;trap
3745 : 68              >            pla         ;load status
                       >            eor_flag 0
3746 : 4930            >            eor #(0|$30)
                       >
3748 : dd5402          >            cmp absflo,x    ;test flags
374b : d0fe            >            bne *       ;trap
                        
374d : ca                       dex
374e : 10e2                     bpl teor2
3750 : a203                     ldx #3
3752 : b51c             teor3   lda zpEO,x
3754 : 850f                     sta zpt
                                set_ax  absEOa,$ff
                       >            load_flag $ff
3756 : a9ff            >            lda #$ff
                       >
3758 : 48              >            pha         ;use stack to load status
3759 : bd4c02          >            lda absEOa,x    ;precharge accu
375c : 28              >            plp
                        
375d : 450f                     eor zpt
                                tst_ax  absrlo,absflo,$ff-fnz
375f : 08              >            php         ;save flags
3760 : dd5002          >            cmp absrlo,x    ;test result
3763 : d0fe            >            bne *       ;trap
3765 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3766 : 497d            >            eor #($ff-fnz|$30)
                       >
3768 : dd5402          >            cmp absflo,x    ;test flags
376b : d0fe            >            bne *       ;trap
                        
376d : ca                       dex
376e : 10e2                     bpl teor3
                        
3770 : a203                     ldx #3      ;abs
3772 : b51c             teor4   lda zpEO,x
3774 : 8d3302                   sta abst
                                set_ax  absEOa,0
                       >            load_flag 0
3777 : a900            >            lda #0
                       >
3779 : 48              >            pha         ;use stack to load status
377a : bd4c02          >            lda absEOa,x    ;precharge accu
377d : 28              >            plp
                        
377e : 4d3302                   eor abst
                                tst_ax  absrlo,absflo,0
3781 : 08              >            php         ;save flags
3782 : dd5002          >            cmp absrlo,x    ;test result
3785 : d0fe            >            bne *       ;trap
3787 : 68              >            pla         ;load status
                       >            eor_flag 0
3788 : 4930            >            eor #(0|$30)
                       >
378a : dd5402          >            cmp absflo,x    ;test flags
378d : d0fe            >            bne *       ;trap
                        
378f : ca                       dex
3790 : 10e0                     bpl teor4
3792 : a203                     ldx #3
3794 : b51c             teor5   lda zpEO,x
3796 : 8d3302                   sta abst
                                set_ax  absEOa,$ff
                       >            load_flag $ff
3799 : a9ff            >            lda #$ff
                       >
379b : 48              >            pha         ;use stack to load status
379c : bd4c02          >            lda absEOa,x    ;precharge accu
379f : 28              >            plp
                        
37a0 : 4d3302                   eor abst
                                tst_ax  absrlo,absflo,$ff-fnz
37a3 : 08              >            php         ;save flags
37a4 : dd5002          >            cmp absrlo,x    ;test result
37a7 : d0fe            >            bne *       ;trap
37a9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
37aa : 497d            >            eor #($ff-fnz|$30)
                       >
37ac : dd5402          >            cmp absflo,x    ;test flags
37af : d0fe            >            bne *       ;trap
                        
37b1 : ca                       dex
37b2 : 1002                     bpl teor6
                        
37b4 : a203                     ldx #3      ;zp,x
37b6 :                  teor6
                                set_ax  absEOa,0
                       >            load_flag 0
37b6 : a900            >            lda #0
                       >
37b8 : 48              >            pha         ;use stack to load status
37b9 : bd4c02          >            lda absEOa,x    ;precharge accu
37bc : 28              >            plp
                        
37bd : 551c                     eor zpEO,x
                                tst_ax  absrlo,absflo,0
37bf : 08              >            php         ;save flags
37c0 : dd5002          >            cmp absrlo,x    ;test result
37c3 : d0fe            >            bne *       ;trap
37c5 : 68              >            pla         ;load status
                       >            eor_flag 0
37c6 : 4930            >            eor #(0|$30)
                       >
37c8 : dd5402          >            cmp absflo,x    ;test flags
37cb : d0fe            >            bne *       ;trap
                        
37cd : ca                       dex
37ce : 10e6                     bpl teor6
37d0 : a203                     ldx #3
37d2 :                  teor7
                                set_ax  absEOa,$ff
                       >            load_flag $ff
37d2 : a9ff            >            lda #$ff
                       >
37d4 : 48              >            pha         ;use stack to load status
37d5 : bd4c02          >            lda absEOa,x    ;precharge accu
37d8 : 28              >            plp
                        
37d9 : 551c                     eor zpEO,x
                                tst_ax  absrlo,absflo,$ff-fnz
37db : 08              >            php         ;save flags
37dc : dd5002          >            cmp absrlo,x    ;test result
37df : d0fe            >            bne *       ;trap
37e1 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
37e2 : 497d            >            eor #($ff-fnz|$30)
                       >
37e4 : dd5402          >            cmp absflo,x    ;test flags
37e7 : d0fe            >            bne *       ;trap
                        
37e9 : ca                       dex
37ea : 10e6                     bpl teor7
                        
37ec : a203                     ldx #3      ;abs,x
37ee :                  teor8
                                set_ax  absEOa,0
                       >            load_flag 0
37ee : a900            >            lda #0
                       >
37f0 : 48              >            pha         ;use stack to load status
37f1 : bd4c02          >            lda absEOa,x    ;precharge accu
37f4 : 28              >            plp
                        
37f5 : 5d4002                   eor absEO,x
                                tst_ax  absrlo,absflo,0
37f8 : 08              >            php         ;save flags
37f9 : dd5002          >            cmp absrlo,x    ;test result
37fc : d0fe            >            bne *       ;trap
37fe : 68              >            pla         ;load status
                       >            eor_flag 0
37ff : 4930            >            eor #(0|$30)
                       >
3801 : dd5402          >            cmp absflo,x    ;test flags
3804 : d0fe            >            bne *       ;trap
                        
3806 : ca                       dex
3807 : 10e5                     bpl teor8
3809 : a203                     ldx #3
380b :                  teor9
                                set_ax  absEOa,$ff
                       >            load_flag $ff
380b : a9ff            >            lda #$ff
                       >
380d : 48              >            pha         ;use stack to load status
380e : bd4c02          >            lda absEOa,x    ;precharge accu
3811 : 28              >            plp
                        
3812 : 5d4002                   eor absEO,x
                                tst_ax  absrlo,absflo,$ff-fnz
3815 : 08              >            php         ;save flags
3816 : dd5002          >            cmp absrlo,x    ;test result
3819 : d0fe            >            bne *       ;trap
381b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
381c : 497d            >            eor #($ff-fnz|$30)
                       >
381e : dd5402          >            cmp absflo,x    ;test flags
3821 : d0fe            >            bne *       ;trap
                        
3823 : ca                       dex
3824 : 10e5                     bpl teor9
                        
3826 : a003                     ldy #3      ;abs,y
3828 :                  teor10
                                set_ay  absEOa,0
                       >            load_flag 0
3828 : a900            >            lda #0
                       >
382a : 48              >            pha         ;use stack to load status
382b : b94c02          >            lda absEOa,y    ;precharge accu
382e : 28              >            plp
                        
382f : 594002                   eor absEO,y
                                tst_ay  absrlo,absflo,0
3832 : 08              >            php         ;save flags
3833 : d95002          >            cmp absrlo,y    ;test result
3836 : d0fe            >            bne *       ;trap
3838 : 68              >            pla         ;load status
                       >            eor_flag 0
3839 : 4930            >            eor #(0|$30)
                       >
383b : d95402          >            cmp absflo,y    ;test flags
383e : d0fe            >            bne *       ;trap
                        
3840 : 88                       dey
3841 : 10e5                     bpl teor10
3843 : a003                     ldy #3
3845 :                  teor11
                                set_ay  absEOa,$ff
                       >            load_flag $ff
3845 : a9ff            >            lda #$ff
                       >
3847 : 48              >            pha         ;use stack to load status
3848 : b94c02          >            lda absEOa,y    ;precharge accu
384b : 28              >            plp
                        
384c : 594002                   eor absEO,y
                                tst_ay  absrlo,absflo,$ff-fnz
384f : 08              >            php         ;save flags
3850 : d95002          >            cmp absrlo,y    ;test result
3853 : d0fe            >            bne *       ;trap
3855 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3856 : 497d            >            eor #($ff-fnz|$30)
                       >
3858 : d95402          >            cmp absflo,y    ;test flags
385b : d0fe            >            bne *       ;trap
                        
385d : 88                       dey
385e : 10e5                     bpl teor11
                        
3860 : a206                     ldx #6      ;(zp,x)
3862 : a003                     ldy #3
3864 :                  teor12
                                set_ay  absEOa,0
                       >            load_flag 0
3864 : a900            >            lda #0
                       >
3866 : 48              >            pha         ;use stack to load status
3867 : b94c02          >            lda absEOa,y    ;precharge accu
386a : 28              >            plp
                        
386b : 413e                     eor (indEO,x)
                                tst_ay  absrlo,absflo,0
386d : 08              >            php         ;save flags
386e : d95002          >            cmp absrlo,y    ;test result
3871 : d0fe            >            bne *       ;trap
3873 : 68              >            pla         ;load status
                       >            eor_flag 0
3874 : 4930            >            eor #(0|$30)
                       >
3876 : d95402          >            cmp absflo,y    ;test flags
3879 : d0fe            >            bne *       ;trap
                        
387b : ca                       dex
387c : ca                       dex
387d : 88                       dey
387e : 10e4                     bpl teor12
3880 : a206                     ldx #6
3882 : a003                     ldy #3
3884 :                  teor13
                                set_ay  absEOa,$ff
                       >            load_flag $ff
3884 : a9ff            >            lda #$ff
                       >
3886 : 48              >            pha         ;use stack to load status
3887 : b94c02          >            lda absEOa,y    ;precharge accu
388a : 28              >            plp
                        
388b : 413e                     eor (indEO,x)
                                tst_ay  absrlo,absflo,$ff-fnz
388d : 08              >            php         ;save flags
388e : d95002          >            cmp absrlo,y    ;test result
3891 : d0fe            >            bne *       ;trap
3893 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3894 : 497d            >            eor #($ff-fnz|$30)
                       >
3896 : d95402          >            cmp absflo,y    ;test flags
3899 : d0fe            >            bne *       ;trap
                        
389b : ca                       dex
389c : ca                       dex
389d : 88                       dey
389e : 10e4                     bpl teor13
                        
38a0 : a003                     ldy #3      ;(zp),y
38a2 :                  teor14
                                set_ay  absEOa,0
                       >            load_flag 0
38a2 : a900            >            lda #0
                       >
38a4 : 48              >            pha         ;use stack to load status
38a5 : b94c02          >            lda absEOa,y    ;precharge accu
38a8 : 28              >            plp
                        
38a9 : 513e                     eor (indEO),y
                                tst_ay  absrlo,absflo,0
38ab : 08              >            php         ;save flags
38ac : d95002          >            cmp absrlo,y    ;test result
38af : d0fe            >            bne *       ;trap
38b1 : 68              >            pla         ;load status
                       >            eor_flag 0
38b2 : 4930            >            eor #(0|$30)
                       >
38b4 : d95402          >            cmp absflo,y    ;test flags
38b7 : d0fe            >            bne *       ;trap
                        
38b9 : 88                       dey
38ba : 10e6                     bpl teor14
38bc : a003                     ldy #3
38be :                  teor15
                                set_ay  absEOa,$ff
                       >            load_flag $ff
38be : a9ff            >            lda #$ff
                       >
38c0 : 48              >            pha         ;use stack to load status
38c1 : b94c02          >            lda absEOa,y    ;precharge accu
38c4 : 28              >            plp
                        
38c5 : 513e                     eor (indEO),y
                                tst_ay  absrlo,absflo,$ff-fnz
38c7 : 08              >            php         ;save flags
38c8 : d95002          >            cmp absrlo,y    ;test result
38cb : d0fe            >            bne *       ;trap
38cd : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
38ce : 497d            >            eor #($ff-fnz|$30)
                       >
38d0 : d95402          >            cmp absflo,y    ;test flags
38d3 : d0fe            >            bne *       ;trap
                        
38d5 : 88                       dey
38d6 : 10e6                     bpl teor15
                        
                        ; OR
38d8 : a203                     ldx #3      ;immediate - self modifying code
38da : b514             tora    lda zpOR,x
38dc : 8de738                   sta torai1
                                set_ax  absORa,0
                       >            load_flag 0
38df : a900            >            lda #0
                       >
38e1 : 48              >            pha         ;use stack to load status
38e2 : bd4402          >            lda absORa,x    ;precharge accu
38e5 : 28              >            plp
                        
38e7 =                  torai1  equ *+1     ;target for immediate operora
38e6 : 0963                     ora #99
                                tst_ax  absrlo,absflo,0
38e8 : 08              >            php         ;save flags
38e9 : dd5002          >            cmp absrlo,x    ;test result
38ec : d0fe            >            bne *       ;trap
38ee : 68              >            pla         ;load status
                       >            eor_flag 0
38ef : 4930            >            eor #(0|$30)
                       >
38f1 : dd5402          >            cmp absflo,x    ;test flags
38f4 : d0fe            >            bne *       ;trap
                        
38f6 : ca                       dex
38f7 : 10e1                     bpl tora
38f9 : a203                     ldx #3
38fb : b514             tora1   lda zpOR,x
38fd : 8d0839                   sta torai2
                                set_ax  absORa,$ff
                       >            load_flag $ff
3900 : a9ff            >            lda #$ff
                       >
3902 : 48              >            pha         ;use stack to load status
3903 : bd4402          >            lda absORa,x    ;precharge accu
3906 : 28              >            plp
                        
3908 =                  torai2  equ *+1     ;target for immediate operora
3907 : 0963                     ora #99
                                tst_ax  absrlo,absflo,$ff-fnz
3909 : 08              >            php         ;save flags
390a : dd5002          >            cmp absrlo,x    ;test result
390d : d0fe            >            bne *       ;trap
390f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3910 : 497d            >            eor #($ff-fnz|$30)
                       >
3912 : dd5402          >            cmp absflo,x    ;test flags
3915 : d0fe            >            bne *       ;trap
                        
3917 : ca                       dex
3918 : 10e1                     bpl tora1
                        
391a : a203                     ldx #3      ;zp
391c : b514             tora2    lda zpOR,x
391e : 850f                     sta zpt
                                set_ax  absORa,0
                       >            load_flag 0
3920 : a900            >            lda #0
                       >
3922 : 48              >            pha         ;use stack to load status
3923 : bd4402          >            lda absORa,x    ;precharge accu
3926 : 28              >            plp
                        
3927 : 050f                     ora zpt
                                tst_ax  absrlo,absflo,0
3929 : 08              >            php         ;save flags
392a : dd5002          >            cmp absrlo,x    ;test result
392d : d0fe            >            bne *       ;trap
392f : 68              >            pla         ;load status
                       >            eor_flag 0
3930 : 4930            >            eor #(0|$30)
                       >
3932 : dd5402          >            cmp absflo,x    ;test flags
3935 : d0fe            >            bne *       ;trap
                        
3937 : ca                       dex
3938 : 10e2                     bpl tora2
393a : a203                     ldx #3
393c : b514             tora3   lda zpOR,x
393e : 850f                     sta zpt
                                set_ax  absORa,$ff
                       >            load_flag $ff
3940 : a9ff            >            lda #$ff
                       >
3942 : 48              >            pha         ;use stack to load status
3943 : bd4402          >            lda absORa,x    ;precharge accu
3946 : 28              >            plp
                        
3947 : 050f                     ora zpt
                                tst_ax  absrlo,absflo,$ff-fnz
3949 : 08              >            php         ;save flags
394a : dd5002          >            cmp absrlo,x    ;test result
394d : d0fe            >            bne *       ;trap
394f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3950 : 497d            >            eor #($ff-fnz|$30)
                       >
3952 : dd5402          >            cmp absflo,x    ;test flags
3955 : d0fe            >            bne *       ;trap
                        
3957 : ca                       dex
3958 : 10e2                     bpl tora3
                        
395a : a203                     ldx #3      ;abs
395c : b514             tora4   lda zpOR,x
395e : 8d3302                   sta abst
                                set_ax  absORa,0
                       >            load_flag 0
3961 : a900            >            lda #0
                       >
3963 : 48              >            pha         ;use stack to load status
3964 : bd4402          >            lda absORa,x    ;precharge accu
3967 : 28              >            plp
                        
3968 : 0d3302                   ora abst
                                tst_ax  absrlo,absflo,0
396b : 08              >            php         ;save flags
396c : dd5002          >            cmp absrlo,x    ;test result
396f : d0fe            >            bne *       ;trap
3971 : 68              >            pla         ;load status
                       >            eor_flag 0
3972 : 4930            >            eor #(0|$30)
                       >
3974 : dd5402          >            cmp absflo,x    ;test flags
3977 : d0fe            >            bne *       ;trap
                        
3979 : ca                       dex
397a : 10e0                     bpl tora4
397c : a203                     ldx #3
397e : b514             tora5   lda zpOR,x
3980 : 8d3302                   sta abst
                                set_ax  absORa,$ff
                       >            load_flag $ff
3983 : a9ff            >            lda #$ff
                       >
3985 : 48              >            pha         ;use stack to load status
3986 : bd4402          >            lda absORa,x    ;precharge accu
3989 : 28              >            plp
                        
398a : 0d3302                   ora abst
                                tst_ax  absrlo,absflo,$ff-fnz
398d : 08              >            php         ;save flags
398e : dd5002          >            cmp absrlo,x    ;test result
3991 : d0fe            >            bne *       ;trap
3993 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3994 : 497d            >            eor #($ff-fnz|$30)
                       >
3996 : dd5402          >            cmp absflo,x    ;test flags
3999 : d0fe            >            bne *       ;trap
                        
399b : ca                       dex
399c : 1002                     bpl tora6
                        
399e : a203                     ldx #3      ;zp,x
39a0 :                  tora6
                                set_ax  absORa,0
                       >            load_flag 0
39a0 : a900            >            lda #0
                       >
39a2 : 48              >            pha         ;use stack to load status
39a3 : bd4402          >            lda absORa,x    ;precharge accu
39a6 : 28              >            plp
                        
39a7 : 1514                     ora zpOR,x
                                tst_ax  absrlo,absflo,0
39a9 : 08              >            php         ;save flags
39aa : dd5002          >            cmp absrlo,x    ;test result
39ad : d0fe            >            bne *       ;trap
39af : 68              >            pla         ;load status
                       >            eor_flag 0
39b0 : 4930            >            eor #(0|$30)
                       >
39b2 : dd5402          >            cmp absflo,x    ;test flags
39b5 : d0fe            >            bne *       ;trap
                        
39b7 : ca                       dex
39b8 : 10e6                     bpl tora6
39ba : a203                     ldx #3
39bc :                  tora7
                                set_ax  absORa,$ff
                       >            load_flag $ff
39bc : a9ff            >            lda #$ff
                       >
39be : 48              >            pha         ;use stack to load status
39bf : bd4402          >            lda absORa,x    ;precharge accu
39c2 : 28              >            plp
                        
39c3 : 1514                     ora zpOR,x
                                tst_ax  absrlo,absflo,$ff-fnz
39c5 : 08              >            php         ;save flags
39c6 : dd5002          >            cmp absrlo,x    ;test result
39c9 : d0fe            >            bne *       ;trap
39cb : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
39cc : 497d            >            eor #($ff-fnz|$30)
                       >
39ce : dd5402          >            cmp absflo,x    ;test flags
39d1 : d0fe            >            bne *       ;trap
                        
39d3 : ca                       dex
39d4 : 10e6                     bpl tora7
                        
39d6 : a203                     ldx #3      ;abs,x
39d8 :                  tora8
                                set_ax  absORa,0
                       >            load_flag 0
39d8 : a900            >            lda #0
                       >
39da : 48              >            pha         ;use stack to load status
39db : bd4402          >            lda absORa,x    ;precharge accu
39de : 28              >            plp
                        
39df : 1d3802                   ora absOR,x
                                tst_ax  absrlo,absflo,0
39e2 : 08              >            php         ;save flags
39e3 : dd5002          >            cmp absrlo,x    ;test result
39e6 : d0fe            >            bne *       ;trap
39e8 : 68              >            pla         ;load status
                       >            eor_flag 0
39e9 : 4930            >            eor #(0|$30)
                       >
39eb : dd5402          >            cmp absflo,x    ;test flags
39ee : d0fe            >            bne *       ;trap
                        
39f0 : ca                       dex
39f1 : 10e5                     bpl tora8
39f3 : a203                     ldx #3
39f5 :                  tora9
                                set_ax  absORa,$ff
                       >            load_flag $ff
39f5 : a9ff            >            lda #$ff
                       >
39f7 : 48              >            pha         ;use stack to load status
39f8 : bd4402          >            lda absORa,x    ;precharge accu
39fb : 28              >            plp
                        
39fc : 1d3802                   ora absOR,x
                                tst_ax  absrlo,absflo,$ff-fnz
39ff : 08              >            php         ;save flags
3a00 : dd5002          >            cmp absrlo,x    ;test result
3a03 : d0fe            >            bne *       ;trap
3a05 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3a06 : 497d            >            eor #($ff-fnz|$30)
                       >
3a08 : dd5402          >            cmp absflo,x    ;test flags
3a0b : d0fe            >            bne *       ;trap
                        
3a0d : ca                       dex
3a0e : 10e5                     bpl tora9
                        
3a10 : a003                     ldy #3      ;abs,y
3a12 :                  tora10
                                set_ay  absORa,0
                       >            load_flag 0
3a12 : a900            >            lda #0
                       >
3a14 : 48              >            pha         ;use stack to load status
3a15 : b94402          >            lda absORa,y    ;precharge accu
3a18 : 28              >            plp
                        
3a19 : 193802                   ora absOR,y
                                tst_ay  absrlo,absflo,0
3a1c : 08              >            php         ;save flags
3a1d : d95002          >            cmp absrlo,y    ;test result
3a20 : d0fe            >            bne *       ;trap
3a22 : 68              >            pla         ;load status
                       >            eor_flag 0
3a23 : 4930            >            eor #(0|$30)
                       >
3a25 : d95402          >            cmp absflo,y    ;test flags
3a28 : d0fe            >            bne *       ;trap
                        
3a2a : 88                       dey
3a2b : 10e5                     bpl tora10
3a2d : a003                     ldy #3
3a2f :                  tora11
                                set_ay  absORa,$ff
                       >            load_flag $ff
3a2f : a9ff            >            lda #$ff
                       >
3a31 : 48              >            pha         ;use stack to load status
3a32 : b94402          >            lda absORa,y    ;precharge accu
3a35 : 28              >            plp
                        
3a36 : 193802                   ora absOR,y
                                tst_ay  absrlo,absflo,$ff-fnz
3a39 : 08              >            php         ;save flags
3a3a : d95002          >            cmp absrlo,y    ;test result
3a3d : d0fe            >            bne *       ;trap
3a3f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3a40 : 497d            >            eor #($ff-fnz|$30)
                       >
3a42 : d95402          >            cmp absflo,y    ;test flags
3a45 : d0fe            >            bne *       ;trap
                        
3a47 : 88                       dey
3a48 : 10e5                     bpl tora11
                        
3a4a : a206                     ldx #6      ;(zp,x)
3a4c : a003                     ldy #3
3a4e :                  tora12
                                set_ay  absORa,0
                       >            load_flag 0
3a4e : a900            >            lda #0
                       >
3a50 : 48              >            pha         ;use stack to load status
3a51 : b94402          >            lda absORa,y    ;precharge accu
3a54 : 28              >            plp
                        
3a55 : 0146                     ora (indOR,x)
                                tst_ay  absrlo,absflo,0
3a57 : 08              >            php         ;save flags
3a58 : d95002          >            cmp absrlo,y    ;test result
3a5b : d0fe            >            bne *       ;trap
3a5d : 68              >            pla         ;load status
                       >            eor_flag 0
3a5e : 4930            >            eor #(0|$30)
                       >
3a60 : d95402          >            cmp absflo,y    ;test flags
3a63 : d0fe            >            bne *       ;trap
                        
3a65 : ca                       dex
3a66 : ca                       dex
3a67 : 88                       dey
3a68 : 10e4                     bpl tora12
3a6a : a206                     ldx #6
3a6c : a003                     ldy #3
3a6e :                  tora13
                                set_ay  absORa,$ff
                       >            load_flag $ff
3a6e : a9ff            >            lda #$ff
                       >
3a70 : 48              >            pha         ;use stack to load status
3a71 : b94402          >            lda absORa,y    ;precharge accu
3a74 : 28              >            plp
                        
3a75 : 0146                     ora (indOR,x)
                                tst_ay  absrlo,absflo,$ff-fnz
3a77 : 08              >            php         ;save flags
3a78 : d95002          >            cmp absrlo,y    ;test result
3a7b : d0fe            >            bne *       ;trap
3a7d : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3a7e : 497d            >            eor #($ff-fnz|$30)
                       >
3a80 : d95402          >            cmp absflo,y    ;test flags
3a83 : d0fe            >            bne *       ;trap
                        
3a85 : ca                       dex
3a86 : ca                       dex
3a87 : 88                       dey
3a88 : 10e4                     bpl tora13
                        
3a8a : a003                     ldy #3      ;(zp),y
3a8c :                  tora14
                                set_ay  absORa,0
                       >            load_flag 0
3a8c : a900            >            lda #0
                       >
3a8e : 48              >            pha         ;use stack to load status
3a8f : b94402          >            lda absORa,y    ;precharge accu
3a92 : 28              >            plp
                        
3a93 : 1146                     ora (indOR),y
                                tst_ay  absrlo,absflo,0
3a95 : 08              >            php         ;save flags
3a96 : d95002          >            cmp absrlo,y    ;test result
3a99 : d0fe            >            bne *       ;trap
3a9b : 68              >            pla         ;load status
                       >            eor_flag 0
3a9c : 4930            >            eor #(0|$30)
                       >
3a9e : d95402          >            cmp absflo,y    ;test flags
3aa1 : d0fe            >            bne *       ;trap
                        
3aa3 : 88                       dey
3aa4 : 10e6                     bpl tora14
3aa6 : a003                     ldy #3
3aa8 :                  tora15
                                set_ay  absORa,$ff
                       >            load_flag $ff
3aa8 : a9ff            >            lda #$ff
                       >
3aaa : 48              >            pha         ;use stack to load status
3aab : b94402          >            lda absORa,y    ;precharge accu
3aae : 28              >            plp
                        
3aaf : 1146                     ora (indOR),y
                                tst_ay  absrlo,absflo,$ff-fnz
3ab1 : 08              >            php         ;save flags
3ab2 : d95002          >            cmp absrlo,y    ;test result
3ab5 : d0fe            >            bne *       ;trap
3ab7 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3ab8 : 497d            >            eor #($ff-fnz|$30)
                       >
3aba : d95402          >            cmp absflo,y    ;test flags
3abd : d0fe            >            bne *       ;trap
                        
3abf : 88                       dey
3ac0 : 10e6                     bpl tora15
                            if I_flag = 3
3ac2 : 58                       cli
                            endif
                        
                        ; full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
3ac3 : d8                       cld
                        ;        sei
3ac4 : a258                     ldx #ad2        ;for indexed test
3ac6 : a0ff                     ldy #$ff        ;max range
3ac8 : a900                     lda #0          ;start with adding zeroes & no carry
3aca : 8556                     sta adfc        ;carry in - for diag
3acc : 8557                     sta ad1         ;operand 1 - accumulator
3ace : 8558                     sta ad2         ;operand 2 - memory or immediate
3ad0 : 8d5802                   sta ada2        ;non zp
3ad3 : 8559                     sta adrl        ;expected result bits 0-7
3ad5 : 855a                     sta adrh        ;expected result bit 8 (carry out)
3ad7 : a9ff                     lda #$ff        ;complemented operand 2 for subtract
3ad9 : 855c                     sta sb2
3adb : 8d5902                   sta sba2        ;non zp
3ade : a902                     lda #2          ;expected Z-flag
3ae0 : 855b                     sta adrf
3ae2 : 18               tadd    clc             ;test with carry clear
3ae3 : 20e93c                   jsr chkadd
3ae6 : e656                     inc adfc        ;now with carry
3ae8 : e659                     inc adrl        ;result +1
3aea : 08                       php             ;save N & Z from low result
3aeb : 08                       php
3aec : 68                       pla             ;accu holds expected flags
3aed : 2982                     and #$82        ;mask N & Z
3aef : 28                       plp
3af0 : d002                     bne tadd1
3af2 : e65a                     inc adrh        ;result bit 8 - carry
3af4 : 055a             tadd1   ora adrh        ;merge C to expected flags
3af6 : 855b                     sta adrf        ;save expected flags except overflow
3af8 : 38                       sec             ;test with carry set
3af9 : 20e93c                   jsr chkadd
3afc : c656                     dec adfc        ;same for operand +1 but no carry
3afe : e657                     inc ad1
3b00 : d0e0                     bne tadd        ;iterate op1
3b02 : a900                     lda #0          ;preset result to op2 when op1 = 0
3b04 : 855a                     sta adrh
3b06 : ee5802                   inc ada2
3b09 : e658                     inc ad2
3b0b : 08                       php             ;save NZ as operand 2 becomes the new result
3b0c : 68                       pla
3b0d : 2982                     and #$82        ;mask N00000Z0
3b0f : 855b                     sta adrf        ;no need to check carry as we are adding to 0
3b11 : c65c                     dec sb2         ;complement subtract operand 2
3b13 : ce5902                   dec sba2
3b16 : a558                     lda ad2
3b18 : 8559                     sta adrl
3b1a : d0c6                     bne tadd        ;iterate op2
                        
                        ; decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, N V Z flags are ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
3b1c : f8                       sed
                        ;        sei
3b1d : a258                     ldx #ad2        ;for indexed test
3b1f : a0ff                     ldy #$ff        ;max range
3b21 : a999                     lda #$99        ;start with adding 99 to 99 with carry
3b23 : 8557                     sta ad1         ;operand 1 - accumulator
3b25 : 8558                     sta ad2         ;operand 2 - memory or immediate
3b27 : 8d5802                   sta ada2        ;non zp
3b2a : 8559                     sta adrl        ;expected result bits 0-7
3b2c : a901                     lda #1          ;set carry in & out
3b2e : 8556                     sta adfc        ;carry in - for diag
3b30 : 855a                     sta adrh        ;expected result bit 8 (carry out)
3b32 : a900                     lda #0          ;complemented operand 2 for subtract
3b34 : 855c                     sta sb2
3b36 : 8d5902                   sta sba2        ;non zp
3b39 : 38               tdad    sec             ;test with carry set
3b3a : 20b83b                   jsr chkdad
3b3d : c656                     dec adfc        ;now with carry clear
3b3f : a559                     lda adrl        ;decimal adjust result
3b41 : d008                     bne tdad1       ;skip clear carry & preset result 99 (9A-1)
3b43 : c65a                     dec adrh
3b45 : a999                     lda #$99
3b47 : 8559                     sta adrl
3b49 : d012                     bne tdad3
3b4b : 290f             tdad1   and #$f         ;lower nibble mask
3b4d : d00c                     bne tdad2       ;no decimal adjust needed
3b4f : c659                     dec adrl        ;decimal adjust (?0-6)
3b51 : c659                     dec adrl
3b53 : c659                     dec adrl
3b55 : c659                     dec adrl
3b57 : c659                     dec adrl
3b59 : c659                     dec adrl
3b5b : c659             tdad2   dec adrl        ;result -1
3b5d : 18               tdad3   clc             ;test with carry clear
3b5e : 20b83b                   jsr chkdad
3b61 : e656                     inc adfc        ;same for operand -1 but with carry
3b63 : a557                     lda ad1         ;decimal adjust operand 1
3b65 : f015                     beq tdad5       ;iterate operand 2
3b67 : 290f                     and #$f         ;lower nibble mask
3b69 : d00c                     bne tdad4       ;skip decimal adjust
3b6b : c657                     dec ad1         ;decimal adjust (?0-6)
3b6d : c657                     dec ad1
3b6f : c657                     dec ad1
3b71 : c657                     dec ad1
3b73 : c657                     dec ad1
3b75 : c657                     dec ad1
3b77 : c657             tdad4   dec ad1         ;operand 1 -1
3b79 : 4c393b                   jmp tdad        ;iterate op1
                        
3b7c : a999             tdad5   lda #$99        ;precharge op1 max
3b7e : 8557                     sta ad1
3b80 : a558                     lda ad2         ;decimal adjust operand 2
3b82 : f030                     beq tdad7       ;end of iteration
3b84 : 290f                     and #$f         ;lower nibble mask
3b86 : d018                     bne tdad6       ;skip decimal adjust
3b88 : c658                     dec ad2         ;decimal adjust (?0-6)
3b8a : c658                     dec ad2
3b8c : c658                     dec ad2
3b8e : c658                     dec ad2
3b90 : c658                     dec ad2
3b92 : c658                     dec ad2
3b94 : e65c                     inc sb2         ;complemented decimal adjust for subtract (?9+6)
3b96 : e65c                     inc sb2
3b98 : e65c                     inc sb2
3b9a : e65c                     inc sb2
3b9c : e65c                     inc sb2
3b9e : e65c                     inc sb2
3ba0 : c658             tdad6   dec ad2         ;operand 2 -1
3ba2 : e65c                     inc sb2         ;complemeted operand for subtract
3ba4 : a55c                     lda sb2
3ba6 : 8d5902                   sta sba2        ;copy as non zp operand
3ba9 : a558                     lda ad2
3bab : 8d5802                   sta ada2        ;copy as non zp operand
3bae : 8559                     sta adrl        ;new result since op1+carry=00+carry +op2=op2
3bb0 : e65a                     inc adrh        ;result carry
3bb2 : d085                     bne tdad        ;iterate op2
3bb4 : d8               tdad7   cld
                        
                        ; S U C C E S S ************************************************
                        ; -------------
3bb5 : 4cb53b                   jmp *           ;if you get here everything went well
                        ; -------------
                        ; S U C C E S S ************************************************
                        
                        ; core subroutine of the decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, N V Z flags are ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
3bb8 :                  chkdad
                        ; decimal ADC / SBC zp
3bb8 : 08                       php             ;save carry for subtract
3bb9 : a557                     lda ad1
3bbb : 6558                     adc ad2         ;perform add
3bbd : 08                       php
3bbe : c559                     cmp adrl        ;check result
3bc0 : d0fe                     bne *           ;bad result
3bc2 : 68                       pla             ;check flags
3bc3 : 2901                     and #1          ;mask carry
3bc5 : c55a                     cmp adrh
3bc7 : d0fe                     bne *           ;bad carry
3bc9 : 28                       plp
3bca : 08                       php             ;save carry for next add
3bcb : a557                     lda ad1
3bcd : e55c                     sbc sb2         ;perform subtract
3bcf : 08                       php
3bd0 : c559                     cmp adrl        ;check result
3bd2 : d0fe                     bne *           ;bad result
3bd4 : 68                       pla             ;check flags
3bd5 : 2901                     and #1          ;mask carry
3bd7 : c55a                     cmp adrh
3bd9 : d0fe                     bne *           ;bad flags
3bdb : 28                       plp
                        ; decimal ADC / SBC abs
3bdc : 08                       php             ;save carry for subtract
3bdd : a557                     lda ad1
3bdf : 6d5802                   adc ada2        ;perform add
3be2 : 08                       php
3be3 : c559                     cmp adrl        ;check result
3be5 : d0fe                     bne *           ;bad result
3be7 : 68                       pla             ;check flags
3be8 : 2901                     and #1          ;mask carry
3bea : c55a                     cmp adrh
3bec : d0fe                     bne *           ;bad carry
3bee : 28                       plp
3bef : 08                       php             ;save carry for next add
3bf0 : a557                     lda ad1
3bf2 : ed5902                   sbc sba2        ;perform subtract
3bf5 : 08                       php
3bf6 : c559                     cmp adrl        ;check result
3bf8 : d0fe                     bne *           ;bad result
3bfa : 68                       pla             ;check flags
3bfb : 2901                     and #1          ;mask carry
3bfd : c55a                     cmp adrh
3bff : d0fe                     bne *           ;bad carry
3c01 : 28                       plp
                        ; decimal ADC / SBC #
3c02 : 08                       php             ;save carry for subtract
3c03 : a558                     lda ad2
3c05 : 8d0b3c                   sta chkdadi     ;self modify immediate
3c08 : a557                     lda ad1
3c0b =                  chkdadi = * + 1         ;operand of the immediate ADC
3c0a : 6900                     adc #0          ;perform add
3c0c : 08                       php
3c0d : c559                     cmp adrl        ;check result
3c0f : d0fe                     bne *           ;bad result
3c11 : 68                       pla             ;check flags
3c12 : 2901                     and #1          ;mask carry
3c14 : c55a                     cmp adrh
3c16 : d0fe                     bne *           ;bad carry
3c18 : 28                       plp
3c19 : 08                       php             ;save carry for next add
3c1a : a55c                     lda sb2
3c1c : 8d223c                   sta chkdsbi     ;self modify immediate
3c1f : a557                     lda ad1
3c22 =                  chkdsbi = * + 1         ;operand of the immediate SBC
3c21 : e900                     sbc #0          ;perform subtract
3c23 : 08                       php
3c24 : c559                     cmp adrl        ;check result
3c26 : d0fe                     bne *           ;bad result
3c28 : 68                       pla             ;check flags
3c29 : 2901                     and #1          ;mask carry
3c2b : c55a                     cmp adrh
3c2d : d0fe                     bne *           ;bad carry
3c2f : 28                       plp
                        ; decimal ADC / SBC zp,x
3c30 : 08                       php             ;save carry for subtract
3c31 : a557                     lda ad1
3c33 : 7500                     adc 0,x         ;perform add
3c35 : 08                       php
3c36 : c559                     cmp adrl        ;check result
3c38 : d0fe                     bne *           ;bad result
3c3a : 68                       pla             ;check flags
3c3b : 2901                     and #1          ;mask carry
3c3d : c55a                     cmp adrh
3c3f : d0fe                     bne *           ;bad carry
3c41 : 28                       plp
3c42 : 08                       php             ;save carry for next add
3c43 : a557                     lda ad1
3c45 : f504                     sbc sb2-ad2,x   ;perform subtract
3c47 : 08                       php
3c48 : c559                     cmp adrl        ;check result
3c4a : d0fe                     bne *           ;bad result
3c4c : 68                       pla             ;check flags
3c4d : 2901                     and #1          ;mask carry
3c4f : c55a                     cmp adrh
3c51 : d0fe                     bne *           ;bad carry
3c53 : 28                       plp
                        ; decimal ADC / SBC abs,x
3c54 : 08                       php             ;save carry for subtract
3c55 : a557                     lda ad1
3c57 : 7d0002                   adc ada2-ad2,x  ;perform add
3c5a : 08                       php
3c5b : c559                     cmp adrl        ;check result
3c5d : d0fe                     bne *           ;bad result
3c5f : 68                       pla             ;check flags
3c60 : 2901                     and #1          ;mask carry
3c62 : c55a                     cmp adrh
3c64 : d0fe                     bne *           ;bad carry
3c66 : 28                       plp
3c67 : 08                       php             ;save carry for next add
3c68 : a557                     lda ad1
3c6a : fd0102                   sbc sba2-ad2,x  ;perform subtract
3c6d : 08                       php
3c6e : c559                     cmp adrl        ;check result
3c70 : d0fe                     bne *           ;bad result
3c72 : 68                       pla             ;check flags
3c73 : 2901                     and #1          ;mask carry
3c75 : c55a                     cmp adrh
3c77 : d0fe                     bne *           ;bad carry
3c79 : 28                       plp
                        ; decimal ADC / SBC abs,y
3c7a : 08                       php             ;save carry for subtract
3c7b : a557                     lda ad1
3c7d : 795901                   adc ada2-$ff,y  ;perform add
3c80 : 08                       php
3c81 : c559                     cmp adrl        ;check result
3c83 : d0fe                     bne *           ;bad result
3c85 : 68                       pla             ;check flags
3c86 : 2901                     and #1          ;mask carry
3c88 : c55a                     cmp adrh
3c8a : d0fe                     bne *           ;bad carry
3c8c : 28                       plp
3c8d : 08                       php             ;save carry for next add
3c8e : a557                     lda ad1
3c90 : f95a01                   sbc sba2-$ff,y  ;perform subtract
3c93 : 08                       php
3c94 : c559                     cmp adrl        ;check result
3c96 : d0fe                     bne *           ;bad result
3c98 : 68                       pla             ;check flags
3c99 : 2901                     and #1          ;mask carry
3c9b : c55a                     cmp adrh
3c9d : d0fe                     bne *           ;bad carry
3c9f : 28                       plp
                        ; decimal ADC / SBC (zp,x)
3ca0 : 08                       php             ;save carry for subtract
3ca1 : a557                     lda ad1
3ca3 : 61f6                     adc (lo adi2-ad2,x) ;perform add
3ca5 : 08                       php
3ca6 : c559                     cmp adrl        ;check result
3ca8 : d0fe                     bne *           ;bad result
3caa : 68                       pla             ;check flags
3cab : 2901                     and #1          ;mask carry
3cad : c55a                     cmp adrh
3caf : d0fe                     bne *           ;bad carry
3cb1 : 28                       plp
3cb2 : 08                       php             ;save carry for next add
3cb3 : a557                     lda ad1
3cb5 : e1f8                     sbc (lo sbi2-ad2,x) ;perform subtract
3cb7 : 08                       php
3cb8 : c559                     cmp adrl        ;check result
3cba : d0fe                     bne *           ;bad result
3cbc : 68                       pla             ;check flags
3cbd : 2901                     and #1          ;mask carry
3cbf : c55a                     cmp adrh
3cc1 : d0fe                     bne *           ;bad carry
3cc3 : 28                       plp
                        ; decimal ADC / SBC (abs),y
3cc4 : 08                       php             ;save carry for subtract
3cc5 : a557                     lda ad1
3cc7 : 7152                     adc (adiy2),y   ;perform add
3cc9 : 08                       php
3cca : c559                     cmp adrl        ;check result
3ccc : d0fe                     bne *           ;bad result
3cce : 68                       pla             ;check flags
3ccf : 2901                     and #1          ;mask carry
3cd1 : c55a                     cmp adrh
3cd3 : d0fe                     bne *           ;bad carry
3cd5 : 28                       plp
3cd6 : 08                       php             ;save carry for next add
3cd7 : a557                     lda ad1
3cd9 : f154                     sbc (sbiy2),y   ;perform subtract
3cdb : 08                       php
3cdc : c559                     cmp adrl        ;check result
3cde : d0fe                     bne *           ;bad result
3ce0 : 68                       pla             ;check flags
3ce1 : 2901                     and #1          ;mask carry
3ce3 : c55a                     cmp adrh
3ce5 : d0fe                     bne *           ;bad carry
3ce7 : 28                       plp
3ce8 : 60                       rts
                        
                        ; core subroutine of the full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
3ce9 : a55b             chkadd  lda adrf        ;add V-flag if overflow
3ceb : 2983                     and #$83        ;keep N-----ZC / clear V
3ced : 48                       pha
3cee : a557                     lda ad1         ;test sign unequal between operands
3cf0 : 4558                     eor ad2
3cf2 : 300a                     bmi ckad1       ;no overflow possible - operands have different sign
3cf4 : a557                     lda ad1         ;test sign equal between operands and result
3cf6 : 4559                     eor adrl
3cf8 : 1004                     bpl ckad1       ;no overflow occured - operand and result have same sign
3cfa : 68                       pla
3cfb : 0940                     ora #$40        ;set V
3cfd : 48                       pha
3cfe : 68               ckad1   pla
3cff : 855b                     sta adrf        ;save expected flags
                        ; binary ADC / SBC zp
3d01 : 08                       php             ;save carry for subtract
3d02 : a557                     lda ad1
3d04 : 6558                     adc ad2         ;perform add
3d06 : 08                       php
3d07 : c559                     cmp adrl        ;check result
3d09 : d0fe                     bne *           ;bad result
3d0b : 68                       pla             ;check flags
3d0c : 29c3                     and #$c3        ;mask NV----ZC
3d0e : c55b                     cmp adrf
3d10 : d0fe                     bne *           ;bad flags
3d12 : 28                       plp
3d13 : 08                       php             ;save carry for next add
3d14 : a557                     lda ad1
3d16 : e55c                     sbc sb2         ;perform subtract
3d18 : 08                       php
3d19 : c559                     cmp adrl        ;check result
3d1b : d0fe                     bne *           ;bad result
3d1d : 68                       pla             ;check flags
3d1e : 29c3                     and #$c3        ;mask NV----ZC
3d20 : c55b                     cmp adrf
3d22 : d0fe                     bne *           ;bad flags
3d24 : 28                       plp
                        ; binary ADC / SBC abs
3d25 : 08                       php             ;save carry for subtract
3d26 : a557                     lda ad1
3d28 : 6d5802                   adc ada2        ;perform add
3d2b : 08                       php
3d2c : c559                     cmp adrl        ;check result
3d2e : d0fe                     bne *           ;bad result
3d30 : 68                       pla             ;check flags
3d31 : 29c3                     and #$c3        ;mask NV----ZC
3d33 : c55b                     cmp adrf
3d35 : d0fe                     bne *           ;bad flags
3d37 : 28                       plp
3d38 : 08                       php             ;save carry for next add
3d39 : a557                     lda ad1
3d3b : ed5902                   sbc sba2        ;perform subtract
3d3e : 08                       php
3d3f : c559                     cmp adrl        ;check result
3d41 : d0fe                     bne *           ;bad result
3d43 : 68                       pla             ;check flags
3d44 : 29c3                     and #$c3        ;mask NV----ZC
3d46 : c55b                     cmp adrf
3d48 : d0fe                     bne *           ;bad flags
3d4a : 28                       plp
                        ; binary ADC / SBC #
3d4b : 08                       php             ;save carry for subtract
3d4c : a558                     lda ad2
3d4e : 8d543d                   sta chkadi      ;self modify immediate
3d51 : a557                     lda ad1
3d54 =                  chkadi  = * + 1         ;operand of the immediate ADC
3d53 : 6900                     adc #0          ;perform add
3d55 : 08                       php
3d56 : c559                     cmp adrl        ;check result
3d58 : d0fe                     bne *           ;bad result
3d5a : 68                       pla             ;check flags
3d5b : 29c3                     and #$c3        ;mask NV----ZC
3d5d : c55b                     cmp adrf
3d5f : d0fe                     bne *           ;bad flags
3d61 : 28                       plp
3d62 : 08                       php             ;save carry for next add
3d63 : a55c                     lda sb2
3d65 : 8d6b3d                   sta chksbi      ;self modify immediate
3d68 : a557                     lda ad1
3d6b =                  chksbi  = * + 1         ;operand of the immediate SBC
3d6a : e900                     sbc #0          ;perform subtract
3d6c : 08                       php
3d6d : c559                     cmp adrl        ;check result
3d6f : d0fe                     bne *           ;bad result
3d71 : 68                       pla             ;check flags
3d72 : 29c3                     and #$c3        ;mask NV----ZC
3d74 : c55b                     cmp adrf
3d76 : d0fe                     bne *           ;bad flags
3d78 : 28                       plp
                        ; binary ADC / SBC zp,x
3d79 : 08                       php             ;save carry for subtract
3d7a : a557                     lda ad1
3d7c : 7500                     adc 0,x         ;perform add
3d7e : 08                       php
3d7f : c559                     cmp adrl        ;check result
3d81 : d0fe                     bne *           ;bad result
3d83 : 68                       pla             ;check flags
3d84 : 29c3                     and #$c3        ;mask NV----ZC
3d86 : c55b                     cmp adrf
3d88 : d0fe                     bne *           ;bad flags
3d8a : 28                       plp
3d8b : 08                       php             ;save carry for next add
3d8c : a557                     lda ad1
3d8e : f504                     sbc sb2-ad2,x   ;perform subtract
3d90 : 08                       php
3d91 : c559                     cmp adrl        ;check result
3d93 : d0fe                     bne *           ;bad result
3d95 : 68                       pla             ;check flags
3d96 : 29c3                     and #$c3        ;mask NV----ZC
3d98 : c55b                     cmp adrf
3d9a : d0fe                     bne *           ;bad flags
3d9c : 28                       plp
                        ; binary ADC / SBC abs,x
3d9d : 08                       php             ;save carry for subtract
3d9e : a557                     lda ad1
3da0 : 7d0002                   adc ada2-ad2,x  ;perform add
3da3 : 08                       php
3da4 : c559                     cmp adrl        ;check result
3da6 : d0fe                     bne *           ;bad result
3da8 : 68                       pla             ;check flags
3da9 : 29c3                     and #$c3        ;mask NV----ZC
3dab : c55b                     cmp adrf
3dad : d0fe                     bne *           ;bad flags
3daf : 28                       plp
3db0 : 08                       php             ;save carry for next add
3db1 : a557                     lda ad1
3db3 : fd0102                   sbc sba2-ad2,x  ;perform subtract
3db6 : 08                       php
3db7 : c559                     cmp adrl        ;check result
3db9 : d0fe                     bne *           ;bad result
3dbb : 68                       pla             ;check flags
3dbc : 29c3                     and #$c3        ;mask NV----ZC
3dbe : c55b                     cmp adrf
3dc0 : d0fe                     bne *           ;bad flags
3dc2 : 28                       plp
                        ; binary ADC / SBC abs,y
3dc3 : 08                       php             ;save carry for subtract
3dc4 : a557                     lda ad1
3dc6 : 795901                   adc ada2-$ff,y  ;perform add
3dc9 : 08                       php
3dca : c559                     cmp adrl        ;check result
3dcc : d0fe                     bne *           ;bad result
3dce : 68                       pla             ;check flags
3dcf : 29c3                     and #$c3        ;mask NV----ZC
3dd1 : c55b                     cmp adrf
3dd3 : d0fe                     bne *           ;bad flags
3dd5 : 28                       plp
3dd6 : 08                       php             ;save carry for next add
3dd7 : a557                     lda ad1
3dd9 : f95a01                   sbc sba2-$ff,y  ;perform subtract
3ddc : 08                       php
3ddd : c559                     cmp adrl        ;check result
3ddf : d0fe                     bne *           ;bad result
3de1 : 68                       pla             ;check flags
3de2 : 29c3                     and #$c3        ;mask NV----ZC
3de4 : c55b                     cmp adrf
3de6 : d0fe                     bne *           ;bad flags
3de8 : 28                       plp
                        ; binary ADC / SBC (zp,x)
3de9 : 08                       php             ;save carry for subtract
3dea : a557                     lda ad1
3dec : 61f6                     adc (lo adi2-ad2,x) ;perform add
3dee : 08                       php
3def : c559                     cmp adrl        ;check result
3df1 : d0fe                     bne *           ;bad result
3df3 : 68                       pla             ;check flags
3df4 : 29c3                     and #$c3        ;mask NV----ZC
3df6 : c55b                     cmp adrf
3df8 : d0fe                     bne *           ;bad flags
3dfa : 28                       plp
3dfb : 08                       php             ;save carry for next add
3dfc : a557                     lda ad1
3dfe : e1f8                     sbc (lo sbi2-ad2,x) ;perform subtract
3e00 : 08                       php
3e01 : c559                     cmp adrl        ;check result
3e03 : d0fe                     bne *           ;bad result
3e05 : 68                       pla             ;check flags
3e06 : 29c3                     and #$c3        ;mask NV----ZC
3e08 : c55b                     cmp adrf
3e0a : d0fe                     bne *           ;bad flags
3e0c : 28                       plp
                        ; binary ADC / SBC (abs),y
3e0d : 08                       php             ;save carry for subtract
3e0e : a557                     lda ad1
3e10 : 7152                     adc (adiy2),y   ;perform add
3e12 : 08                       php
3e13 : c559                     cmp adrl        ;check result
3e15 : d0fe                     bne *           ;bad result
3e17 : 68                       pla             ;check flags
3e18 : 29c3                     and #$c3        ;mask NV----ZC
3e1a : c55b                     cmp adrf
3e1c : d0fe                     bne *           ;bad flags
3e1e : 28                       plp
3e1f : 08                       php             ;save carry for next add
3e20 : a557                     lda ad1
3e22 : f154                     sbc (sbiy2),y   ;perform subtract
3e24 : 08                       php
3e25 : c559                     cmp adrl        ;check result
3e27 : d0fe                     bne *           ;bad result
3e29 : 68                       pla             ;check flags
3e2a : 29c3                     and #$c3        ;mask NV----ZC
3e2c : c55b                     cmp adrf
3e2e : d0fe                     bne *           ;bad flags
3e30 : 28                       plp
3e31 : 60                       rts
                        
                        ; target for the jump absolute test
3e32 : 88                       dey
3e33 : 88                       dey
3e34 :                  test_far
3e34 : 08                       php             ;either SP or Y count will fail, if we do not hit
3e35 : 88                       dey
3e36 : 88                       dey
3e37 : 88                       dey
3e38 : 28                       plp
3e39 : b0fe                     bcs *           ;flags loaded?
3e3b : 70fe                     bvs *
3e3d : 30fe                     bmi *
3e3f : f0fe                     beq *
3e41 : c946                     cmp #'F'        ;registers loaded?
3e43 : d0fe                     bne *
3e45 : e041                     cpx #'A'
3e47 : d0fe                     bne *
3e49 : c04f                     cpy #('R'-3)
3e4b : d0fe                     bne *
3e4d : 48                       pha             ;save a,x
3e4e : 8a                       txa
3e4f : 48                       pha
3e50 : ba                       tsx
3e51 : e0fd                     cpx #$fd        ;check SP
3e53 : d0fe                     bne *
3e55 : 68                       pla             ;restore x
3e56 : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
3e57 : a9ff            >            lda #$ff
                       >
3e59 : 48              >            pha         ;use stack to load status
3e5a : 28              >            plp
                        
3e5b : 68                       pla             ;restore a
3e5c : e8                       inx             ;return registers with modifications
3e5d : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
3e5f : 4c8212                   jmp far_ret
                        
                        ; target for the jump indirect test
3e62 : 6b3e             ptr_tst_ind dw test_ind
3e64 : cb12             ptr_ind_ret dw ind_ret
3e66 : 4c663e                   jmp *           ;runover protection
3e69 : 88                       dey
3e6a : 88                       dey
3e6b :                  test_ind
3e6b : 08                       php             ;either SP or Y count will fail, if we do not hit
3e6c : 88                       dey
3e6d : 88                       dey
3e6e : 88                       dey
3e6f : 28                       plp
3e70 : b0fe                     bcs *           ;flags loaded?
3e72 : 70fe                     bvs *
3e74 : 30fe                     bmi *
3e76 : f0fe                     beq *
3e78 : c949                     cmp #'I'        ;registers loaded?
3e7a : d0fe                     bne *
3e7c : e04e                     cpx #'N'
3e7e : d0fe                     bne *
3e80 : c041                     cpy #('D'-3)
3e82 : d0fe                     bne *
3e84 : 48                       pha             ;save a,x
3e85 : 8a                       txa
3e86 : 48                       pha
3e87 : ba                       tsx
3e88 : e0fd                     cpx #$fd        ;check SP
3e8a : d0fe                     bne *
3e8c : 68                       pla             ;restore x
3e8d : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
3e8e : a9ff            >            lda #$ff
                       >
3e90 : 48              >            pha         ;use stack to load status
3e91 : 28              >            plp
                        
3e92 : 68                       pla             ;restore a
3e93 : e8                       inx             ;return registers with modifications
3e94 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
3e96 : 6c643e                   jmp (ptr_ind_ret)
3e99 : 4c993e                   jmp *           ;runover protection
                        
                        ; target for the jump subroutine test
3e9c : 88                       dey
3e9d : 88                       dey
3e9e :                  test_jsr
3e9e : 08                       php             ;either SP or Y count will fail, if we do not hit
3e9f : 88                       dey
3ea0 : 88                       dey
3ea1 : 88                       dey
3ea2 : 28                       plp
3ea3 : b0fe                     bcs *           ;flags loaded?
3ea5 : 70fe                     bvs *
3ea7 : 30fe                     bmi *
3ea9 : f0fe                     beq *
3eab : c94a                     cmp #'J'        ;registers loaded?
3ead : d0fe                     bne *
3eaf : e053                     cpx #'S'
3eb1 : d0fe                     bne *
3eb3 : c04f                     cpy #('R'-3)
3eb5 : d0fe                     bne *
3eb7 : 48                       pha             ;save a,x
3eb8 : 8a                       txa
3eb9 : 48                       pha
3eba : ba                       tsx             ;sp -4? (return addr,a,x)
3ebb : e0fb                     cpx #$fb
3ebd : d0fe                     bne *
3ebf : adff01                   lda $1ff        ;propper return on stack
3ec2 : c912                     cmp #hi(jsr_ret)
3ec4 : d0fe                     bne *
3ec6 : adfe01                   lda $1fe
3ec9 : c9f5                     cmp #lo(jsr_ret)
3ecb : d0fe                     bne *
                                set_stat $ff
                       >            load_flag $ff
3ecd : a9ff            >            lda #$ff
                       >
3ecf : 48              >            pha         ;use stack to load status
3ed0 : 28              >            plp
                        
3ed1 : 68                       pla             ;pull x,a
3ed2 : aa                       tax
3ed3 : 68                       pla
3ed4 : e8                       inx             ;return registers with modifications
3ed5 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
3ed7 : 60                       rts
3ed8 : 4cd83e                   jmp *           ;runover protection
                        
                        ;trap in case of unexpected IRQ, NMI, BRK, RESET - BRK test target
3edb :                  nmi_trap
3edb : 4cdb3e                   jmp *           ;check stack for conditions at NMI
3ede :                  res_trap
3ede : 4cde3e                   jmp *           ;unexpected RESET
                        
3ee1 : 88                       dey
3ee2 : 88                       dey
3ee3 :                  irq_trap                ;BRK test or unextpected BRK or IRQ
3ee3 : 08                       php             ;either SP or Y count will fail, if we do not hit
3ee4 : 88                       dey
3ee5 : 88                       dey
3ee6 : 88                       dey
                                ;next 4 traps could be caused by unexpected BRK or IRQ
                                ;check stack for BREAK and originating location
                                ;possible jump/branch into weeds (uninitialized space)
3ee7 : c942                     cmp #'B'        ;registers loaded?
3ee9 : d0fe                     bne *
3eeb : e052                     cpx #'R'
3eed : d0fe                     bne *
3eef : c048                     cpy #('K'-3)
3ef1 : d0fe                     bne *
3ef3 : 855d                     sta irq_a       ;save registers during break test
3ef5 : 865e                     stx irq_x
3ef7 : ba                       tsx             ;test break on stack
3ef8 : bd0201                   lda $102,x
                                cmp_flag 0      ;break test should have B=1
3efb : c930            >            cmp #(0      |$30)&$ff
                        
3efd : d0fe                     bne *           ;trap - no break flag on stack
3eff : 68                       pla
3f00 : c934                     cmp #$34        ;should have added interrupt disable
3f02 : d0fe                     bne *
3f04 : ba                       tsx
3f05 : e0fc                     cpx #$fc        ;sp -3? (return addr, flags)
3f07 : d0fe                     bne *
3f09 : adff01                   lda $1ff        ;propper return on stack
3f0c : c913                     cmp #hi(brk_ret)
3f0e : d0fe                     bne *
3f10 : adfe01                   lda $1fe
3f13 : c920                     cmp #lo(brk_ret)
3f15 : d0fe                     bne *
                                set_stat $ff
                       >            load_flag $ff
3f17 : a9ff            >            lda #$ff
                       >
3f19 : 48              >            pha         ;use stack to load status
3f1a : 28              >            plp
                        
3f1b : a65e                     ldx irq_x
3f1d : e8                       inx             ;return registers with modifications
3f1e : a55d                     lda irq_a
3f20 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1 but original flags should be restored
3f22 : 40                       rti
3f23 : 4c233f                   jmp *           ;runover protection
                        
                        ;copy of data to initialize BSS segment
                            if load_data_direct != 1
                        zp_init
                        zp1_    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
                        zp7f_   db  $7f             ;test pattern for compare
                        zpt_    ds  5               ;store/modify test area
                        ;logical zeropage operands
                        zpOR_   db  0,$1f,$71,$80   ;test pattern for OR
                        zpAN_   db  $0f,$ff,$7f,$80 ;test pattern for AND
                        zpEO_   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
                        ind1_   dw  abs1            ;indirect pointer to pattern in absolute memory
                                dw  abs1+1
                                dw  abs1+2
                                dw  abs1+3
                                dw  abs7f
                        inw1_   dw  abs1-$f8        ;indirect pointer for wrap-test pattern
                        indt_   dw  abst            ;indirect pointer to store area in absolute memory
                                dw  abst+1
                                dw  abst+2
                                dw  abst+3
                        inwt_   dw  abst-$f8        ;indirect pointer for wrap-test store
                        indAN_  dw  absAN           ;indirect pointer to AND pattern in absolute memory
                                dw  absAN+1
                                dw  absAN+2
                                dw  absAN+3
                        indEO_  dw  absEO           ;indirect pointer to EOR pattern in absolute memory
                                dw  absEO+1
                                dw  absEO+2
                                dw  absEO+3
                        indOR_  dw  absOR           ;indirect pointer to OR pattern in absolute memory
                                dw  absOR+1
                                dw  absOR+2
                                dw  absOR+3
                        ;add/subtract operand generation and result/flag prediction
                        adi2_   dw  ada2            ;indirect pointer to operand 2 in absolute memory
                        sbi2_   dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
                        adiy2_  dw  ada2-$ff        ;with offset for indirect indexed
                        sbiy2_  dw  sba2-$ff
                        ;adfc    ds  1               ;carry flag before op
                        ;ad1     ds  1               ;operand 1 - accumulator
                        ;ad2     ds  1               ;operand 2 - memory / immediate
                        ;adrl    ds  1               ;expected result bits 0-7
                        ;adrh    ds  1               ;expected result bit 8 (carry)
                        ;adrf    ds  1               ;expected flags NV0000ZC (not valid in decimal mode)
                        ;sb2     ds  1               ;operand 2 complemented for subtract
                        ;break test interrupt save
                        ;irq_a   ds  1               ;a register
                        ;irq_x   ds  1               ;x register
                        zp_end
                            if (zp_end - zp_init) != (zp_bss_end - zp_bss)
                                ;force assembler error if size is different
                                ERROR ERROR ERROR   ;mismatch between bss and zeropage data
                            endif
                        data_init
                        abs1_   db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
                        abs7f_  db  $7f             ;test pattern for compare
                        ;loads
                        fLDx_   db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
                        rASL_                       ;expected result ASL & ROL -carry
                        rROL_   db  $86,$04,$82,0   ; "
                        rROLc_  db  $87,$05,$83,1   ;expected result ROL +carry
                        rLSR_                       ;expected result LSR & ROR -carry
                        rROR_   db  $61,$41,$20,0   ; "
                        rRORc_  db  $e1,$c1,$a0,$80 ;expected result ROR +carry
                        fASL_                       ;expected flags for shifts
                        fROL_   db  fnc,fc,fn,fz    ;no carry in
                        fROLc_  db  fnc,fc,fn,0     ;carry in
                        fLSR_
                        fROR_   db  fc,0,fc,fz      ;no carry in
                        fRORc_  db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
                        rINC_   db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
                        fINC_   db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        abst_   ds  5               ;store/modify test area
                        ;logical memory operand
                        absOR_  db  0,$1f,$71,$80   ;test pattern for OR
                        absAN_  db  $0f,$ff,$7f,$80 ;test pattern for AND
                        absEO_  db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
                        absORa_ db  0,$f1,$1f,0     ;test pattern for OR
                        absANa_ db  $f0,$ff,$ff,$ff ;test pattern for AND
                        absEOa_ db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
                        absrlo_ db  0,$ff,$7f,$80
                        absflo_ db  fz,fn,0,fn
                        ;add/subtract operand copy
                        ;ada2    ds  1               ;operand 2
                        ;sba2    ds  1               ;operand 2 complemented for subtract
                        data_end
                            if (data_end - data_init) != (data_bss_end - data_bss)
                                ;force assembler error if size is different
                                ERROR ERROR ERROR   ;mismatch between bss and data
                            endif
                            endif                   ;end of RAM init data
                        
                            if ROM_vectors = 1
fffa =                          org $fffa       ;vectors
fffa : db3e                     dw  nmi_trap
fffc : de3e                     dw  res_trap
fffe : e33e                     dw  irq_trap
                            endif
                        
No errors in pass 2.
Wrote binary from address $000a through $ffff.
Total size 65526 bytes.
